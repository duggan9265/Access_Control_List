// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2023.2 (win64) Build 4029153 Fri Oct 13 20:14:34 MDT 2023
// Date        : Wed Apr 16 15:28:54 2025
// Host        : Lap-DaDu-050 running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim
//               c:/ACL_Garden/Access_Control_List/ACL_proj/ACL.gen/sources_1/bd/ACL/ip/ACL_axi_eth_0_0/bd_0/ip/ip_2/bd_fd73_pcs_pma_0_sim_netlist.v
// Design      : bd_fd73_pcs_pma_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xczu9eg-ffvb1156-2-e
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* EXAMPLE_SIMULATION = "0" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "gig_ethernet_pcs_pma_v16_2_15,Vivado 2023.2" *) 
(* NotValidForBitStream *)
module bd_fd73_pcs_pma_0
   (gtrefclk_p,
    gtrefclk_n,
    gtrefclk_out,
    txp,
    txn,
    rxp,
    rxn,
    resetdone,
    userclk_out,
    userclk2_out,
    rxuserclk_out,
    rxuserclk2_out,
    pma_reset_out,
    mmcm_locked_out,
    independent_clock_bufg,
    sgmii_clk_r,
    sgmii_clk_f,
    sgmii_clk_en,
    gmii_txd,
    gmii_tx_en,
    gmii_tx_er,
    gmii_rxd,
    gmii_rx_dv,
    gmii_rx_er,
    gmii_isolate,
    ext_mdc,
    ext_mdio_i,
    ext_mdio_o,
    ext_mdio_t,
    mdio_t_in,
    mdc,
    mdio_i,
    mdio_o,
    mdio_t,
    phyaddr,
    configuration_vector,
    configuration_valid,
    an_interrupt,
    an_adv_config_vector,
    an_adv_config_val,
    an_restart_config,
    speed_is_10_100,
    speed_is_100,
    status_vector,
    reset,
    gtpowergood,
    signal_detect);
  input gtrefclk_p;
  input gtrefclk_n;
  output gtrefclk_out;
  output txp;
  output txn;
  input rxp;
  input rxn;
  output resetdone;
  output userclk_out;
  output userclk2_out;
  output rxuserclk_out;
  output rxuserclk2_out;
  output pma_reset_out;
  output mmcm_locked_out;
  input independent_clock_bufg;
  output sgmii_clk_r;
  output sgmii_clk_f;
  output sgmii_clk_en;
  input [7:0]gmii_txd;
  input gmii_tx_en;
  input gmii_tx_er;
  output [7:0]gmii_rxd;
  output gmii_rx_dv;
  output gmii_rx_er;
  output gmii_isolate;
  output ext_mdc;
  input ext_mdio_i;
  output ext_mdio_o;
  output ext_mdio_t;
  input mdio_t_in;
  input mdc;
  input mdio_i;
  output mdio_o;
  output mdio_t;
  input [4:0]phyaddr;
  input [4:0]configuration_vector;
  input configuration_valid;
  output an_interrupt;
  input [15:0]an_adv_config_vector;
  input an_adv_config_val;
  input an_restart_config;
  input speed_is_10_100;
  input speed_is_100;
  output [15:0]status_vector;
  input reset;
  output gtpowergood;
  input signal_detect;

  wire \<const0> ;
  wire \<const1> ;
  wire an_interrupt;
  wire an_restart_config;
  wire configuration_valid;
  wire [4:0]configuration_vector;
  wire ext_mdc;
  wire ext_mdio_i;
  wire ext_mdio_o;
  wire ext_mdio_t;
  wire gmii_isolate;
  wire gmii_rx_dv;
  wire gmii_rx_er;
  wire [7:0]gmii_rxd;
  wire gmii_tx_en;
  wire gmii_tx_er;
  wire [7:0]gmii_txd;
  wire gtpowergood;
  wire gtrefclk_n;
  wire gtrefclk_out;
  wire gtrefclk_p;
  wire independent_clock_bufg;
  wire mdc;
  wire mdio_i;
  wire mdio_o;
  wire mdio_t;
  wire mdio_t_in;
  wire [4:0]phyaddr;
  wire pma_reset_out;
  wire reset;
  wire resetdone;
  wire rxn;
  wire rxp;
  wire rxuserclk2_out;
  wire rxuserclk_out;
  wire sgmii_clk_en;
  wire sgmii_clk_f;
  wire sgmii_clk_r;
  wire signal_detect;
  wire speed_is_100;
  wire speed_is_10_100;
  wire [13:0]\^status_vector ;
  wire txn;
  wire txp;
  wire userclk2_out;
  wire userclk_out;
  wire NLW_U0_mmcm_locked_out_UNCONNECTED;
  wire [15:8]NLW_U0_status_vector_UNCONNECTED;

  assign mmcm_locked_out = \<const1> ;
  assign status_vector[15] = \<const0> ;
  assign status_vector[14] = \<const0> ;
  assign status_vector[13:9] = \^status_vector [13:9];
  assign status_vector[8] = \<const0> ;
  assign status_vector[7:0] = \^status_vector [7:0];
  GND GND
       (.G(\<const0> ));
  (* EXAMPLE_SIMULATION = "0" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  bd_fd73_pcs_pma_0_support U0
       (.an_adv_config_val(1'b0),
        .an_adv_config_vector({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .an_interrupt(an_interrupt),
        .an_restart_config(an_restart_config),
        .configuration_valid(configuration_valid),
        .configuration_vector(configuration_vector),
        .ext_mdc(ext_mdc),
        .ext_mdio_i(ext_mdio_i),
        .ext_mdio_o(ext_mdio_o),
        .ext_mdio_t(ext_mdio_t),
        .gmii_isolate(gmii_isolate),
        .gmii_rx_dv(gmii_rx_dv),
        .gmii_rx_er(gmii_rx_er),
        .gmii_rxd(gmii_rxd),
        .gmii_tx_en(gmii_tx_en),
        .gmii_tx_er(gmii_tx_er),
        .gmii_txd(gmii_txd),
        .gtpowergood(gtpowergood),
        .gtrefclk_n(gtrefclk_n),
        .gtrefclk_out(gtrefclk_out),
        .gtrefclk_p(gtrefclk_p),
        .independent_clock_bufg(independent_clock_bufg),
        .mdc(mdc),
        .mdio_i(mdio_i),
        .mdio_o(mdio_o),
        .mdio_t(mdio_t),
        .mdio_t_in(mdio_t_in),
        .mmcm_locked_out(NLW_U0_mmcm_locked_out_UNCONNECTED),
        .phyaddr(phyaddr),
        .pma_reset_out(pma_reset_out),
        .reset(reset),
        .resetdone(resetdone),
        .rxn(rxn),
        .rxp(rxp),
        .rxuserclk2_out(rxuserclk2_out),
        .rxuserclk_out(rxuserclk_out),
        .sgmii_clk_en(sgmii_clk_en),
        .sgmii_clk_f(sgmii_clk_f),
        .sgmii_clk_r(sgmii_clk_r),
        .signal_detect(signal_detect),
        .speed_is_100(speed_is_100),
        .speed_is_10_100(speed_is_10_100),
        .status_vector({NLW_U0_status_vector_UNCONNECTED[15:14],\^status_vector }),
        .txn(txn),
        .txp(txp),
        .userclk2_out(userclk2_out),
        .userclk_out(userclk_out));
  VCC VCC
       (.P(\<const1> ));
endmodule

module bd_fd73_pcs_pma_0_block
   (gmii_isolate,
    an_interrupt,
    mdio_t,
    status_vector,
    resetdone,
    txn,
    txp,
    gtpowergood,
    rxoutclk_out,
    txoutclk_out,
    sgmii_clk_r,
    sgmii_clk_en_reg,
    gmii_rx_dv,
    gmii_rx_er,
    sgmii_clk_f,
    mdio_o,
    gmii_rxd,
    pma_reset_out,
    signal_detect,
    CLK,
    phyaddr,
    mdc,
    mdio_i,
    an_restart_config,
    configuration_vector,
    configuration_valid,
    independent_clock_bufg,
    rxn,
    rxp,
    gtrefclk_out,
    rxuserclk2,
    \txcharisk_int_reg[1] ,
    gmii_tx_en,
    gmii_tx_er,
    ext_mdio_i,
    speed_is_10_100,
    speed_is_100,
    gmii_txd,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5);
  output gmii_isolate;
  output an_interrupt;
  output mdio_t;
  output [12:0]status_vector;
  output resetdone;
  output txn;
  output txp;
  output gtpowergood;
  output [0:0]rxoutclk_out;
  output [0:0]txoutclk_out;
  output sgmii_clk_r;
  output sgmii_clk_en_reg;
  output gmii_rx_dv;
  output gmii_rx_er;
  output sgmii_clk_f;
  output mdio_o;
  output [7:0]gmii_rxd;
  input pma_reset_out;
  input signal_detect;
  input CLK;
  input [4:0]phyaddr;
  input mdc;
  input mdio_i;
  input an_restart_config;
  input [4:0]configuration_vector;
  input configuration_valid;
  input independent_clock_bufg;
  input rxn;
  input rxp;
  input gtrefclk_out;
  input rxuserclk2;
  input \txcharisk_int_reg[1] ;
  input gmii_tx_en;
  input gmii_tx_er;
  input ext_mdio_i;
  input speed_is_10_100;
  input speed_is_100;
  input [7:0]gmii_txd;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  output lopt_4;
  output lopt_5;

  wire CLK;
  wire an_interrupt;
  wire an_restart_config;
  wire configuration_valid;
  wire [4:0]configuration_vector;
  wire enablealign;
  wire ext_mdio_i;
  wire gmii_isolate;
  wire gmii_rx_dv;
  wire gmii_rx_dv_int;
  wire gmii_rx_er;
  wire gmii_rx_er_int;
  wire [7:0]gmii_rxd;
  wire [7:0]gmii_rxd_int;
  wire gmii_tx_en;
  wire gmii_tx_en_int;
  wire gmii_tx_er;
  wire gmii_tx_er_int;
  wire [7:0]gmii_txd;
  wire [7:0]gmii_txd_int;
  wire gtpowergood;
  wire gtrefclk_out;
  wire independent_clock_bufg;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire mdc;
  wire mdio_i;
  wire mdio_o;
  wire mdio_out;
  wire mdio_t;
  wire mgt_rx_reset;
  wire mgt_tx_reset;
  wire [4:0]phyaddr;
  wire pma_reset_out;
  wire powerdown;
  wire resetdone;
  wire resetdone_i;
  wire rxbuferr;
  wire rxchariscomma;
  wire rxcharisk;
  wire [2:0]rxclkcorcnt;
  wire [7:0]rxdata;
  wire rxdisperr;
  wire rxn;
  wire rxnotintable;
  wire [0:0]rxoutclk_out;
  wire rxp;
  wire rxuserclk2;
  wire sgmii_clk_en_reg;
  wire sgmii_clk_f;
  wire sgmii_clk_r;
  wire signal_detect;
  wire speed_is_100;
  wire speed_is_10_100;
  wire [12:0]status_vector;
  wire txbuferr;
  wire txchardispmode;
  wire txchardispval;
  wire txcharisk;
  wire \txcharisk_int_reg[1] ;
  wire [7:0]txdata;
  wire txn;
  wire [0:0]txoutclk_out;
  wire txp;
  wire NLW_bd_fd73_pcs_pma_0_core_an_enable_UNCONNECTED;
  wire NLW_bd_fd73_pcs_pma_0_core_drp_den_UNCONNECTED;
  wire NLW_bd_fd73_pcs_pma_0_core_drp_dwe_UNCONNECTED;
  wire NLW_bd_fd73_pcs_pma_0_core_drp_req_UNCONNECTED;
  wire NLW_bd_fd73_pcs_pma_0_core_en_cdet_UNCONNECTED;
  wire NLW_bd_fd73_pcs_pma_0_core_ewrap_UNCONNECTED;
  wire NLW_bd_fd73_pcs_pma_0_core_loc_ref_UNCONNECTED;
  wire NLW_bd_fd73_pcs_pma_0_core_s_axi_arready_UNCONNECTED;
  wire NLW_bd_fd73_pcs_pma_0_core_s_axi_awready_UNCONNECTED;
  wire NLW_bd_fd73_pcs_pma_0_core_s_axi_bvalid_UNCONNECTED;
  wire NLW_bd_fd73_pcs_pma_0_core_s_axi_rvalid_UNCONNECTED;
  wire NLW_bd_fd73_pcs_pma_0_core_s_axi_wready_UNCONNECTED;
  wire [9:0]NLW_bd_fd73_pcs_pma_0_core_drp_daddr_UNCONNECTED;
  wire [15:0]NLW_bd_fd73_pcs_pma_0_core_drp_di_UNCONNECTED;
  wire [63:0]NLW_bd_fd73_pcs_pma_0_core_rxphy_correction_timer_UNCONNECTED;
  wire [31:0]NLW_bd_fd73_pcs_pma_0_core_rxphy_ns_field_UNCONNECTED;
  wire [47:0]NLW_bd_fd73_pcs_pma_0_core_rxphy_s_field_UNCONNECTED;
  wire [1:0]NLW_bd_fd73_pcs_pma_0_core_s_axi_bresp_UNCONNECTED;
  wire [31:0]NLW_bd_fd73_pcs_pma_0_core_s_axi_rdata_UNCONNECTED;
  wire [1:0]NLW_bd_fd73_pcs_pma_0_core_s_axi_rresp_UNCONNECTED;
  wire [1:0]NLW_bd_fd73_pcs_pma_0_core_speed_selection_UNCONNECTED;
  wire [15:8]NLW_bd_fd73_pcs_pma_0_core_status_vector_UNCONNECTED;
  wire [9:0]NLW_bd_fd73_pcs_pma_0_core_tx_code_group_UNCONNECTED;

  (* B_SHIFTER_ADDR = "10'b1001010000" *) 
  (* C_1588 = "0" *) 
  (* C_2_5G = "FALSE" *) 
  (* C_COMPONENT_NAME = "bd_fd73_pcs_pma_0" *) 
  (* C_DYNAMIC_SWITCHING = "FALSE" *) 
  (* C_ELABORATION_TRANSIENT_DIR = "BlankString" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_HAS_AN = "TRUE" *) 
  (* C_HAS_AXIL = "FALSE" *) 
  (* C_HAS_MDIO = "TRUE" *) 
  (* C_HAS_TEMAC = "TRUE" *) 
  (* C_IS_SGMII = "TRUE" *) 
  (* C_RX_GMII_CLK = "TXOUTCLK" *) 
  (* C_SGMII_FABRIC_BUFFER = "TRUE" *) 
  (* C_SGMII_PHY_MODE = "FALSE" *) 
  (* C_USE_LVDS = "FALSE" *) 
  (* C_USE_TBI = "FALSE" *) 
  (* C_USE_TRANSCEIVER = "TRUE" *) 
  (* GT_RX_BYTE_WIDTH = "1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  bd_fd73_pcs_pma_0_gig_ethernet_pcs_pma_v16_2_15 bd_fd73_pcs_pma_0_core
       (.an_adv_config_val(1'b0),
        .an_adv_config_vector({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .an_enable(NLW_bd_fd73_pcs_pma_0_core_an_enable_UNCONNECTED),
        .an_interrupt(an_interrupt),
        .an_restart_config(an_restart_config),
        .basex_or_sgmii(1'b0),
        .configuration_valid(configuration_valid),
        .configuration_vector(configuration_vector),
        .correction_timer({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dcm_locked(1'b1),
        .drp_daddr(NLW_bd_fd73_pcs_pma_0_core_drp_daddr_UNCONNECTED[9:0]),
        .drp_dclk(1'b0),
        .drp_den(NLW_bd_fd73_pcs_pma_0_core_drp_den_UNCONNECTED),
        .drp_di(NLW_bd_fd73_pcs_pma_0_core_drp_di_UNCONNECTED[15:0]),
        .drp_do({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drp_drdy(1'b0),
        .drp_dwe(NLW_bd_fd73_pcs_pma_0_core_drp_dwe_UNCONNECTED),
        .drp_gnt(1'b0),
        .drp_req(NLW_bd_fd73_pcs_pma_0_core_drp_req_UNCONNECTED),
        .en_cdet(NLW_bd_fd73_pcs_pma_0_core_en_cdet_UNCONNECTED),
        .enablealign(enablealign),
        .ewrap(NLW_bd_fd73_pcs_pma_0_core_ewrap_UNCONNECTED),
        .gmii_isolate(gmii_isolate),
        .gmii_rx_dv(gmii_rx_dv_int),
        .gmii_rx_er(gmii_rx_er_int),
        .gmii_rxd(gmii_rxd_int),
        .gmii_tx_en(gmii_tx_en_int),
        .gmii_tx_er(gmii_tx_er_int),
        .gmii_txd(gmii_txd_int),
        .gtx_clk(1'b0),
        .link_timer_basex({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .link_timer_sgmii({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .link_timer_value({1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b0}),
        .loc_ref(NLW_bd_fd73_pcs_pma_0_core_loc_ref_UNCONNECTED),
        .mdc(mdc),
        .mdio_in(mdio_i),
        .mdio_out(mdio_out),
        .mdio_tri(mdio_t),
        .mgt_rx_reset(mgt_rx_reset),
        .mgt_tx_reset(mgt_tx_reset),
        .phyad(phyaddr),
        .pma_rx_clk0(1'b0),
        .pma_rx_clk1(1'b0),
        .powerdown(powerdown),
        .reset(pma_reset_out),
        .reset_done(resetdone),
        .rx_code_group0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_code_group1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_gt_nominal_latency({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b0,1'b0,1'b0}),
        .rxbufstatus({rxbuferr,1'b0}),
        .rxchariscomma(rxchariscomma),
        .rxcharisk(rxcharisk),
        .rxclkcorcnt({rxclkcorcnt[2],1'b0,rxclkcorcnt[0]}),
        .rxdata(rxdata),
        .rxdisperr(rxdisperr),
        .rxnotintable(rxnotintable),
        .rxphy_correction_timer(NLW_bd_fd73_pcs_pma_0_core_rxphy_correction_timer_UNCONNECTED[63:0]),
        .rxphy_ns_field(NLW_bd_fd73_pcs_pma_0_core_rxphy_ns_field_UNCONNECTED[31:0]),
        .rxphy_s_field(NLW_bd_fd73_pcs_pma_0_core_rxphy_s_field_UNCONNECTED[47:0]),
        .rxrecclk(1'b0),
        .rxrundisp(1'b0),
        .s_axi_aclk(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_bd_fd73_pcs_pma_0_core_s_axi_arready_UNCONNECTED),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_bd_fd73_pcs_pma_0_core_s_axi_awready_UNCONNECTED),
        .s_axi_awvalid(1'b0),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_bd_fd73_pcs_pma_0_core_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_bd_fd73_pcs_pma_0_core_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_bd_fd73_pcs_pma_0_core_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_resetn(1'b0),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_bd_fd73_pcs_pma_0_core_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_bd_fd73_pcs_pma_0_core_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wready(NLW_bd_fd73_pcs_pma_0_core_s_axi_wready_UNCONNECTED),
        .s_axi_wvalid(1'b0),
        .signal_detect(signal_detect),
        .speed_is_100(1'b0),
        .speed_is_10_100(1'b0),
        .speed_selection(NLW_bd_fd73_pcs_pma_0_core_speed_selection_UNCONNECTED[1:0]),
        .status_vector({NLW_bd_fd73_pcs_pma_0_core_status_vector_UNCONNECTED[15:14],status_vector[12:8],NLW_bd_fd73_pcs_pma_0_core_status_vector_UNCONNECTED[8],status_vector[7:0]}),
        .systemtimer_ns_field({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .systemtimer_s_field({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_code_group(NLW_bd_fd73_pcs_pma_0_core_tx_code_group_UNCONNECTED[9:0]),
        .txbuferr(txbuferr),
        .txchardispmode(txchardispmode),
        .txchardispval(txchardispval),
        .txcharisk(txcharisk),
        .txdata(txdata),
        .userclk(1'b0),
        .userclk2(CLK));
  LUT3 #(
    .INIT(8'hB8)) 
    mdio_o_INST_0
       (.I0(ext_mdio_i),
        .I1(mdio_t),
        .I2(mdio_out),
        .O(mdio_o));
  bd_fd73_pcs_pma_0_sgmii_adapt sgmii_logic
       (.CLK(CLK),
        .D(gmii_rxd_int),
        .Q(gmii_txd_int),
        .SR(mgt_tx_reset),
        .gmii_rx_dv(gmii_rx_dv_int),
        .gmii_rx_dv_out_reg(gmii_rx_dv),
        .gmii_rx_er(gmii_rx_er_int),
        .gmii_rx_er_out_reg(gmii_rx_er),
        .gmii_rxd(gmii_rxd),
        .gmii_tx_en(gmii_tx_en_int),
        .gmii_tx_en_out_reg(gmii_tx_en),
        .gmii_tx_er(gmii_tx_er_int),
        .gmii_tx_er_out_reg(gmii_tx_er),
        .gmii_txd(gmii_txd),
        .sgmii_clk_en_reg(sgmii_clk_en_reg),
        .sgmii_clk_f(sgmii_clk_f),
        .sgmii_clk_r(sgmii_clk_r),
        .speed_is_100(speed_is_100),
        .speed_is_10_100(speed_is_10_100));
  bd_fd73_pcs_pma_0_sync_block__parameterized1 sync_block_reset_done
       (.CLK(CLK),
        .data_in(resetdone_i),
        .resetdone(resetdone));
  bd_fd73_pcs_pma_0_transceiver transceiver_inst
       (.CLK(CLK),
        .D(txchardispval),
        .Q(rxdata),
        .data_in(resetdone_i),
        .enablealign(enablealign),
        .gtpowergood(gtpowergood),
        .gtrefclk_out(gtrefclk_out),
        .independent_clock_bufg(independent_clock_bufg),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .mgt_tx_reset(mgt_tx_reset),
        .pma_reset_out(pma_reset_out),
        .powerdown(powerdown),
        .reset_in(mgt_rx_reset),
        .rxbufstatus(rxbuferr),
        .rxchariscomma(rxchariscomma),
        .rxcharisk(rxcharisk),
        .rxclkcorcnt({rxclkcorcnt[2],rxclkcorcnt[0]}),
        .rxdisperr(rxdisperr),
        .rxn(rxn),
        .rxnotintable(rxnotintable),
        .rxoutclk_out(rxoutclk_out),
        .rxp(rxp),
        .rxuserclk2(rxuserclk2),
        .txbuferr(txbuferr),
        .txchardispmode_reg_reg_0(txchardispmode),
        .\txcharisk_int_reg[1]_0 (\txcharisk_int_reg[1] ),
        .txcharisk_reg_reg_0(txcharisk),
        .\txdata_reg_reg[7]_0 (txdata),
        .txn(txn),
        .txoutclk_out(txoutclk_out),
        .txp(txp));
endmodule

module bd_fd73_pcs_pma_0_clk_gen
   (sgmii_clk_r,
    sgmii_clk_en_reg_0,
    sgmii_clk_f,
    CLK,
    reset_out,
    data_out,
    speed_is_10_100_fall_reg_0);
  output sgmii_clk_r;
  output sgmii_clk_en_reg_0;
  output sgmii_clk_f;
  input CLK;
  input reset_out;
  input data_out;
  input speed_is_10_100_fall_reg_0;

  wire CLK;
  wire clk12_5;
  wire clk12_5_reg;
  wire clk1_25;
  wire clk1_25_reg;
  wire clk_div_stage1_n_3;
  wire clk_en;
  wire clk_en0;
  wire clk_en_12_5_fall;
  wire clk_en_12_5_fall0;
  wire clk_en_1_25_fall;
  wire clk_en_1_25_fall0;
  wire data_out;
  wire reset_fall;
  wire reset_out;
  wire sgmii_clk_en_i_1_n_0;
  wire sgmii_clk_en_reg_0;
  wire sgmii_clk_f;
  wire sgmii_clk_r;
  wire sgmii_clk_r0_out;
  wire speed_is_100_fall;
  wire speed_is_10_100_fall;
  wire speed_is_10_100_fall_reg_0;

  FDRE clk12_5_reg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(clk12_5),
        .Q(clk12_5_reg),
        .R(reset_out));
  FDRE clk1_25_reg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(clk1_25),
        .Q(clk1_25_reg),
        .R(reset_out));
  bd_fd73_pcs_pma_0_johnson_cntr clk_div_stage1
       (.CLK(CLK),
        .clk12_5(clk12_5),
        .clk12_5_reg(clk12_5_reg),
        .clk1_25(clk1_25),
        .clk_en0(clk_en0),
        .clk_en_12_5_fall0(clk_en_12_5_fall0),
        .reset_fall(reset_fall),
        .reset_out(reset_out),
        .speed_is_100_fall(speed_is_100_fall),
        .speed_is_10_100_fall(speed_is_10_100_fall),
        .speed_is_10_100_fall_reg(clk_div_stage1_n_3));
  bd_fd73_pcs_pma_0_johnson_cntr_48 clk_div_stage2
       (.CLK(CLK),
        .clk12_5(clk12_5),
        .clk1_25(clk1_25),
        .clk1_25_reg(clk1_25_reg),
        .clk_en(clk_en),
        .clk_en_1_25_fall0(clk_en_1_25_fall0),
        .data_out(data_out),
        .reset_out(reset_out),
        .sgmii_clk_r0_out(sgmii_clk_r0_out),
        .sgmii_clk_r_reg(speed_is_10_100_fall_reg_0));
  FDRE clk_en_12_5_fall_reg
       (.C(CLK),
        .CE(1'b1),
        .D(clk_en_12_5_fall0),
        .Q(clk_en_12_5_fall),
        .R(reset_out));
  FDRE clk_en_12_5_rise_reg
       (.C(CLK),
        .CE(1'b1),
        .D(clk_en0),
        .Q(clk_en),
        .R(reset_out));
  FDRE clk_en_1_25_fall_reg
       (.C(CLK),
        .CE(1'b1),
        .D(clk_en_1_25_fall0),
        .Q(clk_en_1_25_fall),
        .R(reset_out));
  FDRE #(
    .IS_C_INVERTED(1'b1)) 
    reset_fall_reg
       (.C(CLK),
        .CE(1'b1),
        .D(reset_out),
        .Q(reset_fall),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hE2FF)) 
    sgmii_clk_en_i_1
       (.I0(clk_en_1_25_fall),
        .I1(data_out),
        .I2(clk_en_12_5_fall),
        .I3(speed_is_10_100_fall_reg_0),
        .O(sgmii_clk_en_i_1_n_0));
  FDRE sgmii_clk_en_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sgmii_clk_en_i_1_n_0),
        .Q(sgmii_clk_en_reg_0),
        .R(reset_out));
  FDRE #(
    .IS_C_INVERTED(1'b1)) 
    sgmii_clk_f_reg
       (.C(CLK),
        .CE(1'b1),
        .D(clk_div_stage1_n_3),
        .Q(sgmii_clk_f),
        .R(1'b0));
  FDRE sgmii_clk_r_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sgmii_clk_r0_out),
        .Q(sgmii_clk_r),
        .R(reset_out));
  FDRE #(
    .IS_C_INVERTED(1'b1)) 
    speed_is_100_fall_reg
       (.C(CLK),
        .CE(1'b1),
        .D(data_out),
        .Q(speed_is_100_fall),
        .R(1'b0));
  FDRE #(
    .IS_C_INVERTED(1'b1)) 
    speed_is_10_100_fall_reg
       (.C(CLK),
        .CE(1'b1),
        .D(speed_is_10_100_fall_reg_0),
        .Q(speed_is_10_100_fall),
        .R(1'b0));
endmodule

module bd_fd73_pcs_pma_0_clocking
   (gtrefclk_out,
    userclk2,
    userclk,
    rxuserclk2,
    gtrefclk_p,
    gtrefclk_n,
    txoutclk,
    rxoutclk,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5);
  output gtrefclk_out;
  output userclk2;
  output userclk;
  output rxuserclk2;
  input gtrefclk_p;
  input gtrefclk_n;
  input txoutclk;
  input rxoutclk;
  output lopt;
  output lopt_1;
  input lopt_2;
  input lopt_3;
  input lopt_4;
  input lopt_5;

  wire \<const0> ;
  wire \<const1> ;
  wire gtrefclk_n;
  wire gtrefclk_out;
  wire gtrefclk_p;
  wire \^lopt ;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire rxoutclk;
  wire rxuserclk2;
  wire txoutclk;
  wire userclk;
  wire userclk2;
  wire NLW_ibufds_gtrefclk_ODIV2_UNCONNECTED;

  assign \^lopt  = lopt_2;
  assign \^lopt_1  = lopt_3;
  assign \^lopt_2  = lopt_4;
  assign \^lopt_3  = lopt_5;
  assign lopt = \<const1> ;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  (* box_type = "PRIMITIVE" *) 
  IBUFDS_GTE4 #(
    .REFCLK_EN_TX_PATH(1'b0),
    .REFCLK_HROW_CK_SEL(2'b00),
    .REFCLK_ICNTL_RX(2'b00)) 
    ibufds_gtrefclk
       (.CEB(1'b0),
        .I(gtrefclk_p),
        .IB(gtrefclk_n),
        .O(gtrefclk_out),
        .ODIV2(NLW_ibufds_gtrefclk_ODIV2_UNCONNECTED));
  (* OPT_MODIFIED = "MLO" *) 
  (* box_type = "PRIMITIVE" *) 
  BUFG_GT #(
    .SIM_DEVICE("ULTRASCALE"),
    .STARTUP_SYNC("FALSE")) 
    rxrecclk_bufg_inst
       (.CE(\^lopt ),
        .CEMASK(1'b1),
        .CLR(\^lopt_1 ),
        .CLRMASK(1'b1),
        .DIV({1'b0,1'b0,1'b0}),
        .I(rxoutclk),
        .O(rxuserclk2));
  (* OPT_MODIFIED = "MLO" *) 
  (* box_type = "PRIMITIVE" *) 
  BUFG_GT #(
    .SIM_DEVICE("ULTRASCALE"),
    .STARTUP_SYNC("FALSE")) 
    usrclk2_bufg_inst
       (.CE(\^lopt_2 ),
        .CEMASK(1'b1),
        .CLR(\^lopt_3 ),
        .CLRMASK(1'b1),
        .DIV({1'b0,1'b0,1'b0}),
        .I(txoutclk),
        .O(userclk2));
  (* OPT_MODIFIED = "MLO" *) 
  (* box_type = "PRIMITIVE" *) 
  BUFG_GT #(
    .SIM_DEVICE("ULTRASCALE"),
    .STARTUP_SYNC("FALSE")) 
    usrclk_bufg_inst
       (.CE(\^lopt_2 ),
        .CEMASK(1'b1),
        .CLR(\^lopt_3 ),
        .CLRMASK(1'b1),
        .DIV({1'b0,1'b0,1'b1}),
        .I(txoutclk),
        .O(userclk));
endmodule

(* CHECK_LICENSE_TYPE = "bd_fd73_pcs_pma_0_gt,bd_fd73_pcs_pma_0_gt_gtwizard_top,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "bd_fd73_pcs_pma_0_gt_gtwizard_top,Vivado 2023.2" *) 
module bd_fd73_pcs_pma_0_gt
   (gtwiz_userclk_tx_reset_in,
    gtwiz_userclk_tx_active_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_buffbypass_rx_reset_in,
    gtwiz_buffbypass_rx_start_user_in,
    gtwiz_buffbypass_rx_done_out,
    gtwiz_buffbypass_rx_error_out,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_rx_cdr_stable_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_userdata_tx_in,
    gtwiz_userdata_rx_out,
    cpllrefclksel_in,
    drpaddr_in,
    drpclk_in,
    drpdi_in,
    drpen_in,
    drpwe_in,
    eyescanreset_in,
    eyescantrigger_in,
    gthrxn_in,
    gthrxp_in,
    gtrefclk0_in,
    gtrefclk1_in,
    loopback_in,
    pcsrsvdin_in,
    rx8b10ben_in,
    rxcdrhold_in,
    rxcommadeten_in,
    rxdfelpmreset_in,
    rxlpmen_in,
    rxmcommaalignen_in,
    rxpcommaalignen_in,
    rxpcsreset_in,
    rxpd_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprbssel_in,
    rxrate_in,
    rxusrclk_in,
    rxusrclk2_in,
    tx8b10ben_in,
    txctrl0_in,
    txctrl1_in,
    txctrl2_in,
    txdiffctrl_in,
    txelecidle_in,
    txinhibit_in,
    txpcsreset_in,
    txpd_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursor_in,
    txprbsforceerr_in,
    txprbssel_in,
    txprecursor_in,
    txusrclk_in,
    txusrclk2_in,
    cplllock_out,
    dmonitorout_out,
    drpdo_out,
    drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    gtpowergood_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcommadet_out,
    rxctrl0_out,
    rxctrl1_out,
    rxctrl2_out,
    rxctrl3_out,
    rxoutclk_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxresetdone_out,
    txbufstatus_out,
    txoutclk_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txresetdone_out,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5);
  input [0:0]gtwiz_userclk_tx_reset_in;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]gtwiz_buffbypass_rx_reset_in;
  input [0:0]gtwiz_buffbypass_rx_start_user_in;
  output [0:0]gtwiz_buffbypass_rx_done_out;
  output [0:0]gtwiz_buffbypass_rx_error_out;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  input [15:0]gtwiz_userdata_tx_in;
  output [15:0]gtwiz_userdata_rx_out;
  input [2:0]cpllrefclksel_in;
  input [9:0]drpaddr_in;
  input [0:0]drpclk_in;
  input [15:0]drpdi_in;
  input [0:0]drpen_in;
  input [0:0]drpwe_in;
  input [0:0]eyescanreset_in;
  input [0:0]eyescantrigger_in;
  input [0:0]gthrxn_in;
  input [0:0]gthrxp_in;
  input [0:0]gtrefclk0_in;
  input [0:0]gtrefclk1_in;
  input [2:0]loopback_in;
  input [15:0]pcsrsvdin_in;
  input [0:0]rx8b10ben_in;
  input [0:0]rxcdrhold_in;
  input [0:0]rxcommadeten_in;
  input [0:0]rxdfelpmreset_in;
  input [0:0]rxlpmen_in;
  input [0:0]rxmcommaalignen_in;
  input [0:0]rxpcommaalignen_in;
  input [0:0]rxpcsreset_in;
  input [1:0]rxpd_in;
  input [0:0]rxpmareset_in;
  input [0:0]rxpolarity_in;
  input [0:0]rxprbscntreset_in;
  input [3:0]rxprbssel_in;
  input [2:0]rxrate_in;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]tx8b10ben_in;
  input [15:0]txctrl0_in;
  input [15:0]txctrl1_in;
  input [7:0]txctrl2_in;
  input [4:0]txdiffctrl_in;
  input [0:0]txelecidle_in;
  input [0:0]txinhibit_in;
  input [0:0]txpcsreset_in;
  input [1:0]txpd_in;
  input [0:0]txpmareset_in;
  input [0:0]txpolarity_in;
  input [4:0]txpostcursor_in;
  input [0:0]txprbsforceerr_in;
  input [3:0]txprbssel_in;
  input [4:0]txprecursor_in;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  output [0:0]cplllock_out;
  output [15:0]dmonitorout_out;
  output [15:0]drpdo_out;
  output [0:0]drprdy_out;
  output [0:0]eyescandataerror_out;
  output [0:0]gthtxn_out;
  output [0:0]gthtxp_out;
  output [0:0]gtpowergood_out;
  output [0:0]rxbyteisaligned_out;
  output [0:0]rxbyterealign_out;
  output [0:0]rxcommadet_out;
  output [15:0]rxctrl0_out;
  output [15:0]rxctrl1_out;
  output [7:0]rxctrl2_out;
  output [7:0]rxctrl3_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxprbserr_out;
  output [0:0]rxresetdone_out;
  output [1:0]txbufstatus_out;
  output [0:0]txoutclk_out;
  output [0:0]txpmaresetdone_out;
  output [0:0]txprgdivresetdone_out;
  output [0:0]txresetdone_out;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  output lopt_4;
  output lopt_5;

  wire \<const0> ;
  wire [0:0]drpclk_in;
  wire [0:0]gthrxn_in;
  wire [0:0]gthrxp_in;
  wire [0:0]gthtxn_out;
  wire [0:0]gthtxp_out;
  wire [0:0]gtpowergood_out;
  wire [0:0]gtrefclk0_in;
  wire [0:0]gtwiz_buffbypass_rx_done_out;
  wire [0:0]gtwiz_buffbypass_rx_reset_in;
  wire [0:0]gtwiz_buffbypass_rx_start_user_in;
  wire [0:0]gtwiz_reset_all_in;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [15:0]gtwiz_userdata_rx_out;
  wire [15:0]gtwiz_userdata_tx_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire [1:0]\^rxctrl0_out ;
  wire [1:0]\^rxctrl1_out ;
  wire [1:0]\^rxctrl2_out ;
  wire [1:0]\^rxctrl3_out ;
  wire [0:0]rxmcommaalignen_in;
  wire [0:0]rxoutclk_out;
  wire [1:0]rxpd_in;
  wire [0:0]rxresetdone_out;
  wire [0:0]rxusrclk_in;
  wire [1:1]\^txbufstatus_out ;
  wire [15:0]txctrl0_in;
  wire [15:0]txctrl1_in;
  wire [7:0]txctrl2_in;
  wire [0:0]txelecidle_in;
  wire [0:0]txoutclk_out;
  wire [0:0]txusrclk_in;
  wire [0:0]NLW_inst_bufgtce_out_UNCONNECTED;
  wire [2:0]NLW_inst_bufgtcemask_out_UNCONNECTED;
  wire [8:0]NLW_inst_bufgtdiv_out_UNCONNECTED;
  wire [0:0]NLW_inst_bufgtreset_out_UNCONNECTED;
  wire [2:0]NLW_inst_bufgtrstmask_out_UNCONNECTED;
  wire [0:0]NLW_inst_cpllfbclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_cplllock_out_UNCONNECTED;
  wire [0:0]NLW_inst_cpllrefclklost_out_UNCONNECTED;
  wire [15:0]NLW_inst_dmonitorout_out_UNCONNECTED;
  wire [0:0]NLW_inst_dmonitoroutclk_out_UNCONNECTED;
  wire [15:0]NLW_inst_drpdo_common_out_UNCONNECTED;
  wire [15:0]NLW_inst_drpdo_out_UNCONNECTED;
  wire [0:0]NLW_inst_drprdy_common_out_UNCONNECTED;
  wire [0:0]NLW_inst_drprdy_out_UNCONNECTED;
  wire [0:0]NLW_inst_eyescandataerror_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtrefclkmonitor_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_rx_error_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_tx_done_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_tx_error_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_reset_qpll0reset_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_reset_qpll1reset_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_active_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_srcclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_usrclk2_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_usrclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_active_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_srcclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_usrclk2_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_usrclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtytxn_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtytxp_out_UNCONNECTED;
  wire [0:0]NLW_inst_pcierategen3_out_UNCONNECTED;
  wire [0:0]NLW_inst_pcierateidle_out_UNCONNECTED;
  wire [1:0]NLW_inst_pcierateqpllpd_out_UNCONNECTED;
  wire [1:0]NLW_inst_pcierateqpllreset_out_UNCONNECTED;
  wire [0:0]NLW_inst_pciesynctxsyncdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_pcieusergen3rdy_out_UNCONNECTED;
  wire [0:0]NLW_inst_pcieuserphystatusrst_out_UNCONNECTED;
  wire [0:0]NLW_inst_pcieuserratestart_out_UNCONNECTED;
  wire [15:0]NLW_inst_pcsrsvdout_out_UNCONNECTED;
  wire [0:0]NLW_inst_phystatus_out_UNCONNECTED;
  wire [15:0]NLW_inst_pinrsrvdas_out_UNCONNECTED;
  wire [7:0]NLW_inst_pmarsvdout0_out_UNCONNECTED;
  wire [7:0]NLW_inst_pmarsvdout1_out_UNCONNECTED;
  wire [0:0]NLW_inst_powerpresent_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0fbclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0lock_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0outclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0outrefclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0refclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1fbclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1lock_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1outclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1outrefclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1refclklost_out_UNCONNECTED;
  wire [7:0]NLW_inst_qplldmonitor0_out_UNCONNECTED;
  wire [7:0]NLW_inst_qplldmonitor1_out_UNCONNECTED;
  wire [0:0]NLW_inst_refclkoutmonitor0_out_UNCONNECTED;
  wire [0:0]NLW_inst_refclkoutmonitor1_out_UNCONNECTED;
  wire [0:0]NLW_inst_resetexception_out_UNCONNECTED;
  wire [2:0]NLW_inst_rxbufstatus_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxbyteisaligned_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxbyterealign_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcdrlock_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcdrphdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxchanbondseq_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxchanisaligned_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxchanrealign_out_UNCONNECTED;
  wire [4:0]NLW_inst_rxchbondo_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxckcaldone_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxclkcorcnt_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcominitdet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcommadet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcomsasdet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcomwakedet_out_UNCONNECTED;
  wire [15:2]NLW_inst_rxctrl0_out_UNCONNECTED;
  wire [15:2]NLW_inst_rxctrl1_out_UNCONNECTED;
  wire [7:2]NLW_inst_rxctrl2_out_UNCONNECTED;
  wire [7:2]NLW_inst_rxctrl3_out_UNCONNECTED;
  wire [127:0]NLW_inst_rxdata_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxdataextendrsvd_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxdatavalid_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxdlysresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxelecidle_out_UNCONNECTED;
  wire [5:0]NLW_inst_rxheader_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxheadervalid_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxlfpstresetdet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxlfpsu2lpexitdet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxlfpsu3wakedet_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxmonitorout_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxosintdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxosintstarted_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxosintstrobedone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxosintstrobestarted_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxoutclkfabric_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxoutclkpcs_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxphaligndone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxphalignerr_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxpmaresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxprbserr_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxprbslocked_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxprgdivresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxqpisenn_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxqpisenp_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxratedone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxrecclk0_sel_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxrecclk0sel_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxrecclk1_sel_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxrecclk1sel_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxrecclkout_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxsliderdy_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxslipdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxslipoutclkrdy_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxslippmardy_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxstartofseq_out_UNCONNECTED;
  wire [2:0]NLW_inst_rxstatus_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxsyncdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxsyncout_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxvalid_out_UNCONNECTED;
  wire [3:0]NLW_inst_sdm0finalout_out_UNCONNECTED;
  wire [14:0]NLW_inst_sdm0testdata_out_UNCONNECTED;
  wire [3:0]NLW_inst_sdm1finalout_out_UNCONNECTED;
  wire [14:0]NLW_inst_sdm1testdata_out_UNCONNECTED;
  wire [9:0]NLW_inst_tcongpo_out_UNCONNECTED;
  wire [0:0]NLW_inst_tconrsvdout0_out_UNCONNECTED;
  wire [0:0]NLW_inst_txbufstatus_out_UNCONNECTED;
  wire [0:0]NLW_inst_txcomfinish_out_UNCONNECTED;
  wire [0:0]NLW_inst_txdccdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txdlysresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txoutclkfabric_out_UNCONNECTED;
  wire [0:0]NLW_inst_txoutclkpcs_out_UNCONNECTED;
  wire [0:0]NLW_inst_txphaligndone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txphinitdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txpmaresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txprgdivresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txqpisenn_out_UNCONNECTED;
  wire [0:0]NLW_inst_txqpisenp_out_UNCONNECTED;
  wire [0:0]NLW_inst_txratedone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txsyncdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txsyncout_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubdaddr_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubden_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubdi_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubdwe_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubmdmtdo_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubrsvdout_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubtxuart_out_UNCONNECTED;

  assign cplllock_out[0] = \<const0> ;
  assign dmonitorout_out[15] = \<const0> ;
  assign dmonitorout_out[14] = \<const0> ;
  assign dmonitorout_out[13] = \<const0> ;
  assign dmonitorout_out[12] = \<const0> ;
  assign dmonitorout_out[11] = \<const0> ;
  assign dmonitorout_out[10] = \<const0> ;
  assign dmonitorout_out[9] = \<const0> ;
  assign dmonitorout_out[8] = \<const0> ;
  assign dmonitorout_out[7] = \<const0> ;
  assign dmonitorout_out[6] = \<const0> ;
  assign dmonitorout_out[5] = \<const0> ;
  assign dmonitorout_out[4] = \<const0> ;
  assign dmonitorout_out[3] = \<const0> ;
  assign dmonitorout_out[2] = \<const0> ;
  assign dmonitorout_out[1] = \<const0> ;
  assign dmonitorout_out[0] = \<const0> ;
  assign drpdo_out[15] = \<const0> ;
  assign drpdo_out[14] = \<const0> ;
  assign drpdo_out[13] = \<const0> ;
  assign drpdo_out[12] = \<const0> ;
  assign drpdo_out[11] = \<const0> ;
  assign drpdo_out[10] = \<const0> ;
  assign drpdo_out[9] = \<const0> ;
  assign drpdo_out[8] = \<const0> ;
  assign drpdo_out[7] = \<const0> ;
  assign drpdo_out[6] = \<const0> ;
  assign drpdo_out[5] = \<const0> ;
  assign drpdo_out[4] = \<const0> ;
  assign drpdo_out[3] = \<const0> ;
  assign drpdo_out[2] = \<const0> ;
  assign drpdo_out[1] = \<const0> ;
  assign drpdo_out[0] = \<const0> ;
  assign drprdy_out[0] = \<const0> ;
  assign eyescandataerror_out[0] = \<const0> ;
  assign gtwiz_buffbypass_rx_error_out[0] = \<const0> ;
  assign gtwiz_reset_rx_cdr_stable_out[0] = \<const0> ;
  assign rxbyteisaligned_out[0] = \<const0> ;
  assign rxbyterealign_out[0] = \<const0> ;
  assign rxcommadet_out[0] = \<const0> ;
  assign rxctrl0_out[15] = \<const0> ;
  assign rxctrl0_out[14] = \<const0> ;
  assign rxctrl0_out[13] = \<const0> ;
  assign rxctrl0_out[12] = \<const0> ;
  assign rxctrl0_out[11] = \<const0> ;
  assign rxctrl0_out[10] = \<const0> ;
  assign rxctrl0_out[9] = \<const0> ;
  assign rxctrl0_out[8] = \<const0> ;
  assign rxctrl0_out[7] = \<const0> ;
  assign rxctrl0_out[6] = \<const0> ;
  assign rxctrl0_out[5] = \<const0> ;
  assign rxctrl0_out[4] = \<const0> ;
  assign rxctrl0_out[3] = \<const0> ;
  assign rxctrl0_out[2] = \<const0> ;
  assign rxctrl0_out[1:0] = \^rxctrl0_out [1:0];
  assign rxctrl1_out[15] = \<const0> ;
  assign rxctrl1_out[14] = \<const0> ;
  assign rxctrl1_out[13] = \<const0> ;
  assign rxctrl1_out[12] = \<const0> ;
  assign rxctrl1_out[11] = \<const0> ;
  assign rxctrl1_out[10] = \<const0> ;
  assign rxctrl1_out[9] = \<const0> ;
  assign rxctrl1_out[8] = \<const0> ;
  assign rxctrl1_out[7] = \<const0> ;
  assign rxctrl1_out[6] = \<const0> ;
  assign rxctrl1_out[5] = \<const0> ;
  assign rxctrl1_out[4] = \<const0> ;
  assign rxctrl1_out[3] = \<const0> ;
  assign rxctrl1_out[2] = \<const0> ;
  assign rxctrl1_out[1:0] = \^rxctrl1_out [1:0];
  assign rxctrl2_out[7] = \<const0> ;
  assign rxctrl2_out[6] = \<const0> ;
  assign rxctrl2_out[5] = \<const0> ;
  assign rxctrl2_out[4] = \<const0> ;
  assign rxctrl2_out[3] = \<const0> ;
  assign rxctrl2_out[2] = \<const0> ;
  assign rxctrl2_out[1:0] = \^rxctrl2_out [1:0];
  assign rxctrl3_out[7] = \<const0> ;
  assign rxctrl3_out[6] = \<const0> ;
  assign rxctrl3_out[5] = \<const0> ;
  assign rxctrl3_out[4] = \<const0> ;
  assign rxctrl3_out[3] = \<const0> ;
  assign rxctrl3_out[2] = \<const0> ;
  assign rxctrl3_out[1:0] = \^rxctrl3_out [1:0];
  assign rxpmaresetdone_out[0] = \<const0> ;
  assign rxprbserr_out[0] = \<const0> ;
  assign txbufstatus_out[1] = \^txbufstatus_out [1];
  assign txbufstatus_out[0] = \<const0> ;
  assign txpmaresetdone_out[0] = \<const0> ;
  assign txprgdivresetdone_out[0] = \<const0> ;
  assign txresetdone_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_CHANNEL_ENABLE = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_COMMON_SCALING_FACTOR = "1" *) 
  (* C_CPLL_VCO_FREQUENCY = "2500.000000" *) 
  (* C_ENABLE_COMMON_USRCLK = "0" *) 
  (* C_FORCE_COMMONS = "0" *) 
  (* C_FREERUN_FREQUENCY = "50.000000" *) 
  (* C_GT_REV = "57" *) 
  (* C_GT_TYPE = "2" *) 
  (* C_INCLUDE_CPLL_CAL = "2" *) 
  (* C_LOCATE_COMMON = "0" *) 
  (* C_LOCATE_IN_SYSTEM_IBERT_CORE = "2" *) 
  (* C_LOCATE_RESET_CONTROLLER = "0" *) 
  (* C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER = "0" *) 
  (* C_LOCATE_RX_USER_CLOCKING = "1" *) 
  (* C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER = "0" *) 
  (* C_LOCATE_TX_USER_CLOCKING = "1" *) 
  (* C_LOCATE_USER_DATA_WIDTH_SIZING = "0" *) 
  (* C_PCIE_CORECLK_FREQ = "250" *) 
  (* C_PCIE_ENABLE = "0" *) 
  (* C_RESET_CONTROLLER_INSTANCE_CTRL = "0" *) 
  (* C_RESET_SEQUENCE_INTERVAL = "0" *) 
  (* C_RX_BUFFBYPASS_MODE = "0" *) 
  (* C_RX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
  (* C_RX_BUFFER_MODE = "0" *) 
  (* C_RX_CB_DISP = "8'b00000000" *) 
  (* C_RX_CB_K = "8'b00000000" *) 
  (* C_RX_CB_LEN_SEQ = "1" *) 
  (* C_RX_CB_MAX_LEVEL = "1" *) 
  (* C_RX_CB_NUM_SEQ = "0" *) 
  (* C_RX_CB_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_CC_DISP = "8'b00000000" *) 
  (* C_RX_CC_ENABLE = "0" *) 
  (* C_RX_CC_K = "8'b00000000" *) 
  (* C_RX_CC_LEN_SEQ = "1" *) 
  (* C_RX_CC_NUM_SEQ = "0" *) 
  (* C_RX_CC_PERIODICITY = "5000" *) 
  (* C_RX_CC_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_COMMA_M_ENABLE = "1" *) 
  (* C_RX_COMMA_M_VAL = "10'b1010000011" *) 
  (* C_RX_COMMA_P_ENABLE = "1" *) 
  (* C_RX_COMMA_P_VAL = "10'b0101111100" *) 
  (* C_RX_DATA_DECODING = "1" *) 
  (* C_RX_ENABLE = "1" *) 
  (* C_RX_INT_DATA_WIDTH = "20" *) 
  (* C_RX_LINE_RATE = "1.250000" *) 
  (* C_RX_MASTER_CHANNEL_IDX = "109" *) 
  (* C_RX_OUTCLK_BUFG_GT_DIV = "1" *) 
  (* C_RX_OUTCLK_FREQUENCY = "62.500000" *) 
  (* C_RX_OUTCLK_SOURCE = "1" *) 
  (* C_RX_PLL_TYPE = "2" *) 
  (* C_RX_RECCLK_OUTPUT = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_REFCLK_FREQUENCY = "156.250000" *) 
  (* C_RX_SLIDE_MODE = "0" *) 
  (* C_RX_USER_CLOCKING_CONTENTS = "0" *) 
  (* C_RX_USER_CLOCKING_INSTANCE_CTRL = "0" *) 
  (* C_RX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) 
  (* C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
  (* C_RX_USER_CLOCKING_SOURCE = "0" *) 
  (* C_RX_USER_DATA_WIDTH = "16" *) 
  (* C_RX_USRCLK2_FREQUENCY = "62.500000" *) 
  (* C_RX_USRCLK_FREQUENCY = "62.500000" *) 
  (* C_SECONDARY_QPLL_ENABLE = "0" *) 
  (* C_SECONDARY_QPLL_REFCLK_FREQUENCY = "257.812500" *) 
  (* C_SIM_CPLL_CAL_BYPASS = "1" *) 
  (* C_TOTAL_NUM_CHANNELS = "1" *) 
  (* C_TOTAL_NUM_COMMONS = "0" *) 
  (* C_TOTAL_NUM_COMMONS_EXAMPLE = "0" *) 
  (* C_TXPROGDIV_FREQ_ENABLE = "1" *) 
  (* C_TXPROGDIV_FREQ_SOURCE = "2" *) 
  (* C_TXPROGDIV_FREQ_VAL = "125.000000" *) 
  (* C_TX_BUFFBYPASS_MODE = "0" *) 
  (* C_TX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
  (* C_TX_BUFFER_MODE = "1" *) 
  (* C_TX_DATA_ENCODING = "1" *) 
  (* C_TX_ENABLE = "1" *) 
  (* C_TX_INT_DATA_WIDTH = "20" *) 
  (* C_TX_LINE_RATE = "1.250000" *) 
  (* C_TX_MASTER_CHANNEL_IDX = "109" *) 
  (* C_TX_OUTCLK_BUFG_GT_DIV = "2" *) 
  (* C_TX_OUTCLK_FREQUENCY = "62.500000" *) 
  (* C_TX_OUTCLK_SOURCE = "4" *) 
  (* C_TX_PLL_TYPE = "2" *) 
  (* C_TX_REFCLK_FREQUENCY = "156.250000" *) 
  (* C_TX_USER_CLOCKING_CONTENTS = "0" *) 
  (* C_TX_USER_CLOCKING_INSTANCE_CTRL = "0" *) 
  (* C_TX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) 
  (* C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
  (* C_TX_USER_CLOCKING_SOURCE = "0" *) 
  (* C_TX_USER_DATA_WIDTH = "16" *) 
  (* C_TX_USRCLK2_FREQUENCY = "62.500000" *) 
  (* C_TX_USRCLK_FREQUENCY = "62.500000" *) 
  (* C_USER_GTPOWERGOOD_DELAY_EN = "1" *) 
  bd_fd73_pcs_pma_0_gt_gtwizard_top inst
       (.bgbypassb_in(1'b1),
        .bgmonitorenb_in(1'b1),
        .bgpdb_in(1'b1),
        .bgrcalovrd_in({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .bgrcalovrdenb_in(1'b1),
        .bufgtce_out(NLW_inst_bufgtce_out_UNCONNECTED[0]),
        .bufgtcemask_out(NLW_inst_bufgtcemask_out_UNCONNECTED[2:0]),
        .bufgtdiv_out(NLW_inst_bufgtdiv_out_UNCONNECTED[8:0]),
        .bufgtreset_out(NLW_inst_bufgtreset_out_UNCONNECTED[0]),
        .bufgtrstmask_out(NLW_inst_bufgtrstmask_out_UNCONNECTED[2:0]),
        .cdrstepdir_in(1'b0),
        .cdrstepsq_in(1'b0),
        .cdrstepsx_in(1'b0),
        .cfgreset_in(1'b0),
        .clkrsvd0_in(1'b0),
        .clkrsvd1_in(1'b0),
        .cpllfbclklost_out(NLW_inst_cpllfbclklost_out_UNCONNECTED[0]),
        .cpllfreqlock_in(1'b0),
        .cplllock_out(NLW_inst_cplllock_out_UNCONNECTED[0]),
        .cplllockdetclk_in(1'b0),
        .cplllocken_in(1'b1),
        .cpllpd_in(1'b0),
        .cpllrefclklost_out(NLW_inst_cpllrefclklost_out_UNCONNECTED[0]),
        .cpllrefclksel_in({1'b0,1'b0,1'b1}),
        .cpllreset_in(1'b0),
        .dmonfiforeset_in(1'b0),
        .dmonitorclk_in(1'b0),
        .dmonitorout_out(NLW_inst_dmonitorout_out_UNCONNECTED[15:0]),
        .dmonitoroutclk_out(NLW_inst_dmonitoroutclk_out_UNCONNECTED[0]),
        .drpaddr_common_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpaddr_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpclk_common_in(1'b0),
        .drpclk_in(drpclk_in),
        .drpdi_common_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpdi_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpdo_common_out(NLW_inst_drpdo_common_out_UNCONNECTED[15:0]),
        .drpdo_out(NLW_inst_drpdo_out_UNCONNECTED[15:0]),
        .drpen_common_in(1'b0),
        .drpen_in(1'b0),
        .drprdy_common_out(NLW_inst_drprdy_common_out_UNCONNECTED[0]),
        .drprdy_out(NLW_inst_drprdy_out_UNCONNECTED[0]),
        .drprst_in(1'b0),
        .drpwe_common_in(1'b0),
        .drpwe_in(1'b0),
        .elpcaldvorwren_in(1'b0),
        .elpcalpaorwren_in(1'b0),
        .evoddphicaldone_in(1'b0),
        .evoddphicalstart_in(1'b0),
        .evoddphidrden_in(1'b0),
        .evoddphidwren_in(1'b0),
        .evoddphixrden_in(1'b0),
        .evoddphixwren_in(1'b0),
        .eyescandataerror_out(NLW_inst_eyescandataerror_out_UNCONNECTED[0]),
        .eyescanmode_in(1'b0),
        .eyescanreset_in(1'b0),
        .eyescantrigger_in(1'b0),
        .freqos_in(1'b0),
        .gtgrefclk0_in(1'b0),
        .gtgrefclk1_in(1'b0),
        .gtgrefclk_in(1'b0),
        .gthrxn_in(gthrxn_in),
        .gthrxp_in(gthrxp_in),
        .gthtxn_out(gthtxn_out),
        .gthtxp_out(gthtxp_out),
        .gtnorthrefclk00_in(1'b0),
        .gtnorthrefclk01_in(1'b0),
        .gtnorthrefclk0_in(1'b0),
        .gtnorthrefclk10_in(1'b0),
        .gtnorthrefclk11_in(1'b0),
        .gtnorthrefclk1_in(1'b0),
        .gtpowergood_out(gtpowergood_out),
        .gtrefclk00_in(1'b0),
        .gtrefclk01_in(1'b0),
        .gtrefclk0_in(gtrefclk0_in),
        .gtrefclk10_in(1'b0),
        .gtrefclk11_in(1'b0),
        .gtrefclk1_in(1'b0),
        .gtrefclkmonitor_out(NLW_inst_gtrefclkmonitor_out_UNCONNECTED[0]),
        .gtresetsel_in(1'b0),
        .gtrsvd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtrxreset_in(1'b0),
        .gtrxresetsel_in(1'b0),
        .gtsouthrefclk00_in(1'b0),
        .gtsouthrefclk01_in(1'b0),
        .gtsouthrefclk0_in(1'b0),
        .gtsouthrefclk10_in(1'b0),
        .gtsouthrefclk11_in(1'b0),
        .gtsouthrefclk1_in(1'b0),
        .gttxreset_in(1'b0),
        .gttxresetsel_in(1'b0),
        .gtwiz_buffbypass_rx_done_out(gtwiz_buffbypass_rx_done_out),
        .gtwiz_buffbypass_rx_error_out(NLW_inst_gtwiz_buffbypass_rx_error_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_rx_reset_in(gtwiz_buffbypass_rx_reset_in),
        .gtwiz_buffbypass_rx_start_user_in(gtwiz_buffbypass_rx_start_user_in),
        .gtwiz_buffbypass_tx_done_out(NLW_inst_gtwiz_buffbypass_tx_done_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_tx_error_out(NLW_inst_gtwiz_buffbypass_tx_error_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_tx_reset_in(1'b0),
        .gtwiz_buffbypass_tx_start_user_in(1'b0),
        .gtwiz_gthe3_cpll_cal_bufg_ce_in(1'b0),
        .gtwiz_gthe3_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe3_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe4_cpll_cal_bufg_ce_in(1'b0),
        .gtwiz_gthe4_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe4_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gtye4_cpll_cal_bufg_ce_in(1'b0),
        .gtwiz_gtye4_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gtye4_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_reset_all_in(gtwiz_reset_all_in),
        .gtwiz_reset_clk_freerun_in(1'b0),
        .gtwiz_reset_qpll0lock_in(1'b0),
        .gtwiz_reset_qpll0reset_out(NLW_inst_gtwiz_reset_qpll0reset_out_UNCONNECTED[0]),
        .gtwiz_reset_qpll1lock_in(1'b0),
        .gtwiz_reset_qpll1reset_out(NLW_inst_gtwiz_reset_qpll1reset_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_cdr_stable_out(NLW_inst_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_in(1'b0),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(1'b0),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .gtwiz_reset_tx_done_in(1'b0),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_reset_tx_pll_and_datapath_in(1'b0),
        .gtwiz_userclk_rx_active_in(1'b0),
        .gtwiz_userclk_rx_active_out(NLW_inst_gtwiz_userclk_rx_active_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_reset_in(1'b0),
        .gtwiz_userclk_rx_srcclk_out(NLW_inst_gtwiz_userclk_rx_srcclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_usrclk2_out(NLW_inst_gtwiz_userclk_rx_usrclk2_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_usrclk_out(NLW_inst_gtwiz_userclk_rx_usrclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_active_in(1'b1),
        .gtwiz_userclk_tx_active_out(NLW_inst_gtwiz_userclk_tx_active_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_reset_in(1'b0),
        .gtwiz_userclk_tx_srcclk_out(NLW_inst_gtwiz_userclk_tx_srcclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_usrclk2_out(NLW_inst_gtwiz_userclk_tx_usrclk2_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_usrclk_out(NLW_inst_gtwiz_userclk_tx_usrclk_out_UNCONNECTED[0]),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .gtyrxn_in(1'b0),
        .gtyrxp_in(1'b0),
        .gtytxn_out(NLW_inst_gtytxn_out_UNCONNECTED[0]),
        .gtytxp_out(NLW_inst_gtytxp_out_UNCONNECTED[0]),
        .incpctrl_in(1'b0),
        .loopback_in({1'b0,1'b0,1'b0}),
        .looprsvd_in(1'b0),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lpbkrxtxseren_in(1'b0),
        .lpbktxrxseren_in(1'b0),
        .pcieeqrxeqadaptdone_in(1'b0),
        .pcierategen3_out(NLW_inst_pcierategen3_out_UNCONNECTED[0]),
        .pcierateidle_out(NLW_inst_pcierateidle_out_UNCONNECTED[0]),
        .pcierateqpll0_in({1'b0,1'b0,1'b0}),
        .pcierateqpll1_in({1'b0,1'b0,1'b0}),
        .pcierateqpllpd_out(NLW_inst_pcierateqpllpd_out_UNCONNECTED[1:0]),
        .pcierateqpllreset_out(NLW_inst_pcierateqpllreset_out_UNCONNECTED[1:0]),
        .pcierstidle_in(1'b0),
        .pciersttxsyncstart_in(1'b0),
        .pciesynctxsyncdone_out(NLW_inst_pciesynctxsyncdone_out_UNCONNECTED[0]),
        .pcieusergen3rdy_out(NLW_inst_pcieusergen3rdy_out_UNCONNECTED[0]),
        .pcieuserphystatusrst_out(NLW_inst_pcieuserphystatusrst_out_UNCONNECTED[0]),
        .pcieuserratedone_in(1'b0),
        .pcieuserratestart_out(NLW_inst_pcieuserratestart_out_UNCONNECTED[0]),
        .pcsrsvdin2_in(1'b0),
        .pcsrsvdin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pcsrsvdout_out(NLW_inst_pcsrsvdout_out_UNCONNECTED[15:0]),
        .phystatus_out(NLW_inst_phystatus_out_UNCONNECTED[0]),
        .pinrsrvdas_out(NLW_inst_pinrsrvdas_out_UNCONNECTED[15:0]),
        .pmarsvd0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pmarsvd1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pmarsvdin_in(1'b0),
        .pmarsvdout0_out(NLW_inst_pmarsvdout0_out_UNCONNECTED[7:0]),
        .pmarsvdout1_out(NLW_inst_pmarsvdout1_out_UNCONNECTED[7:0]),
        .powerpresent_out(NLW_inst_powerpresent_out_UNCONNECTED[0]),
        .qpll0clk_in(1'b0),
        .qpll0clkrsvd0_in(1'b0),
        .qpll0clkrsvd1_in(1'b0),
        .qpll0fbclklost_out(NLW_inst_qpll0fbclklost_out_UNCONNECTED[0]),
        .qpll0fbdiv_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll0freqlock_in(1'b0),
        .qpll0lock_out(NLW_inst_qpll0lock_out_UNCONNECTED[0]),
        .qpll0lockdetclk_in(1'b0),
        .qpll0locken_in(1'b0),
        .qpll0outclk_out(NLW_inst_qpll0outclk_out_UNCONNECTED[0]),
        .qpll0outrefclk_out(NLW_inst_qpll0outrefclk_out_UNCONNECTED[0]),
        .qpll0pd_in(1'b1),
        .qpll0refclk_in(1'b0),
        .qpll0refclklost_out(NLW_inst_qpll0refclklost_out_UNCONNECTED[0]),
        .qpll0refclksel_in({1'b0,1'b0,1'b1}),
        .qpll0reset_in(1'b1),
        .qpll1clk_in(1'b0),
        .qpll1clkrsvd0_in(1'b0),
        .qpll1clkrsvd1_in(1'b0),
        .qpll1fbclklost_out(NLW_inst_qpll1fbclklost_out_UNCONNECTED[0]),
        .qpll1fbdiv_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll1freqlock_in(1'b0),
        .qpll1lock_out(NLW_inst_qpll1lock_out_UNCONNECTED[0]),
        .qpll1lockdetclk_in(1'b0),
        .qpll1locken_in(1'b0),
        .qpll1outclk_out(NLW_inst_qpll1outclk_out_UNCONNECTED[0]),
        .qpll1outrefclk_out(NLW_inst_qpll1outrefclk_out_UNCONNECTED[0]),
        .qpll1pd_in(1'b1),
        .qpll1refclk_in(1'b0),
        .qpll1refclklost_out(NLW_inst_qpll1refclklost_out_UNCONNECTED[0]),
        .qpll1refclksel_in({1'b0,1'b0,1'b1}),
        .qpll1reset_in(1'b1),
        .qplldmonitor0_out(NLW_inst_qplldmonitor0_out_UNCONNECTED[7:0]),
        .qplldmonitor1_out(NLW_inst_qplldmonitor1_out_UNCONNECTED[7:0]),
        .qpllrsvd1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd2_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd3_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd4_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rcalenb_in(1'b1),
        .refclkoutmonitor0_out(NLW_inst_refclkoutmonitor0_out_UNCONNECTED[0]),
        .refclkoutmonitor1_out(NLW_inst_refclkoutmonitor1_out_UNCONNECTED[0]),
        .resetexception_out(NLW_inst_resetexception_out_UNCONNECTED[0]),
        .resetovrd_in(1'b0),
        .rstclkentx_in(1'b0),
        .rx8b10ben_in(1'b1),
        .rxafecfoken_in(1'b1),
        .rxbufreset_in(1'b0),
        .rxbufstatus_out(NLW_inst_rxbufstatus_out_UNCONNECTED[2:0]),
        .rxbyteisaligned_out(NLW_inst_rxbyteisaligned_out_UNCONNECTED[0]),
        .rxbyterealign_out(NLW_inst_rxbyterealign_out_UNCONNECTED[0]),
        .rxcdrfreqreset_in(1'b0),
        .rxcdrhold_in(1'b0),
        .rxcdrlock_out(NLW_inst_rxcdrlock_out_UNCONNECTED[0]),
        .rxcdrovrden_in(1'b0),
        .rxcdrphdone_out(NLW_inst_rxcdrphdone_out_UNCONNECTED[0]),
        .rxcdrreset_in(1'b0),
        .rxcdrresetrsv_in(1'b0),
        .rxchanbondseq_out(NLW_inst_rxchanbondseq_out_UNCONNECTED[0]),
        .rxchanisaligned_out(NLW_inst_rxchanisaligned_out_UNCONNECTED[0]),
        .rxchanrealign_out(NLW_inst_rxchanrealign_out_UNCONNECTED[0]),
        .rxchbonden_in(1'b0),
        .rxchbondi_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxchbondlevel_in({1'b0,1'b0,1'b0}),
        .rxchbondmaster_in(1'b0),
        .rxchbondo_out(NLW_inst_rxchbondo_out_UNCONNECTED[4:0]),
        .rxchbondslave_in(1'b0),
        .rxckcaldone_out(NLW_inst_rxckcaldone_out_UNCONNECTED[0]),
        .rxckcalreset_in(1'b0),
        .rxckcalstart_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxclkcorcnt_out(NLW_inst_rxclkcorcnt_out_UNCONNECTED[1:0]),
        .rxcominitdet_out(NLW_inst_rxcominitdet_out_UNCONNECTED[0]),
        .rxcommadet_out(NLW_inst_rxcommadet_out_UNCONNECTED[0]),
        .rxcommadeten_in(1'b1),
        .rxcomsasdet_out(NLW_inst_rxcomsasdet_out_UNCONNECTED[0]),
        .rxcomwakedet_out(NLW_inst_rxcomwakedet_out_UNCONNECTED[0]),
        .rxctrl0_out({NLW_inst_rxctrl0_out_UNCONNECTED[15:2],\^rxctrl0_out }),
        .rxctrl1_out({NLW_inst_rxctrl1_out_UNCONNECTED[15:2],\^rxctrl1_out }),
        .rxctrl2_out({NLW_inst_rxctrl2_out_UNCONNECTED[7:2],\^rxctrl2_out }),
        .rxctrl3_out({NLW_inst_rxctrl3_out_UNCONNECTED[7:2],\^rxctrl3_out }),
        .rxdata_out(NLW_inst_rxdata_out_UNCONNECTED[127:0]),
        .rxdataextendrsvd_out(NLW_inst_rxdataextendrsvd_out_UNCONNECTED[7:0]),
        .rxdatavalid_out(NLW_inst_rxdatavalid_out_UNCONNECTED[1:0]),
        .rxdccforcestart_in(1'b0),
        .rxdfeagcctrl_in({1'b0,1'b1}),
        .rxdfeagchold_in(1'b0),
        .rxdfeagcovrden_in(1'b0),
        .rxdfecfokfcnum_in({1'b1,1'b1,1'b0,1'b1}),
        .rxdfecfokfen_in(1'b0),
        .rxdfecfokfpulse_in(1'b0),
        .rxdfecfokhold_in(1'b0),
        .rxdfecfokovren_in(1'b0),
        .rxdfekhhold_in(1'b0),
        .rxdfekhovrden_in(1'b0),
        .rxdfelfhold_in(1'b0),
        .rxdfelfovrden_in(1'b0),
        .rxdfelpmreset_in(1'b0),
        .rxdfetap10hold_in(1'b0),
        .rxdfetap10ovrden_in(1'b0),
        .rxdfetap11hold_in(1'b0),
        .rxdfetap11ovrden_in(1'b0),
        .rxdfetap12hold_in(1'b0),
        .rxdfetap12ovrden_in(1'b0),
        .rxdfetap13hold_in(1'b0),
        .rxdfetap13ovrden_in(1'b0),
        .rxdfetap14hold_in(1'b0),
        .rxdfetap14ovrden_in(1'b0),
        .rxdfetap15hold_in(1'b0),
        .rxdfetap15ovrden_in(1'b0),
        .rxdfetap2hold_in(1'b0),
        .rxdfetap2ovrden_in(1'b0),
        .rxdfetap3hold_in(1'b0),
        .rxdfetap3ovrden_in(1'b0),
        .rxdfetap4hold_in(1'b0),
        .rxdfetap4ovrden_in(1'b0),
        .rxdfetap5hold_in(1'b0),
        .rxdfetap5ovrden_in(1'b0),
        .rxdfetap6hold_in(1'b0),
        .rxdfetap6ovrden_in(1'b0),
        .rxdfetap7hold_in(1'b0),
        .rxdfetap7ovrden_in(1'b0),
        .rxdfetap8hold_in(1'b0),
        .rxdfetap8ovrden_in(1'b0),
        .rxdfetap9hold_in(1'b0),
        .rxdfetap9ovrden_in(1'b0),
        .rxdfeuthold_in(1'b0),
        .rxdfeutovrden_in(1'b0),
        .rxdfevphold_in(1'b0),
        .rxdfevpovrden_in(1'b0),
        .rxdfevsen_in(1'b0),
        .rxdfexyden_in(1'b1),
        .rxdlybypass_in(1'b0),
        .rxdlyen_in(1'b0),
        .rxdlyovrden_in(1'b0),
        .rxdlysreset_in(1'b0),
        .rxdlysresetdone_out(NLW_inst_rxdlysresetdone_out_UNCONNECTED[0]),
        .rxelecidle_out(NLW_inst_rxelecidle_out_UNCONNECTED[0]),
        .rxelecidlemode_in({1'b1,1'b1}),
        .rxeqtraining_in(1'b0),
        .rxgearboxslip_in(1'b0),
        .rxheader_out(NLW_inst_rxheader_out_UNCONNECTED[5:0]),
        .rxheadervalid_out(NLW_inst_rxheadervalid_out_UNCONNECTED[1:0]),
        .rxlatclk_in(1'b0),
        .rxlfpstresetdet_out(NLW_inst_rxlfpstresetdet_out_UNCONNECTED[0]),
        .rxlfpsu2lpexitdet_out(NLW_inst_rxlfpsu2lpexitdet_out_UNCONNECTED[0]),
        .rxlfpsu3wakedet_out(NLW_inst_rxlfpsu3wakedet_out_UNCONNECTED[0]),
        .rxlpmen_in(1'b1),
        .rxlpmgchold_in(1'b0),
        .rxlpmgcovrden_in(1'b0),
        .rxlpmhfhold_in(1'b0),
        .rxlpmhfovrden_in(1'b0),
        .rxlpmlfhold_in(1'b0),
        .rxlpmlfklovrden_in(1'b0),
        .rxlpmoshold_in(1'b0),
        .rxlpmosovrden_in(1'b0),
        .rxmcommaalignen_in(rxmcommaalignen_in),
        .rxmonitorout_out(NLW_inst_rxmonitorout_out_UNCONNECTED[7:0]),
        .rxmonitorsel_in({1'b0,1'b0}),
        .rxoobreset_in(1'b0),
        .rxoscalreset_in(1'b0),
        .rxoshold_in(1'b0),
        .rxosintcfg_in(1'b0),
        .rxosintdone_out(NLW_inst_rxosintdone_out_UNCONNECTED[0]),
        .rxosinten_in(1'b0),
        .rxosinthold_in(1'b0),
        .rxosintovrden_in(1'b0),
        .rxosintstarted_out(NLW_inst_rxosintstarted_out_UNCONNECTED[0]),
        .rxosintstrobe_in(1'b0),
        .rxosintstrobedone_out(NLW_inst_rxosintstrobedone_out_UNCONNECTED[0]),
        .rxosintstrobestarted_out(NLW_inst_rxosintstrobestarted_out_UNCONNECTED[0]),
        .rxosinttestovrden_in(1'b0),
        .rxosovrden_in(1'b0),
        .rxoutclk_out(rxoutclk_out),
        .rxoutclkfabric_out(NLW_inst_rxoutclkfabric_out_UNCONNECTED[0]),
        .rxoutclkpcs_out(NLW_inst_rxoutclkpcs_out_UNCONNECTED[0]),
        .rxoutclksel_in({1'b0,1'b1,1'b0}),
        .rxpcommaalignen_in(1'b0),
        .rxpcsreset_in(1'b0),
        .rxpd_in({rxpd_in[1],1'b0}),
        .rxphalign_in(1'b0),
        .rxphaligndone_out(NLW_inst_rxphaligndone_out_UNCONNECTED[0]),
        .rxphalignen_in(1'b0),
        .rxphalignerr_out(NLW_inst_rxphalignerr_out_UNCONNECTED[0]),
        .rxphdlypd_in(1'b0),
        .rxphdlyreset_in(1'b0),
        .rxphovrden_in(1'b0),
        .rxpllclksel_in({1'b0,1'b0}),
        .rxpmareset_in(1'b0),
        .rxpmaresetdone_out(NLW_inst_rxpmaresetdone_out_UNCONNECTED[0]),
        .rxpolarity_in(1'b0),
        .rxprbscntreset_in(1'b0),
        .rxprbserr_out(NLW_inst_rxprbserr_out_UNCONNECTED[0]),
        .rxprbslocked_out(NLW_inst_rxprbslocked_out_UNCONNECTED[0]),
        .rxprbssel_in({1'b0,1'b0,1'b0,1'b0}),
        .rxprgdivresetdone_out(NLW_inst_rxprgdivresetdone_out_UNCONNECTED[0]),
        .rxprogdivreset_in(1'b0),
        .rxqpien_in(1'b0),
        .rxqpisenn_out(NLW_inst_rxqpisenn_out_UNCONNECTED[0]),
        .rxqpisenp_out(NLW_inst_rxqpisenp_out_UNCONNECTED[0]),
        .rxrate_in({1'b0,1'b0,1'b0}),
        .rxratedone_out(NLW_inst_rxratedone_out_UNCONNECTED[0]),
        .rxratemode_in(1'b0),
        .rxrecclk0_sel_out(NLW_inst_rxrecclk0_sel_out_UNCONNECTED[0]),
        .rxrecclk0sel_out(NLW_inst_rxrecclk0sel_out_UNCONNECTED[1:0]),
        .rxrecclk1_sel_out(NLW_inst_rxrecclk1_sel_out_UNCONNECTED[0]),
        .rxrecclk1sel_out(NLW_inst_rxrecclk1sel_out_UNCONNECTED[1:0]),
        .rxrecclkout_out(NLW_inst_rxrecclkout_out_UNCONNECTED[0]),
        .rxresetdone_out(rxresetdone_out),
        .rxslide_in(1'b0),
        .rxsliderdy_out(NLW_inst_rxsliderdy_out_UNCONNECTED[0]),
        .rxslipdone_out(NLW_inst_rxslipdone_out_UNCONNECTED[0]),
        .rxslipoutclk_in(1'b0),
        .rxslipoutclkrdy_out(NLW_inst_rxslipoutclkrdy_out_UNCONNECTED[0]),
        .rxslippma_in(1'b0),
        .rxslippmardy_out(NLW_inst_rxslippmardy_out_UNCONNECTED[0]),
        .rxstartofseq_out(NLW_inst_rxstartofseq_out_UNCONNECTED[1:0]),
        .rxstatus_out(NLW_inst_rxstatus_out_UNCONNECTED[2:0]),
        .rxsyncallin_in(1'b0),
        .rxsyncdone_out(NLW_inst_rxsyncdone_out_UNCONNECTED[0]),
        .rxsyncin_in(1'b0),
        .rxsyncmode_in(1'b0),
        .rxsyncout_out(NLW_inst_rxsyncout_out_UNCONNECTED[0]),
        .rxsysclksel_in({1'b0,1'b0}),
        .rxtermination_in(1'b0),
        .rxuserrdy_in(1'b1),
        .rxusrclk2_in(1'b0),
        .rxusrclk_in(rxusrclk_in),
        .rxvalid_out(NLW_inst_rxvalid_out_UNCONNECTED[0]),
        .sdm0data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sdm0finalout_out(NLW_inst_sdm0finalout_out_UNCONNECTED[3:0]),
        .sdm0reset_in(1'b0),
        .sdm0testdata_out(NLW_inst_sdm0testdata_out_UNCONNECTED[14:0]),
        .sdm0toggle_in(1'b0),
        .sdm0width_in({1'b0,1'b0}),
        .sdm1data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sdm1finalout_out(NLW_inst_sdm1finalout_out_UNCONNECTED[3:0]),
        .sdm1reset_in(1'b0),
        .sdm1testdata_out(NLW_inst_sdm1testdata_out_UNCONNECTED[14:0]),
        .sdm1toggle_in(1'b0),
        .sdm1width_in({1'b0,1'b0}),
        .sigvalidclk_in(1'b0),
        .tcongpi_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tcongpo_out(NLW_inst_tcongpo_out_UNCONNECTED[9:0]),
        .tconpowerup_in(1'b0),
        .tconreset_in({1'b0,1'b0}),
        .tconrsvdin1_in({1'b0,1'b0}),
        .tconrsvdout0_out(NLW_inst_tconrsvdout0_out_UNCONNECTED[0]),
        .tstin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx8b10bbypass_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx8b10ben_in(1'b1),
        .txbufdiffctrl_in(1'b0),
        .txbufstatus_out({\^txbufstatus_out ,NLW_inst_txbufstatus_out_UNCONNECTED[0]}),
        .txcomfinish_out(NLW_inst_txcomfinish_out_UNCONNECTED[0]),
        .txcominit_in(1'b0),
        .txcomsas_in(1'b0),
        .txcomwake_in(1'b0),
        .txctrl0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl0_in[1:0]}),
        .txctrl1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl1_in[1:0]}),
        .txctrl2_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl2_in[1:0]}),
        .txdata_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdataextendrsvd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdccdone_out(NLW_inst_txdccdone_out_UNCONNECTED[0]),
        .txdccforcestart_in(1'b0),
        .txdccreset_in(1'b0),
        .txdeemph_in({1'b0,1'b0}),
        .txdetectrx_in(1'b0),
        .txdiffctrl_in({1'b1,1'b1,1'b0,1'b0,1'b0}),
        .txdiffpd_in(1'b0),
        .txdlybypass_in(1'b1),
        .txdlyen_in(1'b0),
        .txdlyhold_in(1'b0),
        .txdlyovrden_in(1'b0),
        .txdlysreset_in(1'b0),
        .txdlysresetdone_out(NLW_inst_txdlysresetdone_out_UNCONNECTED[0]),
        .txdlyupdown_in(1'b0),
        .txelecidle_in(txelecidle_in),
        .txelforcestart_in(1'b0),
        .txheader_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txinhibit_in(1'b0),
        .txlatclk_in(1'b0),
        .txlfpstreset_in(1'b0),
        .txlfpsu2lpexit_in(1'b0),
        .txlfpsu3wake_in(1'b0),
        .txmaincursor_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txmargin_in({1'b0,1'b0,1'b0}),
        .txmuxdcdexhold_in(1'b0),
        .txmuxdcdorwren_in(1'b0),
        .txoneszeros_in(1'b0),
        .txoutclk_out(txoutclk_out),
        .txoutclkfabric_out(NLW_inst_txoutclkfabric_out_UNCONNECTED[0]),
        .txoutclkpcs_out(NLW_inst_txoutclkpcs_out_UNCONNECTED[0]),
        .txoutclksel_in({1'b1,1'b0,1'b1}),
        .txpcsreset_in(1'b0),
        .txpd_in({1'b0,1'b0}),
        .txpdelecidlemode_in(1'b0),
        .txphalign_in(1'b0),
        .txphaligndone_out(NLW_inst_txphaligndone_out_UNCONNECTED[0]),
        .txphalignen_in(1'b0),
        .txphdlypd_in(1'b1),
        .txphdlyreset_in(1'b0),
        .txphdlytstclk_in(1'b0),
        .txphinit_in(1'b0),
        .txphinitdone_out(NLW_inst_txphinitdone_out_UNCONNECTED[0]),
        .txphovrden_in(1'b0),
        .txpippmen_in(1'b0),
        .txpippmovrden_in(1'b0),
        .txpippmpd_in(1'b0),
        .txpippmsel_in(1'b0),
        .txpippmstepsize_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpisopd_in(1'b0),
        .txpllclksel_in({1'b0,1'b0}),
        .txpmareset_in(1'b0),
        .txpmaresetdone_out(NLW_inst_txpmaresetdone_out_UNCONNECTED[0]),
        .txpolarity_in(1'b0),
        .txpostcursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpostcursorinv_in(1'b0),
        .txprbsforceerr_in(1'b0),
        .txprbssel_in({1'b0,1'b0,1'b0,1'b0}),
        .txprecursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprecursorinv_in(1'b0),
        .txprgdivresetdone_out(NLW_inst_txprgdivresetdone_out_UNCONNECTED[0]),
        .txprogdivreset_in(1'b0),
        .txqpibiasen_in(1'b0),
        .txqpisenn_out(NLW_inst_txqpisenn_out_UNCONNECTED[0]),
        .txqpisenp_out(NLW_inst_txqpisenp_out_UNCONNECTED[0]),
        .txqpistrongpdown_in(1'b0),
        .txqpiweakpup_in(1'b0),
        .txrate_in({1'b0,1'b0,1'b0}),
        .txratedone_out(NLW_inst_txratedone_out_UNCONNECTED[0]),
        .txratemode_in(1'b0),
        .txresetdone_out(NLW_inst_txresetdone_out_UNCONNECTED[0]),
        .txsequence_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txswing_in(1'b0),
        .txsyncallin_in(1'b0),
        .txsyncdone_out(NLW_inst_txsyncdone_out_UNCONNECTED[0]),
        .txsyncin_in(1'b0),
        .txsyncmode_in(1'b0),
        .txsyncout_out(NLW_inst_txsyncout_out_UNCONNECTED[0]),
        .txsysclksel_in({1'b0,1'b0}),
        .txuserrdy_in(1'b1),
        .txusrclk2_in(1'b0),
        .txusrclk_in(txusrclk_in),
        .ubcfgstreamen_in(1'b0),
        .ubdaddr_out(NLW_inst_ubdaddr_out_UNCONNECTED[0]),
        .ubden_out(NLW_inst_ubden_out_UNCONNECTED[0]),
        .ubdi_out(NLW_inst_ubdi_out_UNCONNECTED[0]),
        .ubdo_in(1'b0),
        .ubdrdy_in(1'b0),
        .ubdwe_out(NLW_inst_ubdwe_out_UNCONNECTED[0]),
        .ubenable_in(1'b0),
        .ubgpi_in(1'b0),
        .ubintr_in(1'b0),
        .ubiolmbrst_in(1'b0),
        .ubmbrst_in(1'b0),
        .ubmdmcapture_in(1'b0),
        .ubmdmdbgrst_in(1'b0),
        .ubmdmdbgupdate_in(1'b0),
        .ubmdmregen_in(1'b0),
        .ubmdmshift_in(1'b0),
        .ubmdmsysrst_in(1'b0),
        .ubmdmtck_in(1'b0),
        .ubmdmtdi_in(1'b0),
        .ubmdmtdo_out(NLW_inst_ubmdmtdo_out_UNCONNECTED[0]),
        .ubrsvdout_out(NLW_inst_ubrsvdout_out_UNCONNECTED[0]),
        .ubtxuart_out(NLW_inst_ubtxuart_out_UNCONNECTED[0]));
endmodule

module bd_fd73_pcs_pma_0_gt_gthe4_channel_wrapper
   (in0,
    \gen_gtwizard_gthe4.drprdy_int ,
    gthtxn_out,
    gthtxp_out,
    \gen_gtwizard_gthe4.gtpowergood_int ,
    rxcdrlock_out,
    rxoutclk_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    gtwiz_userclk_rx_active_out,
    rxresetdone_out,
    rxsyncdone_out,
    txoutclk_out,
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST ,
    txresetdone_out,
    gtwiz_userdata_rx_out,
    D,
    rxctrl0_out,
    rxctrl1_out,
    txbufstatus_out,
    rxctrl2_out,
    rxctrl3_out,
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_0 ,
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_1 ,
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_2 ,
    drpclk_in,
    DEN_O,
    DWE_O,
    gthrxn_in,
    gthrxp_in,
    gtrefclk0_in,
    \gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int ,
    \gen_gtwizard_gthe4.gttxreset_int ,
    \gen_gtwizard_gthe4.rxdlysreset_int ,
    rxmcommaalignen_in,
    \gen_gtwizard_gthe4.rxprogdivreset_int ,
    RXRATE,
    \gen_gtwizard_gthe4.rxuserrdy_int ,
    rxusrclk_in,
    txelecidle_in,
    \gen_gtwizard_gthe4.txprogdivreset_ch_int ,
    \gen_gtwizard_gthe4.txuserrdy_int ,
    txusrclk_in,
    gtwiz_userdata_tx_in,
    Q,
    txctrl0_in,
    txctrl1_in,
    RXPD,
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_3 ,
    txctrl2_in,
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_4 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5);
  output in0;
  output \gen_gtwizard_gthe4.drprdy_int ;
  output [0:0]gthtxn_out;
  output [0:0]gthtxp_out;
  output \gen_gtwizard_gthe4.gtpowergood_int ;
  output [0:0]rxcdrlock_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxoutclkpcs_out;
  output [0:0]rxphaligndone_out;
  output [0:0]gtwiz_userclk_rx_active_out;
  output [0:0]rxresetdone_out;
  output [0:0]rxsyncdone_out;
  output [0:0]txoutclk_out;
  output \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST ;
  output [0:0]txresetdone_out;
  output [15:0]gtwiz_userdata_rx_out;
  output [15:0]D;
  output [1:0]rxctrl0_out;
  output [1:0]rxctrl1_out;
  output [0:0]txbufstatus_out;
  output [1:0]rxctrl2_out;
  output [1:0]rxctrl3_out;
  output \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_0 ;
  input \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_1 ;
  input \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_2 ;
  input [0:0]drpclk_in;
  input DEN_O;
  input DWE_O;
  input [0:0]gthrxn_in;
  input [0:0]gthrxp_in;
  input [0:0]gtrefclk0_in;
  input \gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int ;
  input \gen_gtwizard_gthe4.gttxreset_int ;
  input \gen_gtwizard_gthe4.rxdlysreset_int ;
  input [0:0]rxmcommaalignen_in;
  input \gen_gtwizard_gthe4.rxprogdivreset_int ;
  input [0:0]RXRATE;
  input \gen_gtwizard_gthe4.rxuserrdy_int ;
  input [0:0]rxusrclk_in;
  input [0:0]txelecidle_in;
  input \gen_gtwizard_gthe4.txprogdivreset_ch_int ;
  input \gen_gtwizard_gthe4.txuserrdy_int ;
  input [0:0]txusrclk_in;
  input [15:0]gtwiz_userdata_tx_in;
  input [15:0]Q;
  input [1:0]txctrl0_in;
  input [1:0]txctrl1_in;
  input [0:0]RXPD;
  input [2:0]\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_3 ;
  input [1:0]txctrl2_in;
  input [6:0]\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_4 ;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  output lopt_4;
  output lopt_5;

  wire [15:0]D;
  wire DEN_O;
  wire DWE_O;
  wire [15:0]Q;
  wire [0:0]RXPD;
  wire [0:0]RXRATE;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int ;
  wire \gen_gtwizard_gthe4.drprdy_int ;
  wire \gen_gtwizard_gthe4.gtpowergood_int ;
  wire \gen_gtwizard_gthe4.gttxreset_int ;
  wire \gen_gtwizard_gthe4.rxdlysreset_int ;
  wire \gen_gtwizard_gthe4.rxprogdivreset_int ;
  wire \gen_gtwizard_gthe4.rxuserrdy_int ;
  wire \gen_gtwizard_gthe4.txprogdivreset_ch_int ;
  wire \gen_gtwizard_gthe4.txuserrdy_int ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_0 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_1 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_2 ;
  wire [2:0]\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_3 ;
  wire [6:0]\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_4 ;
  wire [0:0]gthrxn_in;
  wire [0:0]gthrxp_in;
  wire [0:0]gthtxn_out;
  wire [0:0]gthtxp_out;
  wire [0:0]gtrefclk0_in;
  wire [0:0]gtwiz_userclk_rx_active_out;
  wire [15:0]gtwiz_userdata_rx_out;
  wire [15:0]gtwiz_userdata_tx_in;
  wire in0;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire [0:0]rxcdrlock_out;
  wire [1:0]rxctrl0_out;
  wire [1:0]rxctrl1_out;
  wire [1:0]rxctrl2_out;
  wire [1:0]rxctrl3_out;
  wire [0:0]rxmcommaalignen_in;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxoutclkpcs_out;
  wire [0:0]rxphaligndone_out;
  wire [0:0]rxresetdone_out;
  wire [0:0]rxsyncdone_out;
  wire [0:0]rxusrclk_in;
  wire [0:0]txbufstatus_out;
  wire [1:0]txctrl0_in;
  wire [1:0]txctrl1_in;
  wire [1:0]txctrl2_in;
  wire [0:0]txelecidle_in;
  wire [0:0]txoutclk_out;
  wire [0:0]txresetdone_out;
  wire [0:0]txusrclk_in;

  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gthe4_channel channel_inst
       (.D(D),
        .DEN_O(DEN_O),
        .DWE_O(DWE_O),
        .Q(Q),
        .RXPD(RXPD),
        .RXRATE(RXRATE),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int (\gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int ),
        .\gen_gtwizard_gthe4.drprdy_int (\gen_gtwizard_gthe4.drprdy_int ),
        .\gen_gtwizard_gthe4.gtpowergood_int (\gen_gtwizard_gthe4.gtpowergood_int ),
        .\gen_gtwizard_gthe4.gttxreset_int (\gen_gtwizard_gthe4.gttxreset_int ),
        .\gen_gtwizard_gthe4.rxdlysreset_int (\gen_gtwizard_gthe4.rxdlysreset_int ),
        .\gen_gtwizard_gthe4.rxprogdivreset_int (\gen_gtwizard_gthe4.rxprogdivreset_int ),
        .\gen_gtwizard_gthe4.rxuserrdy_int (\gen_gtwizard_gthe4.rxuserrdy_int ),
        .\gen_gtwizard_gthe4.txprogdivreset_ch_int (\gen_gtwizard_gthe4.txprogdivreset_ch_int ),
        .\gen_gtwizard_gthe4.txuserrdy_int (\gen_gtwizard_gthe4.txuserrdy_int ),
        .\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_0 (\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST ),
        .\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_1 (\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_0 ),
        .\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_2 (\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_1 ),
        .\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_3 (\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_2 ),
        .\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_4 (\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_3 ),
        .\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_5 (\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_4 ),
        .gthrxn_in(gthrxn_in),
        .gthrxp_in(gthrxp_in),
        .gthtxn_out(gthtxn_out),
        .gthtxp_out(gthtxp_out),
        .gtrefclk0_in(gtrefclk0_in),
        .gtwiz_userclk_rx_active_out(gtwiz_userclk_rx_active_out),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .in0(in0),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .rxcdrlock_out(rxcdrlock_out),
        .rxctrl0_out(rxctrl0_out),
        .rxctrl1_out(rxctrl1_out),
        .rxctrl2_out(rxctrl2_out),
        .rxctrl3_out(rxctrl3_out),
        .rxmcommaalignen_in(rxmcommaalignen_in),
        .rxoutclk_out(rxoutclk_out),
        .rxoutclkpcs_out(rxoutclkpcs_out),
        .rxphaligndone_out(rxphaligndone_out),
        .rxresetdone_out(rxresetdone_out),
        .rxsyncdone_out(rxsyncdone_out),
        .rxusrclk_in(rxusrclk_in),
        .txbufstatus_out(txbufstatus_out),
        .txctrl0_in(txctrl0_in),
        .txctrl1_in(txctrl1_in),
        .txctrl2_in(txctrl2_in),
        .txelecidle_in(txelecidle_in),
        .txoutclk_out(txoutclk_out),
        .txresetdone_out(txresetdone_out),
        .txusrclk_in(txusrclk_in));
endmodule

module bd_fd73_pcs_pma_0_gt_gtwizard_gthe4
   (gtpowergood_out,
    gthtxn_out,
    gthtxp_out,
    rxoutclk_out,
    rxresetdone_out,
    txoutclk_out,
    gtwiz_userdata_rx_out,
    rxctrl0_out,
    rxctrl1_out,
    txbufstatus_out,
    rxctrl2_out,
    rxctrl3_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_tx_done_out,
    gtwiz_buffbypass_rx_done_out,
    rxpd_in,
    drpclk_in,
    gthrxn_in,
    gthrxp_in,
    gtrefclk0_in,
    rxmcommaalignen_in,
    rxusrclk_in,
    txelecidle_in,
    txusrclk_in,
    gtwiz_userdata_tx_in,
    txctrl0_in,
    txctrl1_in,
    txctrl2_in,
    gtwiz_buffbypass_rx_reset_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_buffbypass_rx_start_user_in,
    gtwiz_reset_rx_datapath_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5);
  output [0:0]gtpowergood_out;
  output [0:0]gthtxn_out;
  output [0:0]gthtxp_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxresetdone_out;
  output [0:0]txoutclk_out;
  output [15:0]gtwiz_userdata_rx_out;
  output [1:0]rxctrl0_out;
  output [1:0]rxctrl1_out;
  output [0:0]txbufstatus_out;
  output [1:0]rxctrl2_out;
  output [1:0]rxctrl3_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_buffbypass_rx_done_out;
  input [0:0]rxpd_in;
  input [0:0]drpclk_in;
  input [0:0]gthrxn_in;
  input [0:0]gthrxp_in;
  input [0:0]gtrefclk0_in;
  input [0:0]rxmcommaalignen_in;
  input [0:0]rxusrclk_in;
  input [0:0]txelecidle_in;
  input [0:0]txusrclk_in;
  input [15:0]gtwiz_userdata_tx_in;
  input [1:0]txctrl0_in;
  input [1:0]txctrl1_in;
  input [1:0]txctrl2_in;
  input [0:0]gtwiz_buffbypass_rx_reset_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_buffbypass_rx_start_user_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  output lopt_4;
  output lopt_5;

  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gthe4.cplllock_ch_int ;
  wire \gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int ;
  wire [15:0]\gen_gtwizard_gthe4.drpdo_int ;
  wire \gen_gtwizard_gthe4.drpen_ch_int ;
  wire \gen_gtwizard_gthe4.drprdy_int ;
  wire \gen_gtwizard_gthe4.drpwe_ch_int ;
  wire \gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_11 ;
  wire \gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_14 ;
  wire \gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_5 ;
  wire \gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_56 ;
  wire \gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_7 ;
  wire \gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_8 ;
  wire \gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_9 ;
  wire \gen_gtwizard_gthe4.gen_cpll_cal_gthe4.cpll_cal_reset_int ;
  wire [7:1]\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.drpaddr_cpll_cal_int ;
  wire [15:0]\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.drpdi_cpll_cal_int ;
  wire \gen_gtwizard_gthe4.gen_cpll_cal_gthe4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_inst_n_1 ;
  wire \gen_gtwizard_gthe4.gen_cpll_cal_gthe4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_inst_n_2 ;
  wire \gen_gtwizard_gthe4.gen_cpll_cal_gthe4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_inst_n_3 ;
  wire [2:0]\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.txoutclksel_cpll_cal_int ;
  wire \gen_gtwizard_gthe4.gen_pwrgood_delay_inst[0].delay_powergood_inst_n_1 ;
  wire \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_inst_n_9 ;
  wire \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  wire \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  wire \gen_gtwizard_gthe4.gtpowergood_int ;
  wire \gen_gtwizard_gthe4.gttxreset_int ;
  wire \gen_gtwizard_gthe4.rxdlysreset_int ;
  wire \gen_gtwizard_gthe4.rxprogdivreset_int ;
  wire \gen_gtwizard_gthe4.rxratemode_ch_int ;
  wire \gen_gtwizard_gthe4.rxuserrdy_int ;
  wire \gen_gtwizard_gthe4.txprgdivresetdone_int ;
  wire \gen_gtwizard_gthe4.txprogdivreset_ch_int ;
  wire \gen_gtwizard_gthe4.txprogdivreset_int ;
  wire \gen_gtwizard_gthe4.txuserrdy_int ;
  wire [0:0]gthrxn_in;
  wire [0:0]gthrxp_in;
  wire [0:0]gthtxn_out;
  wire [0:0]gthtxp_out;
  wire [0:0]gtpowergood_out;
  wire [0:0]gtrefclk0_in;
  wire [0:0]gtwiz_buffbypass_rx_done_out;
  wire [0:0]gtwiz_buffbypass_rx_reset_in;
  wire [0:0]gtwiz_buffbypass_rx_start_user_in;
  wire [0:0]gtwiz_reset_all_in;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [15:0]gtwiz_userdata_rx_out;
  wire [15:0]gtwiz_userdata_tx_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire rst_in0;
  wire [1:0]rxctrl0_out;
  wire [1:0]rxctrl1_out;
  wire [1:0]rxctrl2_out;
  wire [1:0]rxctrl3_out;
  wire [0:0]rxmcommaalignen_in;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxpd_in;
  wire [0:0]rxresetdone_out;
  wire [0:0]rxusrclk_in;
  wire [0:0]txbufstatus_out;
  wire [1:0]txctrl0_in;
  wire [1:0]txctrl1_in;
  wire [1:0]txctrl2_in;
  wire [0:0]txelecidle_in;
  wire [0:0]txoutclk_out;
  wire [0:0]txusrclk_in;

  bd_fd73_pcs_pma_0_gt_gthe4_channel_wrapper \gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst 
       (.D(\gen_gtwizard_gthe4.drpdo_int ),
        .DEN_O(\gen_gtwizard_gthe4.drpen_ch_int ),
        .DWE_O(\gen_gtwizard_gthe4.drpwe_ch_int ),
        .Q(\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.drpdi_cpll_cal_int ),
        .RXPD(\gen_gtwizard_gthe4.gen_pwrgood_delay_inst[0].delay_powergood_inst_n_1 ),
        .RXRATE(\gen_gtwizard_gthe4.rxratemode_ch_int ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int (\gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int ),
        .\gen_gtwizard_gthe4.drprdy_int (\gen_gtwizard_gthe4.drprdy_int ),
        .\gen_gtwizard_gthe4.gtpowergood_int (\gen_gtwizard_gthe4.gtpowergood_int ),
        .\gen_gtwizard_gthe4.gttxreset_int (\gen_gtwizard_gthe4.gttxreset_int ),
        .\gen_gtwizard_gthe4.rxdlysreset_int (\gen_gtwizard_gthe4.rxdlysreset_int ),
        .\gen_gtwizard_gthe4.rxprogdivreset_int (\gen_gtwizard_gthe4.rxprogdivreset_int ),
        .\gen_gtwizard_gthe4.rxuserrdy_int (\gen_gtwizard_gthe4.rxuserrdy_int ),
        .\gen_gtwizard_gthe4.txprogdivreset_ch_int (\gen_gtwizard_gthe4.txprogdivreset_ch_int ),
        .\gen_gtwizard_gthe4.txuserrdy_int (\gen_gtwizard_gthe4.txuserrdy_int ),
        .\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST (\gen_gtwizard_gthe4.txprgdivresetdone_int ),
        .\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_0 (\gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_56 ),
        .\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_1 (\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_inst_n_1 ),
        .\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_2 (\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_inst_n_2 ),
        .\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_3 (\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.txoutclksel_cpll_cal_int ),
        .\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_4 (\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.drpaddr_cpll_cal_int ),
        .gthrxn_in(gthrxn_in),
        .gthrxp_in(gthrxp_in),
        .gthtxn_out(gthtxn_out),
        .gthtxp_out(gthtxp_out),
        .gtrefclk0_in(gtrefclk0_in),
        .gtwiz_userclk_rx_active_out(\gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_9 ),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .in0(\gen_gtwizard_gthe4.cplllock_ch_int ),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .rxcdrlock_out(\gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_5 ),
        .rxctrl0_out(rxctrl0_out),
        .rxctrl1_out(rxctrl1_out),
        .rxctrl2_out(rxctrl2_out),
        .rxctrl3_out(rxctrl3_out),
        .rxmcommaalignen_in(rxmcommaalignen_in),
        .rxoutclk_out(rxoutclk_out),
        .rxoutclkpcs_out(\gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_7 ),
        .rxphaligndone_out(\gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_8 ),
        .rxresetdone_out(rxresetdone_out),
        .rxsyncdone_out(\gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_11 ),
        .rxusrclk_in(rxusrclk_in),
        .txbufstatus_out(txbufstatus_out),
        .txctrl0_in(txctrl0_in),
        .txctrl1_in(txctrl1_in),
        .txctrl2_in(txctrl2_in),
        .txelecidle_in(txelecidle_in),
        .txoutclk_out(txoutclk_out),
        .txresetdone_out(\gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_14 ),
        .txusrclk_in(txusrclk_in));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal \gen_gtwizard_gthe4.gen_cpll_cal_gthe4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_inst 
       (.DADDR_O(\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.drpaddr_cpll_cal_int ),
        .DEN_O(\gen_gtwizard_gthe4.drpen_ch_int ),
        .DI_O(\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.drpdi_cpll_cal_int ),
        .DO_I(\gen_gtwizard_gthe4.drpdo_int ),
        .DWE_O(\gen_gtwizard_gthe4.drpwe_ch_int ),
        .Q(\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.txoutclksel_cpll_cal_int ),
        .RESET_IN(\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.cpll_cal_reset_int ),
        .USER_CPLLLOCK_OUT_reg(\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_inst_n_3 ),
        .cpllpd_int_reg(\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_inst_n_1 ),
        .cpllreset_int_reg(\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_inst_n_2 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gthe4.drprdy_int (\gen_gtwizard_gthe4.drprdy_int ),
        .\gen_gtwizard_gthe4.txprogdivreset_ch_int (\gen_gtwizard_gthe4.txprogdivreset_ch_int ),
        .i_in_meta_reg(\gen_gtwizard_gthe4.txprogdivreset_int ),
        .i_in_meta_reg_0(\gen_gtwizard_gthe4.txprgdivresetdone_int ),
        .in0(\gen_gtwizard_gthe4.cplllock_ch_int ),
        .lopt(lopt_4),
        .lopt_1(lopt_5),
        .rst_in0(rst_in0),
        .txoutclk_out(txoutclk_out));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gthe4_delay_powergood \gen_gtwizard_gthe4.gen_pwrgood_delay_inst[0].delay_powergood_inst 
       (.RXPD(\gen_gtwizard_gthe4.gen_pwrgood_delay_inst[0].delay_powergood_inst_n_1 ),
        .RXRATE(\gen_gtwizard_gthe4.rxratemode_ch_int ),
        .\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 (\gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_56 ),
        .out(gtpowergood_out),
        .rxoutclkpcs_out(\gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_7 ),
        .rxpd_in(rxpd_in));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[0].bit_synchronizer_rxresetdone_inst 
       (.drpclk_in(drpclk_in),
        .\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .rxresetdone_out(rxresetdone_out));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_13 \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[0].bit_synchronizer_txresetdone_inst 
       (.drpclk_in(drpclk_in),
        .\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .txresetdone_out(\gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_14 ));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gtwiz_reset \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_inst 
       (.RESET_IN(\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.cpll_cal_reset_int ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int (\gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int ),
        .\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .\gen_gtwizard_gthe4.gtpowergood_int (\gen_gtwizard_gthe4.gtpowergood_int ),
        .\gen_gtwizard_gthe4.gttxreset_int (\gen_gtwizard_gthe4.gttxreset_int ),
        .\gen_gtwizard_gthe4.rxprogdivreset_int (\gen_gtwizard_gthe4.rxprogdivreset_int ),
        .\gen_gtwizard_gthe4.rxuserrdy_int (\gen_gtwizard_gthe4.rxuserrdy_int ),
        .\gen_gtwizard_gthe4.txuserrdy_int (\gen_gtwizard_gthe4.txuserrdy_int ),
        .gtpowergood_out(gtpowergood_out),
        .gtwiz_reset_all_in(gtwiz_reset_all_in),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_userclk_rx_active_out(\gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_9 ),
        .i_in_meta_reg(\gen_gtwizard_gthe4.gen_cpll_cal_gthe4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_inst_n_3 ),
        .rst_in0(rst_in0),
        .rst_in_out_reg(\gen_gtwizard_gthe4.txprogdivreset_int ),
        .rst_in_out_reg_0(\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_inst_n_9 ),
        .rxcdrlock_out(\gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_5 ),
        .rxusrclk_in(rxusrclk_in),
        .txusrclk_in(txusrclk_in));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gtwiz_buffbypass_rx \gen_gtwizard_gthe4.gen_rx_buffer_bypass_internal.gen_single_instance.gtwiz_buffbypass_rx_inst 
       (.\gen_gtwizard_gthe4.rxdlysreset_int (\gen_gtwizard_gthe4.rxdlysreset_int ),
        .gtwiz_buffbypass_rx_done_out(gtwiz_buffbypass_rx_done_out),
        .gtwiz_buffbypass_rx_reset_in(gtwiz_buffbypass_rx_reset_in),
        .gtwiz_buffbypass_rx_start_user_in(gtwiz_buffbypass_rx_start_user_in),
        .rst_in_sync2_reg(\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_inst_n_9 ),
        .rxphaligndone_out(\gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_8 ),
        .rxsyncdone_out(\gen_gtwizard_gthe4.gen_channel_container[27].gen_enabled_channel.gthe4_channel_wrapper_inst_n_11 ),
        .rxusrclk_in(rxusrclk_in));
endmodule

(* C_CHANNEL_ENABLE = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) (* C_COMMON_SCALING_FACTOR = "1" *) (* C_CPLL_VCO_FREQUENCY = "2500.000000" *) 
(* C_ENABLE_COMMON_USRCLK = "0" *) (* C_FORCE_COMMONS = "0" *) (* C_FREERUN_FREQUENCY = "50.000000" *) 
(* C_GT_REV = "57" *) (* C_GT_TYPE = "2" *) (* C_INCLUDE_CPLL_CAL = "2" *) 
(* C_LOCATE_COMMON = "0" *) (* C_LOCATE_IN_SYSTEM_IBERT_CORE = "2" *) (* C_LOCATE_RESET_CONTROLLER = "0" *) 
(* C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER = "0" *) (* C_LOCATE_RX_USER_CLOCKING = "1" *) (* C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER = "0" *) 
(* C_LOCATE_TX_USER_CLOCKING = "1" *) (* C_LOCATE_USER_DATA_WIDTH_SIZING = "0" *) (* C_PCIE_CORECLK_FREQ = "250" *) 
(* C_PCIE_ENABLE = "0" *) (* C_RESET_CONTROLLER_INSTANCE_CTRL = "0" *) (* C_RESET_SEQUENCE_INTERVAL = "0" *) 
(* C_RX_BUFFBYPASS_MODE = "0" *) (* C_RX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) (* C_RX_BUFFER_MODE = "0" *) 
(* C_RX_CB_DISP = "8'b00000000" *) (* C_RX_CB_K = "8'b00000000" *) (* C_RX_CB_LEN_SEQ = "1" *) 
(* C_RX_CB_MAX_LEVEL = "1" *) (* C_RX_CB_NUM_SEQ = "0" *) (* C_RX_CB_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_RX_CC_DISP = "8'b00000000" *) (* C_RX_CC_ENABLE = "0" *) (* C_RX_CC_K = "8'b00000000" *) 
(* C_RX_CC_LEN_SEQ = "1" *) (* C_RX_CC_NUM_SEQ = "0" *) (* C_RX_CC_PERIODICITY = "5000" *) 
(* C_RX_CC_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) (* C_RX_COMMA_M_ENABLE = "1" *) (* C_RX_COMMA_M_VAL = "10'b1010000011" *) 
(* C_RX_COMMA_P_ENABLE = "1" *) (* C_RX_COMMA_P_VAL = "10'b0101111100" *) (* C_RX_DATA_DECODING = "1" *) 
(* C_RX_ENABLE = "1" *) (* C_RX_INT_DATA_WIDTH = "20" *) (* C_RX_LINE_RATE = "1.250000" *) 
(* C_RX_MASTER_CHANNEL_IDX = "109" *) (* C_RX_OUTCLK_BUFG_GT_DIV = "1" *) (* C_RX_OUTCLK_FREQUENCY = "62.500000" *) 
(* C_RX_OUTCLK_SOURCE = "1" *) (* C_RX_PLL_TYPE = "2" *) (* C_RX_RECCLK_OUTPUT = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_RX_REFCLK_FREQUENCY = "156.250000" *) (* C_RX_SLIDE_MODE = "0" *) (* C_RX_USER_CLOCKING_CONTENTS = "0" *) 
(* C_RX_USER_CLOCKING_INSTANCE_CTRL = "0" *) (* C_RX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) (* C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
(* C_RX_USER_CLOCKING_SOURCE = "0" *) (* C_RX_USER_DATA_WIDTH = "16" *) (* C_RX_USRCLK2_FREQUENCY = "62.500000" *) 
(* C_RX_USRCLK_FREQUENCY = "62.500000" *) (* C_SECONDARY_QPLL_ENABLE = "0" *) (* C_SECONDARY_QPLL_REFCLK_FREQUENCY = "257.812500" *) 
(* C_SIM_CPLL_CAL_BYPASS = "1" *) (* C_TOTAL_NUM_CHANNELS = "1" *) (* C_TOTAL_NUM_COMMONS = "0" *) 
(* C_TOTAL_NUM_COMMONS_EXAMPLE = "0" *) (* C_TXPROGDIV_FREQ_ENABLE = "1" *) (* C_TXPROGDIV_FREQ_SOURCE = "2" *) 
(* C_TXPROGDIV_FREQ_VAL = "125.000000" *) (* C_TX_BUFFBYPASS_MODE = "0" *) (* C_TX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
(* C_TX_BUFFER_MODE = "1" *) (* C_TX_DATA_ENCODING = "1" *) (* C_TX_ENABLE = "1" *) 
(* C_TX_INT_DATA_WIDTH = "20" *) (* C_TX_LINE_RATE = "1.250000" *) (* C_TX_MASTER_CHANNEL_IDX = "109" *) 
(* C_TX_OUTCLK_BUFG_GT_DIV = "2" *) (* C_TX_OUTCLK_FREQUENCY = "62.500000" *) (* C_TX_OUTCLK_SOURCE = "4" *) 
(* C_TX_PLL_TYPE = "2" *) (* C_TX_REFCLK_FREQUENCY = "156.250000" *) (* C_TX_USER_CLOCKING_CONTENTS = "0" *) 
(* C_TX_USER_CLOCKING_INSTANCE_CTRL = "0" *) (* C_TX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) (* C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
(* C_TX_USER_CLOCKING_SOURCE = "0" *) (* C_TX_USER_DATA_WIDTH = "16" *) (* C_TX_USRCLK2_FREQUENCY = "62.500000" *) 
(* C_TX_USRCLK_FREQUENCY = "62.500000" *) (* C_USER_GTPOWERGOOD_DELAY_EN = "1" *) 
module bd_fd73_pcs_pma_0_gt_gtwizard_top
   (gtwiz_userclk_tx_reset_in,
    gtwiz_userclk_tx_active_in,
    gtwiz_userclk_tx_srcclk_out,
    gtwiz_userclk_tx_usrclk_out,
    gtwiz_userclk_tx_usrclk2_out,
    gtwiz_userclk_tx_active_out,
    gtwiz_userclk_rx_reset_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_userclk_rx_srcclk_out,
    gtwiz_userclk_rx_usrclk_out,
    gtwiz_userclk_rx_usrclk2_out,
    gtwiz_userclk_rx_active_out,
    gtwiz_buffbypass_tx_reset_in,
    gtwiz_buffbypass_tx_start_user_in,
    gtwiz_buffbypass_tx_done_out,
    gtwiz_buffbypass_tx_error_out,
    gtwiz_buffbypass_rx_reset_in,
    gtwiz_buffbypass_rx_start_user_in,
    gtwiz_buffbypass_rx_done_out,
    gtwiz_buffbypass_rx_error_out,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_tx_done_in,
    gtwiz_reset_rx_done_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_reset_qpll1lock_in,
    gtwiz_reset_rx_cdr_stable_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    gtwiz_reset_qpll1reset_out,
    gtwiz_gthe3_cpll_cal_txoutclk_period_in,
    gtwiz_gthe3_cpll_cal_cnt_tol_in,
    gtwiz_gthe3_cpll_cal_bufg_ce_in,
    gtwiz_gthe4_cpll_cal_txoutclk_period_in,
    gtwiz_gthe4_cpll_cal_cnt_tol_in,
    gtwiz_gthe4_cpll_cal_bufg_ce_in,
    gtwiz_gtye4_cpll_cal_txoutclk_period_in,
    gtwiz_gtye4_cpll_cal_cnt_tol_in,
    gtwiz_gtye4_cpll_cal_bufg_ce_in,
    gtwiz_userdata_tx_in,
    gtwiz_userdata_rx_out,
    bgbypassb_in,
    bgmonitorenb_in,
    bgpdb_in,
    bgrcalovrd_in,
    bgrcalovrdenb_in,
    drpaddr_common_in,
    drpclk_common_in,
    drpdi_common_in,
    drpen_common_in,
    drpwe_common_in,
    gtgrefclk0_in,
    gtgrefclk1_in,
    gtnorthrefclk00_in,
    gtnorthrefclk01_in,
    gtnorthrefclk10_in,
    gtnorthrefclk11_in,
    gtrefclk00_in,
    gtrefclk01_in,
    gtrefclk10_in,
    gtrefclk11_in,
    gtsouthrefclk00_in,
    gtsouthrefclk01_in,
    gtsouthrefclk10_in,
    gtsouthrefclk11_in,
    pcierateqpll0_in,
    pcierateqpll1_in,
    pmarsvd0_in,
    pmarsvd1_in,
    qpll0clkrsvd0_in,
    qpll0clkrsvd1_in,
    qpll0fbdiv_in,
    qpll0lockdetclk_in,
    qpll0locken_in,
    qpll0pd_in,
    qpll0refclksel_in,
    qpll0reset_in,
    qpll1clkrsvd0_in,
    qpll1clkrsvd1_in,
    qpll1fbdiv_in,
    qpll1lockdetclk_in,
    qpll1locken_in,
    qpll1pd_in,
    qpll1refclksel_in,
    qpll1reset_in,
    qpllrsvd1_in,
    qpllrsvd2_in,
    qpllrsvd3_in,
    qpllrsvd4_in,
    rcalenb_in,
    sdm0data_in,
    sdm0reset_in,
    sdm0toggle_in,
    sdm0width_in,
    sdm1data_in,
    sdm1reset_in,
    sdm1toggle_in,
    sdm1width_in,
    tcongpi_in,
    tconpowerup_in,
    tconreset_in,
    tconrsvdin1_in,
    ubcfgstreamen_in,
    ubdo_in,
    ubdrdy_in,
    ubenable_in,
    ubgpi_in,
    ubintr_in,
    ubiolmbrst_in,
    ubmbrst_in,
    ubmdmcapture_in,
    ubmdmdbgrst_in,
    ubmdmdbgupdate_in,
    ubmdmregen_in,
    ubmdmshift_in,
    ubmdmsysrst_in,
    ubmdmtck_in,
    ubmdmtdi_in,
    drpdo_common_out,
    drprdy_common_out,
    pmarsvdout0_out,
    pmarsvdout1_out,
    qpll0fbclklost_out,
    qpll0lock_out,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll0refclklost_out,
    qpll1fbclklost_out,
    qpll1lock_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    qpll1refclklost_out,
    qplldmonitor0_out,
    qplldmonitor1_out,
    refclkoutmonitor0_out,
    refclkoutmonitor1_out,
    rxrecclk0_sel_out,
    rxrecclk1_sel_out,
    rxrecclk0sel_out,
    rxrecclk1sel_out,
    sdm0finalout_out,
    sdm0testdata_out,
    sdm1finalout_out,
    sdm1testdata_out,
    tcongpo_out,
    tconrsvdout0_out,
    ubdaddr_out,
    ubden_out,
    ubdi_out,
    ubdwe_out,
    ubmdmtdo_out,
    ubrsvdout_out,
    ubtxuart_out,
    cdrstepdir_in,
    cdrstepsq_in,
    cdrstepsx_in,
    cfgreset_in,
    clkrsvd0_in,
    clkrsvd1_in,
    cpllfreqlock_in,
    cplllockdetclk_in,
    cplllocken_in,
    cpllpd_in,
    cpllrefclksel_in,
    cpllreset_in,
    dmonfiforeset_in,
    dmonitorclk_in,
    drpaddr_in,
    drpclk_in,
    drpdi_in,
    drpen_in,
    drprst_in,
    drpwe_in,
    elpcaldvorwren_in,
    elpcalpaorwren_in,
    evoddphicaldone_in,
    evoddphicalstart_in,
    evoddphidrden_in,
    evoddphidwren_in,
    evoddphixrden_in,
    evoddphixwren_in,
    eyescanmode_in,
    eyescanreset_in,
    eyescantrigger_in,
    freqos_in,
    gtgrefclk_in,
    gthrxn_in,
    gthrxp_in,
    gtnorthrefclk0_in,
    gtnorthrefclk1_in,
    gtrefclk0_in,
    gtrefclk1_in,
    gtresetsel_in,
    gtrsvd_in,
    gtrxreset_in,
    gtrxresetsel_in,
    gtsouthrefclk0_in,
    gtsouthrefclk1_in,
    gttxreset_in,
    gttxresetsel_in,
    incpctrl_in,
    gtyrxn_in,
    gtyrxp_in,
    loopback_in,
    looprsvd_in,
    lpbkrxtxseren_in,
    lpbktxrxseren_in,
    pcieeqrxeqadaptdone_in,
    pcierstidle_in,
    pciersttxsyncstart_in,
    pcieuserratedone_in,
    pcsrsvdin_in,
    pcsrsvdin2_in,
    pmarsvdin_in,
    qpll0clk_in,
    qpll0freqlock_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1freqlock_in,
    qpll1refclk_in,
    resetovrd_in,
    rstclkentx_in,
    rx8b10ben_in,
    rxafecfoken_in,
    rxbufreset_in,
    rxcdrfreqreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxcdrreset_in,
    rxcdrresetrsv_in,
    rxchbonden_in,
    rxchbondi_in,
    rxchbondlevel_in,
    rxchbondmaster_in,
    rxchbondslave_in,
    rxckcalreset_in,
    rxckcalstart_in,
    rxcommadeten_in,
    rxdfeagcctrl_in,
    rxdccforcestart_in,
    rxdfeagchold_in,
    rxdfeagcovrden_in,
    rxdfecfokfcnum_in,
    rxdfecfokfen_in,
    rxdfecfokfpulse_in,
    rxdfecfokhold_in,
    rxdfecfokovren_in,
    rxdfekhhold_in,
    rxdfekhovrden_in,
    rxdfelfhold_in,
    rxdfelfovrden_in,
    rxdfelpmreset_in,
    rxdfetap10hold_in,
    rxdfetap10ovrden_in,
    rxdfetap11hold_in,
    rxdfetap11ovrden_in,
    rxdfetap12hold_in,
    rxdfetap12ovrden_in,
    rxdfetap13hold_in,
    rxdfetap13ovrden_in,
    rxdfetap14hold_in,
    rxdfetap14ovrden_in,
    rxdfetap15hold_in,
    rxdfetap15ovrden_in,
    rxdfetap2hold_in,
    rxdfetap2ovrden_in,
    rxdfetap3hold_in,
    rxdfetap3ovrden_in,
    rxdfetap4hold_in,
    rxdfetap4ovrden_in,
    rxdfetap5hold_in,
    rxdfetap5ovrden_in,
    rxdfetap6hold_in,
    rxdfetap6ovrden_in,
    rxdfetap7hold_in,
    rxdfetap7ovrden_in,
    rxdfetap8hold_in,
    rxdfetap8ovrden_in,
    rxdfetap9hold_in,
    rxdfetap9ovrden_in,
    rxdfeuthold_in,
    rxdfeutovrden_in,
    rxdfevphold_in,
    rxdfevpovrden_in,
    rxdfevsen_in,
    rxdfexyden_in,
    rxdlybypass_in,
    rxdlyen_in,
    rxdlyovrden_in,
    rxdlysreset_in,
    rxelecidlemode_in,
    rxeqtraining_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxlpmgchold_in,
    rxlpmgcovrden_in,
    rxlpmhfhold_in,
    rxlpmhfovrden_in,
    rxlpmlfhold_in,
    rxlpmlfklovrden_in,
    rxlpmoshold_in,
    rxlpmosovrden_in,
    rxmcommaalignen_in,
    rxmonitorsel_in,
    rxoobreset_in,
    rxoscalreset_in,
    rxoshold_in,
    rxosintcfg_in,
    rxosinten_in,
    rxosinthold_in,
    rxosintovrden_in,
    rxosintstrobe_in,
    rxosinttestovrden_in,
    rxosovrden_in,
    rxoutclksel_in,
    rxpcommaalignen_in,
    rxpcsreset_in,
    rxpd_in,
    rxphalign_in,
    rxphalignen_in,
    rxphdlypd_in,
    rxphdlyreset_in,
    rxphovrden_in,
    rxpllclksel_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprbssel_in,
    rxprogdivreset_in,
    rxqpien_in,
    rxrate_in,
    rxratemode_in,
    rxslide_in,
    rxslipoutclk_in,
    rxslippma_in,
    rxsyncallin_in,
    rxsyncin_in,
    rxsyncmode_in,
    rxsysclksel_in,
    rxtermination_in,
    rxuserrdy_in,
    rxusrclk_in,
    rxusrclk2_in,
    sigvalidclk_in,
    tstin_in,
    tx8b10bbypass_in,
    tx8b10ben_in,
    txbufdiffctrl_in,
    txcominit_in,
    txcomsas_in,
    txcomwake_in,
    txctrl0_in,
    txctrl1_in,
    txctrl2_in,
    txdata_in,
    txdataextendrsvd_in,
    txdccforcestart_in,
    txdccreset_in,
    txdeemph_in,
    txdetectrx_in,
    txdiffctrl_in,
    txdiffpd_in,
    txdlybypass_in,
    txdlyen_in,
    txdlyhold_in,
    txdlyovrden_in,
    txdlysreset_in,
    txdlyupdown_in,
    txelecidle_in,
    txelforcestart_in,
    txheader_in,
    txinhibit_in,
    txlatclk_in,
    txlfpstreset_in,
    txlfpsu2lpexit_in,
    txlfpsu3wake_in,
    txmaincursor_in,
    txmargin_in,
    txmuxdcdexhold_in,
    txmuxdcdorwren_in,
    txoneszeros_in,
    txoutclksel_in,
    txpcsreset_in,
    txpd_in,
    txpdelecidlemode_in,
    txphalign_in,
    txphalignen_in,
    txphdlypd_in,
    txphdlyreset_in,
    txphdlytstclk_in,
    txphinit_in,
    txphovrden_in,
    txpippmen_in,
    txpippmovrden_in,
    txpippmpd_in,
    txpippmsel_in,
    txpippmstepsize_in,
    txpisopd_in,
    txpllclksel_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursor_in,
    txpostcursorinv_in,
    txprbsforceerr_in,
    txprbssel_in,
    txprecursor_in,
    txprecursorinv_in,
    txprogdivreset_in,
    txqpibiasen_in,
    txqpistrongpdown_in,
    txqpiweakpup_in,
    txrate_in,
    txratemode_in,
    txsequence_in,
    txswing_in,
    txsyncallin_in,
    txsyncin_in,
    txsyncmode_in,
    txsysclksel_in,
    txuserrdy_in,
    txusrclk_in,
    txusrclk2_in,
    bufgtce_out,
    bufgtcemask_out,
    bufgtdiv_out,
    bufgtreset_out,
    bufgtrstmask_out,
    cpllfbclklost_out,
    cplllock_out,
    cpllrefclklost_out,
    dmonitorout_out,
    dmonitoroutclk_out,
    drpdo_out,
    drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    gtpowergood_out,
    gtrefclkmonitor_out,
    gtytxn_out,
    gtytxp_out,
    pcierategen3_out,
    pcierateidle_out,
    pcierateqpllpd_out,
    pcierateqpllreset_out,
    pciesynctxsyncdone_out,
    pcieusergen3rdy_out,
    pcieuserphystatusrst_out,
    pcieuserratestart_out,
    pcsrsvdout_out,
    phystatus_out,
    pinrsrvdas_out,
    powerpresent_out,
    resetexception_out,
    rxbufstatus_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcdrlock_out,
    rxcdrphdone_out,
    rxchanbondseq_out,
    rxchanisaligned_out,
    rxchanrealign_out,
    rxchbondo_out,
    rxckcaldone_out,
    rxclkcorcnt_out,
    rxcominitdet_out,
    rxcommadet_out,
    rxcomsasdet_out,
    rxcomwakedet_out,
    rxctrl0_out,
    rxctrl1_out,
    rxctrl2_out,
    rxctrl3_out,
    rxdata_out,
    rxdataextendrsvd_out,
    rxdatavalid_out,
    rxdlysresetdone_out,
    rxelecidle_out,
    rxheader_out,
    rxheadervalid_out,
    rxlfpstresetdet_out,
    rxlfpsu2lpexitdet_out,
    rxlfpsu3wakedet_out,
    rxmonitorout_out,
    rxosintdone_out,
    rxosintstarted_out,
    rxosintstrobedone_out,
    rxosintstrobestarted_out,
    rxoutclk_out,
    rxoutclkfabric_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    rxphalignerr_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxqpisenn_out,
    rxqpisenp_out,
    rxratedone_out,
    rxrecclkout_out,
    rxresetdone_out,
    rxsliderdy_out,
    rxslipdone_out,
    rxslipoutclkrdy_out,
    rxslippmardy_out,
    rxstartofseq_out,
    rxstatus_out,
    rxsyncdone_out,
    rxsyncout_out,
    rxvalid_out,
    txbufstatus_out,
    txcomfinish_out,
    txdccdone_out,
    txdlysresetdone_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txphaligndone_out,
    txphinitdone_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txqpisenn_out,
    txqpisenp_out,
    txratedone_out,
    txresetdone_out,
    txsyncdone_out,
    txsyncout_out,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5);
  input [0:0]gtwiz_userclk_tx_reset_in;
  input [0:0]gtwiz_userclk_tx_active_in;
  output [0:0]gtwiz_userclk_tx_srcclk_out;
  output [0:0]gtwiz_userclk_tx_usrclk_out;
  output [0:0]gtwiz_userclk_tx_usrclk2_out;
  output [0:0]gtwiz_userclk_tx_active_out;
  input [0:0]gtwiz_userclk_rx_reset_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  output [0:0]gtwiz_userclk_rx_srcclk_out;
  output [0:0]gtwiz_userclk_rx_usrclk_out;
  output [0:0]gtwiz_userclk_rx_usrclk2_out;
  output [0:0]gtwiz_userclk_rx_active_out;
  input [0:0]gtwiz_buffbypass_tx_reset_in;
  input [0:0]gtwiz_buffbypass_tx_start_user_in;
  output [0:0]gtwiz_buffbypass_tx_done_out;
  output [0:0]gtwiz_buffbypass_tx_error_out;
  input [0:0]gtwiz_buffbypass_rx_reset_in;
  input [0:0]gtwiz_buffbypass_rx_start_user_in;
  output [0:0]gtwiz_buffbypass_rx_done_out;
  output [0:0]gtwiz_buffbypass_rx_error_out;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_tx_done_in;
  input [0:0]gtwiz_reset_rx_done_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_reset_qpll1lock_in;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_qpll0reset_out;
  output [0:0]gtwiz_reset_qpll1reset_out;
  input [17:0]gtwiz_gthe3_cpll_cal_txoutclk_period_in;
  input [17:0]gtwiz_gthe3_cpll_cal_cnt_tol_in;
  input [0:0]gtwiz_gthe3_cpll_cal_bufg_ce_in;
  input [17:0]gtwiz_gthe4_cpll_cal_txoutclk_period_in;
  input [17:0]gtwiz_gthe4_cpll_cal_cnt_tol_in;
  input [0:0]gtwiz_gthe4_cpll_cal_bufg_ce_in;
  input [17:0]gtwiz_gtye4_cpll_cal_txoutclk_period_in;
  input [17:0]gtwiz_gtye4_cpll_cal_cnt_tol_in;
  input [0:0]gtwiz_gtye4_cpll_cal_bufg_ce_in;
  input [15:0]gtwiz_userdata_tx_in;
  output [15:0]gtwiz_userdata_rx_out;
  input [0:0]bgbypassb_in;
  input [0:0]bgmonitorenb_in;
  input [0:0]bgpdb_in;
  input [4:0]bgrcalovrd_in;
  input [0:0]bgrcalovrdenb_in;
  input [15:0]drpaddr_common_in;
  input [0:0]drpclk_common_in;
  input [15:0]drpdi_common_in;
  input [0:0]drpen_common_in;
  input [0:0]drpwe_common_in;
  input [0:0]gtgrefclk0_in;
  input [0:0]gtgrefclk1_in;
  input [0:0]gtnorthrefclk00_in;
  input [0:0]gtnorthrefclk01_in;
  input [0:0]gtnorthrefclk10_in;
  input [0:0]gtnorthrefclk11_in;
  input [0:0]gtrefclk00_in;
  input [0:0]gtrefclk01_in;
  input [0:0]gtrefclk10_in;
  input [0:0]gtrefclk11_in;
  input [0:0]gtsouthrefclk00_in;
  input [0:0]gtsouthrefclk01_in;
  input [0:0]gtsouthrefclk10_in;
  input [0:0]gtsouthrefclk11_in;
  input [2:0]pcierateqpll0_in;
  input [2:0]pcierateqpll1_in;
  input [7:0]pmarsvd0_in;
  input [7:0]pmarsvd1_in;
  input [0:0]qpll0clkrsvd0_in;
  input [0:0]qpll0clkrsvd1_in;
  input [7:0]qpll0fbdiv_in;
  input [0:0]qpll0lockdetclk_in;
  input [0:0]qpll0locken_in;
  input [0:0]qpll0pd_in;
  input [2:0]qpll0refclksel_in;
  input [0:0]qpll0reset_in;
  input [0:0]qpll1clkrsvd0_in;
  input [0:0]qpll1clkrsvd1_in;
  input [7:0]qpll1fbdiv_in;
  input [0:0]qpll1lockdetclk_in;
  input [0:0]qpll1locken_in;
  input [0:0]qpll1pd_in;
  input [2:0]qpll1refclksel_in;
  input [0:0]qpll1reset_in;
  input [7:0]qpllrsvd1_in;
  input [4:0]qpllrsvd2_in;
  input [4:0]qpllrsvd3_in;
  input [7:0]qpllrsvd4_in;
  input [0:0]rcalenb_in;
  input [24:0]sdm0data_in;
  input [0:0]sdm0reset_in;
  input [0:0]sdm0toggle_in;
  input [1:0]sdm0width_in;
  input [24:0]sdm1data_in;
  input [0:0]sdm1reset_in;
  input [0:0]sdm1toggle_in;
  input [1:0]sdm1width_in;
  input [9:0]tcongpi_in;
  input [0:0]tconpowerup_in;
  input [1:0]tconreset_in;
  input [1:0]tconrsvdin1_in;
  input [0:0]ubcfgstreamen_in;
  input [0:0]ubdo_in;
  input [0:0]ubdrdy_in;
  input [0:0]ubenable_in;
  input [0:0]ubgpi_in;
  input [0:0]ubintr_in;
  input [0:0]ubiolmbrst_in;
  input [0:0]ubmbrst_in;
  input [0:0]ubmdmcapture_in;
  input [0:0]ubmdmdbgrst_in;
  input [0:0]ubmdmdbgupdate_in;
  input [0:0]ubmdmregen_in;
  input [0:0]ubmdmshift_in;
  input [0:0]ubmdmsysrst_in;
  input [0:0]ubmdmtck_in;
  input [0:0]ubmdmtdi_in;
  output [15:0]drpdo_common_out;
  output [0:0]drprdy_common_out;
  output [7:0]pmarsvdout0_out;
  output [7:0]pmarsvdout1_out;
  output [0:0]qpll0fbclklost_out;
  output [0:0]qpll0lock_out;
  output [0:0]qpll0outclk_out;
  output [0:0]qpll0outrefclk_out;
  output [0:0]qpll0refclklost_out;
  output [0:0]qpll1fbclklost_out;
  output [0:0]qpll1lock_out;
  output [0:0]qpll1outclk_out;
  output [0:0]qpll1outrefclk_out;
  output [0:0]qpll1refclklost_out;
  output [7:0]qplldmonitor0_out;
  output [7:0]qplldmonitor1_out;
  output [0:0]refclkoutmonitor0_out;
  output [0:0]refclkoutmonitor1_out;
  output [0:0]rxrecclk0_sel_out;
  output [0:0]rxrecclk1_sel_out;
  output [1:0]rxrecclk0sel_out;
  output [1:0]rxrecclk1sel_out;
  output [3:0]sdm0finalout_out;
  output [14:0]sdm0testdata_out;
  output [3:0]sdm1finalout_out;
  output [14:0]sdm1testdata_out;
  output [9:0]tcongpo_out;
  output [0:0]tconrsvdout0_out;
  output [0:0]ubdaddr_out;
  output [0:0]ubden_out;
  output [0:0]ubdi_out;
  output [0:0]ubdwe_out;
  output [0:0]ubmdmtdo_out;
  output [0:0]ubrsvdout_out;
  output [0:0]ubtxuart_out;
  input [0:0]cdrstepdir_in;
  input [0:0]cdrstepsq_in;
  input [0:0]cdrstepsx_in;
  input [0:0]cfgreset_in;
  input [0:0]clkrsvd0_in;
  input [0:0]clkrsvd1_in;
  input [0:0]cpllfreqlock_in;
  input [0:0]cplllockdetclk_in;
  input [0:0]cplllocken_in;
  input [0:0]cpllpd_in;
  input [2:0]cpllrefclksel_in;
  input [0:0]cpllreset_in;
  input [0:0]dmonfiforeset_in;
  input [0:0]dmonitorclk_in;
  input [9:0]drpaddr_in;
  input [0:0]drpclk_in;
  input [15:0]drpdi_in;
  input [0:0]drpen_in;
  input [0:0]drprst_in;
  input [0:0]drpwe_in;
  input [0:0]elpcaldvorwren_in;
  input [0:0]elpcalpaorwren_in;
  input [0:0]evoddphicaldone_in;
  input [0:0]evoddphicalstart_in;
  input [0:0]evoddphidrden_in;
  input [0:0]evoddphidwren_in;
  input [0:0]evoddphixrden_in;
  input [0:0]evoddphixwren_in;
  input [0:0]eyescanmode_in;
  input [0:0]eyescanreset_in;
  input [0:0]eyescantrigger_in;
  input [0:0]freqos_in;
  input [0:0]gtgrefclk_in;
  input [0:0]gthrxn_in;
  input [0:0]gthrxp_in;
  input [0:0]gtnorthrefclk0_in;
  input [0:0]gtnorthrefclk1_in;
  input [0:0]gtrefclk0_in;
  input [0:0]gtrefclk1_in;
  input [0:0]gtresetsel_in;
  input [15:0]gtrsvd_in;
  input [0:0]gtrxreset_in;
  input [0:0]gtrxresetsel_in;
  input [0:0]gtsouthrefclk0_in;
  input [0:0]gtsouthrefclk1_in;
  input [0:0]gttxreset_in;
  input [0:0]gttxresetsel_in;
  input [0:0]incpctrl_in;
  input [0:0]gtyrxn_in;
  input [0:0]gtyrxp_in;
  input [2:0]loopback_in;
  input [0:0]looprsvd_in;
  input [0:0]lpbkrxtxseren_in;
  input [0:0]lpbktxrxseren_in;
  input [0:0]pcieeqrxeqadaptdone_in;
  input [0:0]pcierstidle_in;
  input [0:0]pciersttxsyncstart_in;
  input [0:0]pcieuserratedone_in;
  input [15:0]pcsrsvdin_in;
  input [0:0]pcsrsvdin2_in;
  input [0:0]pmarsvdin_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0freqlock_in;
  input [0:0]qpll0refclk_in;
  input [0:0]qpll1clk_in;
  input [0:0]qpll1freqlock_in;
  input [0:0]qpll1refclk_in;
  input [0:0]resetovrd_in;
  input [0:0]rstclkentx_in;
  input [0:0]rx8b10ben_in;
  input [0:0]rxafecfoken_in;
  input [0:0]rxbufreset_in;
  input [0:0]rxcdrfreqreset_in;
  input [0:0]rxcdrhold_in;
  input [0:0]rxcdrovrden_in;
  input [0:0]rxcdrreset_in;
  input [0:0]rxcdrresetrsv_in;
  input [0:0]rxchbonden_in;
  input [4:0]rxchbondi_in;
  input [2:0]rxchbondlevel_in;
  input [0:0]rxchbondmaster_in;
  input [0:0]rxchbondslave_in;
  input [0:0]rxckcalreset_in;
  input [6:0]rxckcalstart_in;
  input [0:0]rxcommadeten_in;
  input [1:0]rxdfeagcctrl_in;
  input [0:0]rxdccforcestart_in;
  input [0:0]rxdfeagchold_in;
  input [0:0]rxdfeagcovrden_in;
  input [3:0]rxdfecfokfcnum_in;
  input [0:0]rxdfecfokfen_in;
  input [0:0]rxdfecfokfpulse_in;
  input [0:0]rxdfecfokhold_in;
  input [0:0]rxdfecfokovren_in;
  input [0:0]rxdfekhhold_in;
  input [0:0]rxdfekhovrden_in;
  input [0:0]rxdfelfhold_in;
  input [0:0]rxdfelfovrden_in;
  input [0:0]rxdfelpmreset_in;
  input [0:0]rxdfetap10hold_in;
  input [0:0]rxdfetap10ovrden_in;
  input [0:0]rxdfetap11hold_in;
  input [0:0]rxdfetap11ovrden_in;
  input [0:0]rxdfetap12hold_in;
  input [0:0]rxdfetap12ovrden_in;
  input [0:0]rxdfetap13hold_in;
  input [0:0]rxdfetap13ovrden_in;
  input [0:0]rxdfetap14hold_in;
  input [0:0]rxdfetap14ovrden_in;
  input [0:0]rxdfetap15hold_in;
  input [0:0]rxdfetap15ovrden_in;
  input [0:0]rxdfetap2hold_in;
  input [0:0]rxdfetap2ovrden_in;
  input [0:0]rxdfetap3hold_in;
  input [0:0]rxdfetap3ovrden_in;
  input [0:0]rxdfetap4hold_in;
  input [0:0]rxdfetap4ovrden_in;
  input [0:0]rxdfetap5hold_in;
  input [0:0]rxdfetap5ovrden_in;
  input [0:0]rxdfetap6hold_in;
  input [0:0]rxdfetap6ovrden_in;
  input [0:0]rxdfetap7hold_in;
  input [0:0]rxdfetap7ovrden_in;
  input [0:0]rxdfetap8hold_in;
  input [0:0]rxdfetap8ovrden_in;
  input [0:0]rxdfetap9hold_in;
  input [0:0]rxdfetap9ovrden_in;
  input [0:0]rxdfeuthold_in;
  input [0:0]rxdfeutovrden_in;
  input [0:0]rxdfevphold_in;
  input [0:0]rxdfevpovrden_in;
  input [0:0]rxdfevsen_in;
  input [0:0]rxdfexyden_in;
  input [0:0]rxdlybypass_in;
  input [0:0]rxdlyen_in;
  input [0:0]rxdlyovrden_in;
  input [0:0]rxdlysreset_in;
  input [1:0]rxelecidlemode_in;
  input [0:0]rxeqtraining_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxlatclk_in;
  input [0:0]rxlpmen_in;
  input [0:0]rxlpmgchold_in;
  input [0:0]rxlpmgcovrden_in;
  input [0:0]rxlpmhfhold_in;
  input [0:0]rxlpmhfovrden_in;
  input [0:0]rxlpmlfhold_in;
  input [0:0]rxlpmlfklovrden_in;
  input [0:0]rxlpmoshold_in;
  input [0:0]rxlpmosovrden_in;
  input [0:0]rxmcommaalignen_in;
  input [1:0]rxmonitorsel_in;
  input [0:0]rxoobreset_in;
  input [0:0]rxoscalreset_in;
  input [0:0]rxoshold_in;
  input [0:0]rxosintcfg_in;
  input [0:0]rxosinten_in;
  input [0:0]rxosinthold_in;
  input [0:0]rxosintovrden_in;
  input [0:0]rxosintstrobe_in;
  input [0:0]rxosinttestovrden_in;
  input [0:0]rxosovrden_in;
  input [2:0]rxoutclksel_in;
  input [0:0]rxpcommaalignen_in;
  input [0:0]rxpcsreset_in;
  input [1:0]rxpd_in;
  input [0:0]rxphalign_in;
  input [0:0]rxphalignen_in;
  input [0:0]rxphdlypd_in;
  input [0:0]rxphdlyreset_in;
  input [0:0]rxphovrden_in;
  input [1:0]rxpllclksel_in;
  input [0:0]rxpmareset_in;
  input [0:0]rxpolarity_in;
  input [0:0]rxprbscntreset_in;
  input [3:0]rxprbssel_in;
  input [0:0]rxprogdivreset_in;
  input [0:0]rxqpien_in;
  input [2:0]rxrate_in;
  input [0:0]rxratemode_in;
  input [0:0]rxslide_in;
  input [0:0]rxslipoutclk_in;
  input [0:0]rxslippma_in;
  input [0:0]rxsyncallin_in;
  input [0:0]rxsyncin_in;
  input [0:0]rxsyncmode_in;
  input [1:0]rxsysclksel_in;
  input [0:0]rxtermination_in;
  input [0:0]rxuserrdy_in;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]sigvalidclk_in;
  input [19:0]tstin_in;
  input [7:0]tx8b10bbypass_in;
  input [0:0]tx8b10ben_in;
  input [0:0]txbufdiffctrl_in;
  input [0:0]txcominit_in;
  input [0:0]txcomsas_in;
  input [0:0]txcomwake_in;
  input [15:0]txctrl0_in;
  input [15:0]txctrl1_in;
  input [7:0]txctrl2_in;
  input [127:0]txdata_in;
  input [7:0]txdataextendrsvd_in;
  input [0:0]txdccforcestart_in;
  input [0:0]txdccreset_in;
  input [1:0]txdeemph_in;
  input [0:0]txdetectrx_in;
  input [4:0]txdiffctrl_in;
  input [0:0]txdiffpd_in;
  input [0:0]txdlybypass_in;
  input [0:0]txdlyen_in;
  input [0:0]txdlyhold_in;
  input [0:0]txdlyovrden_in;
  input [0:0]txdlysreset_in;
  input [0:0]txdlyupdown_in;
  input [0:0]txelecidle_in;
  input [0:0]txelforcestart_in;
  input [5:0]txheader_in;
  input [0:0]txinhibit_in;
  input [0:0]txlatclk_in;
  input [0:0]txlfpstreset_in;
  input [0:0]txlfpsu2lpexit_in;
  input [0:0]txlfpsu3wake_in;
  input [6:0]txmaincursor_in;
  input [2:0]txmargin_in;
  input [0:0]txmuxdcdexhold_in;
  input [0:0]txmuxdcdorwren_in;
  input [0:0]txoneszeros_in;
  input [2:0]txoutclksel_in;
  input [0:0]txpcsreset_in;
  input [1:0]txpd_in;
  input [0:0]txpdelecidlemode_in;
  input [0:0]txphalign_in;
  input [0:0]txphalignen_in;
  input [0:0]txphdlypd_in;
  input [0:0]txphdlyreset_in;
  input [0:0]txphdlytstclk_in;
  input [0:0]txphinit_in;
  input [0:0]txphovrden_in;
  input [0:0]txpippmen_in;
  input [0:0]txpippmovrden_in;
  input [0:0]txpippmpd_in;
  input [0:0]txpippmsel_in;
  input [4:0]txpippmstepsize_in;
  input [0:0]txpisopd_in;
  input [1:0]txpllclksel_in;
  input [0:0]txpmareset_in;
  input [0:0]txpolarity_in;
  input [4:0]txpostcursor_in;
  input [0:0]txpostcursorinv_in;
  input [0:0]txprbsforceerr_in;
  input [3:0]txprbssel_in;
  input [4:0]txprecursor_in;
  input [0:0]txprecursorinv_in;
  input [0:0]txprogdivreset_in;
  input [0:0]txqpibiasen_in;
  input [0:0]txqpistrongpdown_in;
  input [0:0]txqpiweakpup_in;
  input [2:0]txrate_in;
  input [0:0]txratemode_in;
  input [6:0]txsequence_in;
  input [0:0]txswing_in;
  input [0:0]txsyncallin_in;
  input [0:0]txsyncin_in;
  input [0:0]txsyncmode_in;
  input [1:0]txsysclksel_in;
  input [0:0]txuserrdy_in;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  output [0:0]bufgtce_out;
  output [2:0]bufgtcemask_out;
  output [8:0]bufgtdiv_out;
  output [0:0]bufgtreset_out;
  output [2:0]bufgtrstmask_out;
  output [0:0]cpllfbclklost_out;
  output [0:0]cplllock_out;
  output [0:0]cpllrefclklost_out;
  output [15:0]dmonitorout_out;
  output [0:0]dmonitoroutclk_out;
  output [15:0]drpdo_out;
  output [0:0]drprdy_out;
  output [0:0]eyescandataerror_out;
  output [0:0]gthtxn_out;
  output [0:0]gthtxp_out;
  output [0:0]gtpowergood_out;
  output [0:0]gtrefclkmonitor_out;
  output [0:0]gtytxn_out;
  output [0:0]gtytxp_out;
  output [0:0]pcierategen3_out;
  output [0:0]pcierateidle_out;
  output [1:0]pcierateqpllpd_out;
  output [1:0]pcierateqpllreset_out;
  output [0:0]pciesynctxsyncdone_out;
  output [0:0]pcieusergen3rdy_out;
  output [0:0]pcieuserphystatusrst_out;
  output [0:0]pcieuserratestart_out;
  output [15:0]pcsrsvdout_out;
  output [0:0]phystatus_out;
  output [15:0]pinrsrvdas_out;
  output [0:0]powerpresent_out;
  output [0:0]resetexception_out;
  output [2:0]rxbufstatus_out;
  output [0:0]rxbyteisaligned_out;
  output [0:0]rxbyterealign_out;
  output [0:0]rxcdrlock_out;
  output [0:0]rxcdrphdone_out;
  output [0:0]rxchanbondseq_out;
  output [0:0]rxchanisaligned_out;
  output [0:0]rxchanrealign_out;
  output [4:0]rxchbondo_out;
  output [0:0]rxckcaldone_out;
  output [1:0]rxclkcorcnt_out;
  output [0:0]rxcominitdet_out;
  output [0:0]rxcommadet_out;
  output [0:0]rxcomsasdet_out;
  output [0:0]rxcomwakedet_out;
  output [15:0]rxctrl0_out;
  output [15:0]rxctrl1_out;
  output [7:0]rxctrl2_out;
  output [7:0]rxctrl3_out;
  output [127:0]rxdata_out;
  output [7:0]rxdataextendrsvd_out;
  output [1:0]rxdatavalid_out;
  output [0:0]rxdlysresetdone_out;
  output [0:0]rxelecidle_out;
  output [5:0]rxheader_out;
  output [1:0]rxheadervalid_out;
  output [0:0]rxlfpstresetdet_out;
  output [0:0]rxlfpsu2lpexitdet_out;
  output [0:0]rxlfpsu3wakedet_out;
  output [7:0]rxmonitorout_out;
  output [0:0]rxosintdone_out;
  output [0:0]rxosintstarted_out;
  output [0:0]rxosintstrobedone_out;
  output [0:0]rxosintstrobestarted_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxoutclkfabric_out;
  output [0:0]rxoutclkpcs_out;
  output [0:0]rxphaligndone_out;
  output [0:0]rxphalignerr_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxprbserr_out;
  output [0:0]rxprbslocked_out;
  output [0:0]rxprgdivresetdone_out;
  output [0:0]rxqpisenn_out;
  output [0:0]rxqpisenp_out;
  output [0:0]rxratedone_out;
  output [0:0]rxrecclkout_out;
  output [0:0]rxresetdone_out;
  output [0:0]rxsliderdy_out;
  output [0:0]rxslipdone_out;
  output [0:0]rxslipoutclkrdy_out;
  output [0:0]rxslippmardy_out;
  output [1:0]rxstartofseq_out;
  output [2:0]rxstatus_out;
  output [0:0]rxsyncdone_out;
  output [0:0]rxsyncout_out;
  output [0:0]rxvalid_out;
  output [1:0]txbufstatus_out;
  output [0:0]txcomfinish_out;
  output [0:0]txdccdone_out;
  output [0:0]txdlysresetdone_out;
  output [0:0]txoutclk_out;
  output [0:0]txoutclkfabric_out;
  output [0:0]txoutclkpcs_out;
  output [0:0]txphaligndone_out;
  output [0:0]txphinitdone_out;
  output [0:0]txpmaresetdone_out;
  output [0:0]txprgdivresetdone_out;
  output [0:0]txqpisenn_out;
  output [0:0]txqpisenp_out;
  output [0:0]txratedone_out;
  output [0:0]txresetdone_out;
  output [0:0]txsyncdone_out;
  output [0:0]txsyncout_out;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  output lopt_4;
  output lopt_5;

  wire \<const0> ;
  wire [0:0]drpclk_in;
  wire [0:0]gthrxn_in;
  wire [0:0]gthrxp_in;
  wire [0:0]gthtxn_out;
  wire [0:0]gthtxp_out;
  wire [0:0]gtpowergood_out;
  wire [0:0]gtrefclk0_in;
  wire [0:0]gtwiz_buffbypass_rx_done_out;
  wire [0:0]gtwiz_buffbypass_rx_reset_in;
  wire [0:0]gtwiz_buffbypass_rx_start_user_in;
  wire [0:0]gtwiz_reset_all_in;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [15:0]gtwiz_userdata_rx_out;
  wire [15:0]gtwiz_userdata_tx_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire [1:0]\^rxctrl0_out ;
  wire [1:0]\^rxctrl1_out ;
  wire [1:0]\^rxctrl2_out ;
  wire [1:0]\^rxctrl3_out ;
  wire [0:0]rxmcommaalignen_in;
  wire [0:0]rxoutclk_out;
  wire [1:0]rxpd_in;
  wire [0:0]rxresetdone_out;
  wire [0:0]rxusrclk_in;
  wire [1:1]\^txbufstatus_out ;
  wire [15:0]txctrl0_in;
  wire [15:0]txctrl1_in;
  wire [7:0]txctrl2_in;
  wire [0:0]txelecidle_in;
  wire [0:0]txoutclk_out;
  wire [0:0]txusrclk_in;

  assign bufgtce_out[0] = \<const0> ;
  assign bufgtcemask_out[2] = \<const0> ;
  assign bufgtcemask_out[1] = \<const0> ;
  assign bufgtcemask_out[0] = \<const0> ;
  assign bufgtdiv_out[8] = \<const0> ;
  assign bufgtdiv_out[7] = \<const0> ;
  assign bufgtdiv_out[6] = \<const0> ;
  assign bufgtdiv_out[5] = \<const0> ;
  assign bufgtdiv_out[4] = \<const0> ;
  assign bufgtdiv_out[3] = \<const0> ;
  assign bufgtdiv_out[2] = \<const0> ;
  assign bufgtdiv_out[1] = \<const0> ;
  assign bufgtdiv_out[0] = \<const0> ;
  assign bufgtreset_out[0] = \<const0> ;
  assign bufgtrstmask_out[2] = \<const0> ;
  assign bufgtrstmask_out[1] = \<const0> ;
  assign bufgtrstmask_out[0] = \<const0> ;
  assign cpllfbclklost_out[0] = \<const0> ;
  assign cplllock_out[0] = \<const0> ;
  assign cpllrefclklost_out[0] = \<const0> ;
  assign dmonitorout_out[15] = \<const0> ;
  assign dmonitorout_out[14] = \<const0> ;
  assign dmonitorout_out[13] = \<const0> ;
  assign dmonitorout_out[12] = \<const0> ;
  assign dmonitorout_out[11] = \<const0> ;
  assign dmonitorout_out[10] = \<const0> ;
  assign dmonitorout_out[9] = \<const0> ;
  assign dmonitorout_out[8] = \<const0> ;
  assign dmonitorout_out[7] = \<const0> ;
  assign dmonitorout_out[6] = \<const0> ;
  assign dmonitorout_out[5] = \<const0> ;
  assign dmonitorout_out[4] = \<const0> ;
  assign dmonitorout_out[3] = \<const0> ;
  assign dmonitorout_out[2] = \<const0> ;
  assign dmonitorout_out[1] = \<const0> ;
  assign dmonitorout_out[0] = \<const0> ;
  assign dmonitoroutclk_out[0] = \<const0> ;
  assign drpdo_common_out[15] = \<const0> ;
  assign drpdo_common_out[14] = \<const0> ;
  assign drpdo_common_out[13] = \<const0> ;
  assign drpdo_common_out[12] = \<const0> ;
  assign drpdo_common_out[11] = \<const0> ;
  assign drpdo_common_out[10] = \<const0> ;
  assign drpdo_common_out[9] = \<const0> ;
  assign drpdo_common_out[8] = \<const0> ;
  assign drpdo_common_out[7] = \<const0> ;
  assign drpdo_common_out[6] = \<const0> ;
  assign drpdo_common_out[5] = \<const0> ;
  assign drpdo_common_out[4] = \<const0> ;
  assign drpdo_common_out[3] = \<const0> ;
  assign drpdo_common_out[2] = \<const0> ;
  assign drpdo_common_out[1] = \<const0> ;
  assign drpdo_common_out[0] = \<const0> ;
  assign drpdo_out[15] = \<const0> ;
  assign drpdo_out[14] = \<const0> ;
  assign drpdo_out[13] = \<const0> ;
  assign drpdo_out[12] = \<const0> ;
  assign drpdo_out[11] = \<const0> ;
  assign drpdo_out[10] = \<const0> ;
  assign drpdo_out[9] = \<const0> ;
  assign drpdo_out[8] = \<const0> ;
  assign drpdo_out[7] = \<const0> ;
  assign drpdo_out[6] = \<const0> ;
  assign drpdo_out[5] = \<const0> ;
  assign drpdo_out[4] = \<const0> ;
  assign drpdo_out[3] = \<const0> ;
  assign drpdo_out[2] = \<const0> ;
  assign drpdo_out[1] = \<const0> ;
  assign drpdo_out[0] = \<const0> ;
  assign drprdy_common_out[0] = \<const0> ;
  assign drprdy_out[0] = \<const0> ;
  assign eyescandataerror_out[0] = \<const0> ;
  assign gtrefclkmonitor_out[0] = \<const0> ;
  assign gtwiz_buffbypass_rx_error_out[0] = \<const0> ;
  assign gtwiz_buffbypass_tx_done_out[0] = \<const0> ;
  assign gtwiz_buffbypass_tx_error_out[0] = \<const0> ;
  assign gtwiz_reset_qpll0reset_out[0] = \<const0> ;
  assign gtwiz_reset_qpll1reset_out[0] = \<const0> ;
  assign gtwiz_reset_rx_cdr_stable_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_active_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_srcclk_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_usrclk2_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_usrclk_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_active_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_srcclk_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_usrclk2_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_usrclk_out[0] = \<const0> ;
  assign gtytxn_out[0] = \<const0> ;
  assign gtytxp_out[0] = \<const0> ;
  assign pcierategen3_out[0] = \<const0> ;
  assign pcierateidle_out[0] = \<const0> ;
  assign pcierateqpllpd_out[1] = \<const0> ;
  assign pcierateqpllpd_out[0] = \<const0> ;
  assign pcierateqpllreset_out[1] = \<const0> ;
  assign pcierateqpllreset_out[0] = \<const0> ;
  assign pciesynctxsyncdone_out[0] = \<const0> ;
  assign pcieusergen3rdy_out[0] = \<const0> ;
  assign pcieuserphystatusrst_out[0] = \<const0> ;
  assign pcieuserratestart_out[0] = \<const0> ;
  assign pcsrsvdout_out[15] = \<const0> ;
  assign pcsrsvdout_out[14] = \<const0> ;
  assign pcsrsvdout_out[13] = \<const0> ;
  assign pcsrsvdout_out[12] = \<const0> ;
  assign pcsrsvdout_out[11] = \<const0> ;
  assign pcsrsvdout_out[10] = \<const0> ;
  assign pcsrsvdout_out[9] = \<const0> ;
  assign pcsrsvdout_out[8] = \<const0> ;
  assign pcsrsvdout_out[7] = \<const0> ;
  assign pcsrsvdout_out[6] = \<const0> ;
  assign pcsrsvdout_out[5] = \<const0> ;
  assign pcsrsvdout_out[4] = \<const0> ;
  assign pcsrsvdout_out[3] = \<const0> ;
  assign pcsrsvdout_out[2] = \<const0> ;
  assign pcsrsvdout_out[1] = \<const0> ;
  assign pcsrsvdout_out[0] = \<const0> ;
  assign phystatus_out[0] = \<const0> ;
  assign pinrsrvdas_out[15] = \<const0> ;
  assign pinrsrvdas_out[14] = \<const0> ;
  assign pinrsrvdas_out[13] = \<const0> ;
  assign pinrsrvdas_out[12] = \<const0> ;
  assign pinrsrvdas_out[11] = \<const0> ;
  assign pinrsrvdas_out[10] = \<const0> ;
  assign pinrsrvdas_out[9] = \<const0> ;
  assign pinrsrvdas_out[8] = \<const0> ;
  assign pinrsrvdas_out[7] = \<const0> ;
  assign pinrsrvdas_out[6] = \<const0> ;
  assign pinrsrvdas_out[5] = \<const0> ;
  assign pinrsrvdas_out[4] = \<const0> ;
  assign pinrsrvdas_out[3] = \<const0> ;
  assign pinrsrvdas_out[2] = \<const0> ;
  assign pinrsrvdas_out[1] = \<const0> ;
  assign pinrsrvdas_out[0] = \<const0> ;
  assign pmarsvdout0_out[7] = \<const0> ;
  assign pmarsvdout0_out[6] = \<const0> ;
  assign pmarsvdout0_out[5] = \<const0> ;
  assign pmarsvdout0_out[4] = \<const0> ;
  assign pmarsvdout0_out[3] = \<const0> ;
  assign pmarsvdout0_out[2] = \<const0> ;
  assign pmarsvdout0_out[1] = \<const0> ;
  assign pmarsvdout0_out[0] = \<const0> ;
  assign pmarsvdout1_out[7] = \<const0> ;
  assign pmarsvdout1_out[6] = \<const0> ;
  assign pmarsvdout1_out[5] = \<const0> ;
  assign pmarsvdout1_out[4] = \<const0> ;
  assign pmarsvdout1_out[3] = \<const0> ;
  assign pmarsvdout1_out[2] = \<const0> ;
  assign pmarsvdout1_out[1] = \<const0> ;
  assign pmarsvdout1_out[0] = \<const0> ;
  assign powerpresent_out[0] = \<const0> ;
  assign qpll0fbclklost_out[0] = \<const0> ;
  assign qpll0lock_out[0] = \<const0> ;
  assign qpll0outclk_out[0] = \<const0> ;
  assign qpll0outrefclk_out[0] = \<const0> ;
  assign qpll0refclklost_out[0] = \<const0> ;
  assign qpll1fbclklost_out[0] = \<const0> ;
  assign qpll1lock_out[0] = \<const0> ;
  assign qpll1outclk_out[0] = \<const0> ;
  assign qpll1outrefclk_out[0] = \<const0> ;
  assign qpll1refclklost_out[0] = \<const0> ;
  assign qplldmonitor0_out[7] = \<const0> ;
  assign qplldmonitor0_out[6] = \<const0> ;
  assign qplldmonitor0_out[5] = \<const0> ;
  assign qplldmonitor0_out[4] = \<const0> ;
  assign qplldmonitor0_out[3] = \<const0> ;
  assign qplldmonitor0_out[2] = \<const0> ;
  assign qplldmonitor0_out[1] = \<const0> ;
  assign qplldmonitor0_out[0] = \<const0> ;
  assign qplldmonitor1_out[7] = \<const0> ;
  assign qplldmonitor1_out[6] = \<const0> ;
  assign qplldmonitor1_out[5] = \<const0> ;
  assign qplldmonitor1_out[4] = \<const0> ;
  assign qplldmonitor1_out[3] = \<const0> ;
  assign qplldmonitor1_out[2] = \<const0> ;
  assign qplldmonitor1_out[1] = \<const0> ;
  assign qplldmonitor1_out[0] = \<const0> ;
  assign refclkoutmonitor0_out[0] = \<const0> ;
  assign refclkoutmonitor1_out[0] = \<const0> ;
  assign resetexception_out[0] = \<const0> ;
  assign rxbufstatus_out[2] = \<const0> ;
  assign rxbufstatus_out[1] = \<const0> ;
  assign rxbufstatus_out[0] = \<const0> ;
  assign rxbyteisaligned_out[0] = \<const0> ;
  assign rxbyterealign_out[0] = \<const0> ;
  assign rxcdrlock_out[0] = \<const0> ;
  assign rxcdrphdone_out[0] = \<const0> ;
  assign rxchanbondseq_out[0] = \<const0> ;
  assign rxchanisaligned_out[0] = \<const0> ;
  assign rxchanrealign_out[0] = \<const0> ;
  assign rxchbondo_out[4] = \<const0> ;
  assign rxchbondo_out[3] = \<const0> ;
  assign rxchbondo_out[2] = \<const0> ;
  assign rxchbondo_out[1] = \<const0> ;
  assign rxchbondo_out[0] = \<const0> ;
  assign rxckcaldone_out[0] = \<const0> ;
  assign rxclkcorcnt_out[1] = \<const0> ;
  assign rxclkcorcnt_out[0] = \<const0> ;
  assign rxcominitdet_out[0] = \<const0> ;
  assign rxcommadet_out[0] = \<const0> ;
  assign rxcomsasdet_out[0] = \<const0> ;
  assign rxcomwakedet_out[0] = \<const0> ;
  assign rxctrl0_out[15] = \<const0> ;
  assign rxctrl0_out[14] = \<const0> ;
  assign rxctrl0_out[13] = \<const0> ;
  assign rxctrl0_out[12] = \<const0> ;
  assign rxctrl0_out[11] = \<const0> ;
  assign rxctrl0_out[10] = \<const0> ;
  assign rxctrl0_out[9] = \<const0> ;
  assign rxctrl0_out[8] = \<const0> ;
  assign rxctrl0_out[7] = \<const0> ;
  assign rxctrl0_out[6] = \<const0> ;
  assign rxctrl0_out[5] = \<const0> ;
  assign rxctrl0_out[4] = \<const0> ;
  assign rxctrl0_out[3] = \<const0> ;
  assign rxctrl0_out[2] = \<const0> ;
  assign rxctrl0_out[1:0] = \^rxctrl0_out [1:0];
  assign rxctrl1_out[15] = \<const0> ;
  assign rxctrl1_out[14] = \<const0> ;
  assign rxctrl1_out[13] = \<const0> ;
  assign rxctrl1_out[12] = \<const0> ;
  assign rxctrl1_out[11] = \<const0> ;
  assign rxctrl1_out[10] = \<const0> ;
  assign rxctrl1_out[9] = \<const0> ;
  assign rxctrl1_out[8] = \<const0> ;
  assign rxctrl1_out[7] = \<const0> ;
  assign rxctrl1_out[6] = \<const0> ;
  assign rxctrl1_out[5] = \<const0> ;
  assign rxctrl1_out[4] = \<const0> ;
  assign rxctrl1_out[3] = \<const0> ;
  assign rxctrl1_out[2] = \<const0> ;
  assign rxctrl1_out[1:0] = \^rxctrl1_out [1:0];
  assign rxctrl2_out[7] = \<const0> ;
  assign rxctrl2_out[6] = \<const0> ;
  assign rxctrl2_out[5] = \<const0> ;
  assign rxctrl2_out[4] = \<const0> ;
  assign rxctrl2_out[3] = \<const0> ;
  assign rxctrl2_out[2] = \<const0> ;
  assign rxctrl2_out[1:0] = \^rxctrl2_out [1:0];
  assign rxctrl3_out[7] = \<const0> ;
  assign rxctrl3_out[6] = \<const0> ;
  assign rxctrl3_out[5] = \<const0> ;
  assign rxctrl3_out[4] = \<const0> ;
  assign rxctrl3_out[3] = \<const0> ;
  assign rxctrl3_out[2] = \<const0> ;
  assign rxctrl3_out[1:0] = \^rxctrl3_out [1:0];
  assign rxdata_out[127] = \<const0> ;
  assign rxdata_out[126] = \<const0> ;
  assign rxdata_out[125] = \<const0> ;
  assign rxdata_out[124] = \<const0> ;
  assign rxdata_out[123] = \<const0> ;
  assign rxdata_out[122] = \<const0> ;
  assign rxdata_out[121] = \<const0> ;
  assign rxdata_out[120] = \<const0> ;
  assign rxdata_out[119] = \<const0> ;
  assign rxdata_out[118] = \<const0> ;
  assign rxdata_out[117] = \<const0> ;
  assign rxdata_out[116] = \<const0> ;
  assign rxdata_out[115] = \<const0> ;
  assign rxdata_out[114] = \<const0> ;
  assign rxdata_out[113] = \<const0> ;
  assign rxdata_out[112] = \<const0> ;
  assign rxdata_out[111] = \<const0> ;
  assign rxdata_out[110] = \<const0> ;
  assign rxdata_out[109] = \<const0> ;
  assign rxdata_out[108] = \<const0> ;
  assign rxdata_out[107] = \<const0> ;
  assign rxdata_out[106] = \<const0> ;
  assign rxdata_out[105] = \<const0> ;
  assign rxdata_out[104] = \<const0> ;
  assign rxdata_out[103] = \<const0> ;
  assign rxdata_out[102] = \<const0> ;
  assign rxdata_out[101] = \<const0> ;
  assign rxdata_out[100] = \<const0> ;
  assign rxdata_out[99] = \<const0> ;
  assign rxdata_out[98] = \<const0> ;
  assign rxdata_out[97] = \<const0> ;
  assign rxdata_out[96] = \<const0> ;
  assign rxdata_out[95] = \<const0> ;
  assign rxdata_out[94] = \<const0> ;
  assign rxdata_out[93] = \<const0> ;
  assign rxdata_out[92] = \<const0> ;
  assign rxdata_out[91] = \<const0> ;
  assign rxdata_out[90] = \<const0> ;
  assign rxdata_out[89] = \<const0> ;
  assign rxdata_out[88] = \<const0> ;
  assign rxdata_out[87] = \<const0> ;
  assign rxdata_out[86] = \<const0> ;
  assign rxdata_out[85] = \<const0> ;
  assign rxdata_out[84] = \<const0> ;
  assign rxdata_out[83] = \<const0> ;
  assign rxdata_out[82] = \<const0> ;
  assign rxdata_out[81] = \<const0> ;
  assign rxdata_out[80] = \<const0> ;
  assign rxdata_out[79] = \<const0> ;
  assign rxdata_out[78] = \<const0> ;
  assign rxdata_out[77] = \<const0> ;
  assign rxdata_out[76] = \<const0> ;
  assign rxdata_out[75] = \<const0> ;
  assign rxdata_out[74] = \<const0> ;
  assign rxdata_out[73] = \<const0> ;
  assign rxdata_out[72] = \<const0> ;
  assign rxdata_out[71] = \<const0> ;
  assign rxdata_out[70] = \<const0> ;
  assign rxdata_out[69] = \<const0> ;
  assign rxdata_out[68] = \<const0> ;
  assign rxdata_out[67] = \<const0> ;
  assign rxdata_out[66] = \<const0> ;
  assign rxdata_out[65] = \<const0> ;
  assign rxdata_out[64] = \<const0> ;
  assign rxdata_out[63] = \<const0> ;
  assign rxdata_out[62] = \<const0> ;
  assign rxdata_out[61] = \<const0> ;
  assign rxdata_out[60] = \<const0> ;
  assign rxdata_out[59] = \<const0> ;
  assign rxdata_out[58] = \<const0> ;
  assign rxdata_out[57] = \<const0> ;
  assign rxdata_out[56] = \<const0> ;
  assign rxdata_out[55] = \<const0> ;
  assign rxdata_out[54] = \<const0> ;
  assign rxdata_out[53] = \<const0> ;
  assign rxdata_out[52] = \<const0> ;
  assign rxdata_out[51] = \<const0> ;
  assign rxdata_out[50] = \<const0> ;
  assign rxdata_out[49] = \<const0> ;
  assign rxdata_out[48] = \<const0> ;
  assign rxdata_out[47] = \<const0> ;
  assign rxdata_out[46] = \<const0> ;
  assign rxdata_out[45] = \<const0> ;
  assign rxdata_out[44] = \<const0> ;
  assign rxdata_out[43] = \<const0> ;
  assign rxdata_out[42] = \<const0> ;
  assign rxdata_out[41] = \<const0> ;
  assign rxdata_out[40] = \<const0> ;
  assign rxdata_out[39] = \<const0> ;
  assign rxdata_out[38] = \<const0> ;
  assign rxdata_out[37] = \<const0> ;
  assign rxdata_out[36] = \<const0> ;
  assign rxdata_out[35] = \<const0> ;
  assign rxdata_out[34] = \<const0> ;
  assign rxdata_out[33] = \<const0> ;
  assign rxdata_out[32] = \<const0> ;
  assign rxdata_out[31] = \<const0> ;
  assign rxdata_out[30] = \<const0> ;
  assign rxdata_out[29] = \<const0> ;
  assign rxdata_out[28] = \<const0> ;
  assign rxdata_out[27] = \<const0> ;
  assign rxdata_out[26] = \<const0> ;
  assign rxdata_out[25] = \<const0> ;
  assign rxdata_out[24] = \<const0> ;
  assign rxdata_out[23] = \<const0> ;
  assign rxdata_out[22] = \<const0> ;
  assign rxdata_out[21] = \<const0> ;
  assign rxdata_out[20] = \<const0> ;
  assign rxdata_out[19] = \<const0> ;
  assign rxdata_out[18] = \<const0> ;
  assign rxdata_out[17] = \<const0> ;
  assign rxdata_out[16] = \<const0> ;
  assign rxdata_out[15] = \<const0> ;
  assign rxdata_out[14] = \<const0> ;
  assign rxdata_out[13] = \<const0> ;
  assign rxdata_out[12] = \<const0> ;
  assign rxdata_out[11] = \<const0> ;
  assign rxdata_out[10] = \<const0> ;
  assign rxdata_out[9] = \<const0> ;
  assign rxdata_out[8] = \<const0> ;
  assign rxdata_out[7] = \<const0> ;
  assign rxdata_out[6] = \<const0> ;
  assign rxdata_out[5] = \<const0> ;
  assign rxdata_out[4] = \<const0> ;
  assign rxdata_out[3] = \<const0> ;
  assign rxdata_out[2] = \<const0> ;
  assign rxdata_out[1] = \<const0> ;
  assign rxdata_out[0] = \<const0> ;
  assign rxdataextendrsvd_out[7] = \<const0> ;
  assign rxdataextendrsvd_out[6] = \<const0> ;
  assign rxdataextendrsvd_out[5] = \<const0> ;
  assign rxdataextendrsvd_out[4] = \<const0> ;
  assign rxdataextendrsvd_out[3] = \<const0> ;
  assign rxdataextendrsvd_out[2] = \<const0> ;
  assign rxdataextendrsvd_out[1] = \<const0> ;
  assign rxdataextendrsvd_out[0] = \<const0> ;
  assign rxdatavalid_out[1] = \<const0> ;
  assign rxdatavalid_out[0] = \<const0> ;
  assign rxdlysresetdone_out[0] = \<const0> ;
  assign rxelecidle_out[0] = \<const0> ;
  assign rxheader_out[5] = \<const0> ;
  assign rxheader_out[4] = \<const0> ;
  assign rxheader_out[3] = \<const0> ;
  assign rxheader_out[2] = \<const0> ;
  assign rxheader_out[1] = \<const0> ;
  assign rxheader_out[0] = \<const0> ;
  assign rxheadervalid_out[1] = \<const0> ;
  assign rxheadervalid_out[0] = \<const0> ;
  assign rxlfpstresetdet_out[0] = \<const0> ;
  assign rxlfpsu2lpexitdet_out[0] = \<const0> ;
  assign rxlfpsu3wakedet_out[0] = \<const0> ;
  assign rxmonitorout_out[7] = \<const0> ;
  assign rxmonitorout_out[6] = \<const0> ;
  assign rxmonitorout_out[5] = \<const0> ;
  assign rxmonitorout_out[4] = \<const0> ;
  assign rxmonitorout_out[3] = \<const0> ;
  assign rxmonitorout_out[2] = \<const0> ;
  assign rxmonitorout_out[1] = \<const0> ;
  assign rxmonitorout_out[0] = \<const0> ;
  assign rxosintdone_out[0] = \<const0> ;
  assign rxosintstarted_out[0] = \<const0> ;
  assign rxosintstrobedone_out[0] = \<const0> ;
  assign rxosintstrobestarted_out[0] = \<const0> ;
  assign rxoutclkfabric_out[0] = \<const0> ;
  assign rxoutclkpcs_out[0] = \<const0> ;
  assign rxphaligndone_out[0] = \<const0> ;
  assign rxphalignerr_out[0] = \<const0> ;
  assign rxpmaresetdone_out[0] = \<const0> ;
  assign rxprbserr_out[0] = \<const0> ;
  assign rxprbslocked_out[0] = \<const0> ;
  assign rxprgdivresetdone_out[0] = \<const0> ;
  assign rxqpisenn_out[0] = \<const0> ;
  assign rxqpisenp_out[0] = \<const0> ;
  assign rxratedone_out[0] = \<const0> ;
  assign rxrecclk0_sel_out[0] = \<const0> ;
  assign rxrecclk0sel_out[1] = \<const0> ;
  assign rxrecclk0sel_out[0] = \<const0> ;
  assign rxrecclk1_sel_out[0] = \<const0> ;
  assign rxrecclk1sel_out[1] = \<const0> ;
  assign rxrecclk1sel_out[0] = \<const0> ;
  assign rxrecclkout_out[0] = \<const0> ;
  assign rxsliderdy_out[0] = \<const0> ;
  assign rxslipdone_out[0] = \<const0> ;
  assign rxslipoutclkrdy_out[0] = \<const0> ;
  assign rxslippmardy_out[0] = \<const0> ;
  assign rxstartofseq_out[1] = \<const0> ;
  assign rxstartofseq_out[0] = \<const0> ;
  assign rxstatus_out[2] = \<const0> ;
  assign rxstatus_out[1] = \<const0> ;
  assign rxstatus_out[0] = \<const0> ;
  assign rxsyncdone_out[0] = \<const0> ;
  assign rxsyncout_out[0] = \<const0> ;
  assign rxvalid_out[0] = \<const0> ;
  assign sdm0finalout_out[3] = \<const0> ;
  assign sdm0finalout_out[2] = \<const0> ;
  assign sdm0finalout_out[1] = \<const0> ;
  assign sdm0finalout_out[0] = \<const0> ;
  assign sdm0testdata_out[14] = \<const0> ;
  assign sdm0testdata_out[13] = \<const0> ;
  assign sdm0testdata_out[12] = \<const0> ;
  assign sdm0testdata_out[11] = \<const0> ;
  assign sdm0testdata_out[10] = \<const0> ;
  assign sdm0testdata_out[9] = \<const0> ;
  assign sdm0testdata_out[8] = \<const0> ;
  assign sdm0testdata_out[7] = \<const0> ;
  assign sdm0testdata_out[6] = \<const0> ;
  assign sdm0testdata_out[5] = \<const0> ;
  assign sdm0testdata_out[4] = \<const0> ;
  assign sdm0testdata_out[3] = \<const0> ;
  assign sdm0testdata_out[2] = \<const0> ;
  assign sdm0testdata_out[1] = \<const0> ;
  assign sdm0testdata_out[0] = \<const0> ;
  assign sdm1finalout_out[3] = \<const0> ;
  assign sdm1finalout_out[2] = \<const0> ;
  assign sdm1finalout_out[1] = \<const0> ;
  assign sdm1finalout_out[0] = \<const0> ;
  assign sdm1testdata_out[14] = \<const0> ;
  assign sdm1testdata_out[13] = \<const0> ;
  assign sdm1testdata_out[12] = \<const0> ;
  assign sdm1testdata_out[11] = \<const0> ;
  assign sdm1testdata_out[10] = \<const0> ;
  assign sdm1testdata_out[9] = \<const0> ;
  assign sdm1testdata_out[8] = \<const0> ;
  assign sdm1testdata_out[7] = \<const0> ;
  assign sdm1testdata_out[6] = \<const0> ;
  assign sdm1testdata_out[5] = \<const0> ;
  assign sdm1testdata_out[4] = \<const0> ;
  assign sdm1testdata_out[3] = \<const0> ;
  assign sdm1testdata_out[2] = \<const0> ;
  assign sdm1testdata_out[1] = \<const0> ;
  assign sdm1testdata_out[0] = \<const0> ;
  assign tcongpo_out[9] = \<const0> ;
  assign tcongpo_out[8] = \<const0> ;
  assign tcongpo_out[7] = \<const0> ;
  assign tcongpo_out[6] = \<const0> ;
  assign tcongpo_out[5] = \<const0> ;
  assign tcongpo_out[4] = \<const0> ;
  assign tcongpo_out[3] = \<const0> ;
  assign tcongpo_out[2] = \<const0> ;
  assign tcongpo_out[1] = \<const0> ;
  assign tcongpo_out[0] = \<const0> ;
  assign tconrsvdout0_out[0] = \<const0> ;
  assign txbufstatus_out[1] = \^txbufstatus_out [1];
  assign txbufstatus_out[0] = \<const0> ;
  assign txcomfinish_out[0] = \<const0> ;
  assign txdccdone_out[0] = \<const0> ;
  assign txdlysresetdone_out[0] = \<const0> ;
  assign txoutclkfabric_out[0] = \<const0> ;
  assign txoutclkpcs_out[0] = \<const0> ;
  assign txphaligndone_out[0] = \<const0> ;
  assign txphinitdone_out[0] = \<const0> ;
  assign txpmaresetdone_out[0] = \<const0> ;
  assign txprgdivresetdone_out[0] = \<const0> ;
  assign txqpisenn_out[0] = \<const0> ;
  assign txqpisenp_out[0] = \<const0> ;
  assign txratedone_out[0] = \<const0> ;
  assign txresetdone_out[0] = \<const0> ;
  assign txsyncdone_out[0] = \<const0> ;
  assign txsyncout_out[0] = \<const0> ;
  assign ubdaddr_out[0] = \<const0> ;
  assign ubden_out[0] = \<const0> ;
  assign ubdi_out[0] = \<const0> ;
  assign ubdwe_out[0] = \<const0> ;
  assign ubmdmtdo_out[0] = \<const0> ;
  assign ubrsvdout_out[0] = \<const0> ;
  assign ubtxuart_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  bd_fd73_pcs_pma_0_gt_gtwizard_gthe4 \gen_gtwizard_gthe4_top.bd_fd73_pcs_pma_0_gt_gtwizard_gthe4_inst 
       (.drpclk_in(drpclk_in),
        .gthrxn_in(gthrxn_in),
        .gthrxp_in(gthrxp_in),
        .gthtxn_out(gthtxn_out),
        .gthtxp_out(gthtxp_out),
        .gtpowergood_out(gtpowergood_out),
        .gtrefclk0_in(gtrefclk0_in),
        .gtwiz_buffbypass_rx_done_out(gtwiz_buffbypass_rx_done_out),
        .gtwiz_buffbypass_rx_reset_in(gtwiz_buffbypass_rx_reset_in),
        .gtwiz_buffbypass_rx_start_user_in(gtwiz_buffbypass_rx_start_user_in),
        .gtwiz_reset_all_in(gtwiz_reset_all_in),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .rxctrl0_out(\^rxctrl0_out ),
        .rxctrl1_out(\^rxctrl1_out ),
        .rxctrl2_out(\^rxctrl2_out ),
        .rxctrl3_out(\^rxctrl3_out ),
        .rxmcommaalignen_in(rxmcommaalignen_in),
        .rxoutclk_out(rxoutclk_out),
        .rxpd_in(rxpd_in[1]),
        .rxresetdone_out(rxresetdone_out),
        .rxusrclk_in(rxusrclk_in),
        .txbufstatus_out(\^txbufstatus_out ),
        .txctrl0_in(txctrl0_in[1:0]),
        .txctrl1_in(txctrl1_in[1:0]),
        .txctrl2_in(txctrl2_in[1:0]),
        .txelecidle_in(txelecidle_in),
        .txoutclk_out(txoutclk_out),
        .txusrclk_in(txusrclk_in));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer
   (\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    rxresetdone_out,
    drpclk_in);
  output \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input [0:0]rxresetdone_out;
  input [0:0]drpclk_in;

  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [0:0]rxresetdone_out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rxresetdone_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_13
   (\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    txresetdone_out,
    drpclk_in);
  output \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input [0:0]txresetdone_out;
  input [0:0]drpclk_in;

  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [0:0]txresetdone_out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(txresetdone_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_14
   (rxphaligndone_out,
    rxusrclk_in);
  input [0:0]rxphaligndone_out;
  input [0:0]rxusrclk_in;

  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [0:0]rxphaligndone_out;
  wire [0:0]rxusrclk_in;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .D(rxphaligndone_out),
        .Q(i_in_meta),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_15
   (\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int ,
    D,
    rxsyncdone_out,
    rxusrclk_in,
    Q,
    \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg );
  output \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int ;
  output [1:0]D;
  input [0:0]rxsyncdone_out;
  input [0:0]rxusrclk_in;
  input [1:0]Q;
  input \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg ;

  wire [1:0]D;
  wire [1:0]Q;
  wire \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int ;
  wire \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [0:0]rxsyncdone_out;
  wire [0:0]rxusrclk_in;

  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'h0455)) 
    \FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int ),
        .I2(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg ),
        .I3(Q[1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'h2622)) 
    \FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx[1]_i_2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg ),
        .I3(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int ),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .D(rxsyncdone_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_16
   (E,
    gtpowergood_out,
    drpclk_in,
    \FSM_sequential_sm_reset_all_reg[0] ,
    Q,
    \FSM_sequential_sm_reset_all_reg[0]_0 );
  output [0:0]E;
  input [0:0]gtpowergood_out;
  input [0:0]drpclk_in;
  input \FSM_sequential_sm_reset_all_reg[0] ;
  input [2:0]Q;
  input \FSM_sequential_sm_reset_all_reg[0]_0 ;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_all_reg[0] ;
  wire \FSM_sequential_sm_reset_all_reg[0]_0 ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire [0:0]gtpowergood_out;
  wire gtpowergood_sync;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  LUT6 #(
    .INIT(64'hAF0FAF00CFFFCFFF)) 
    \FSM_sequential_sm_reset_all[2]_i_1 
       (.I0(gtpowergood_sync),
        .I1(\FSM_sequential_sm_reset_all_reg[0] ),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(\FSM_sequential_sm_reset_all_reg[0]_0 ),
        .I5(Q[1]),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtpowergood_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtpowergood_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_17
   (gtwiz_reset_rx_datapath_dly,
    in0,
    drpclk_in);
  output gtwiz_reset_rx_datapath_dly;
  input in0;
  input [0:0]drpclk_in;

  wire [0:0]drpclk_in;
  wire gtwiz_reset_rx_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_rx_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_18
   (D,
    sm_reset_rx_pll_timer_sat_reg,
    in0,
    drpclk_in,
    Q,
    p_0_in11_out__0,
    sm_reset_rx_pll_timer_sat,
    \FSM_sequential_sm_reset_rx[2]_i_3 ,
    gtwiz_reset_rx_datapath_dly);
  output [1:0]D;
  output sm_reset_rx_pll_timer_sat_reg;
  input in0;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input p_0_in11_out__0;
  input sm_reset_rx_pll_timer_sat;
  input \FSM_sequential_sm_reset_rx[2]_i_3 ;
  input gtwiz_reset_rx_datapath_dly;

  wire [1:0]D;
  wire \FSM_sequential_sm_reset_rx[2]_i_3 ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_rx_datapath_dly;
  wire gtwiz_reset_rx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;
  wire p_0_in11_out__0;
  wire sm_reset_rx_pll_timer_sat;
  wire sm_reset_rx_pll_timer_sat_reg;

  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'hDD769976)) 
    \FSM_sequential_sm_reset_rx[0]_i_1 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(gtwiz_reset_rx_pll_and_datapath_dly),
        .I3(Q[1]),
        .I4(p_0_in11_out__0),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'h00FFF511)) 
    \FSM_sequential_sm_reset_rx[1]_i_1 
       (.I0(Q[2]),
        .I1(gtwiz_reset_rx_pll_and_datapath_dly),
        .I2(p_0_in11_out__0),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(D[1]));
  LUT5 #(
    .INIT(32'h2F2F2F20)) 
    \FSM_sequential_sm_reset_rx[2]_i_5 
       (.I0(sm_reset_rx_pll_timer_sat),
        .I1(\FSM_sequential_sm_reset_rx[2]_i_3 ),
        .I2(Q[0]),
        .I3(gtwiz_reset_rx_pll_and_datapath_dly),
        .I4(gtwiz_reset_rx_datapath_dly),
        .O(sm_reset_rx_pll_timer_sat_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_rx_pll_and_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_19
   (gtwiz_reset_tx_datapath_dly,
    in0,
    drpclk_in);
  output gtwiz_reset_tx_datapath_dly;
  input in0;
  input [0:0]drpclk_in;

  wire [0:0]drpclk_in;
  wire gtwiz_reset_tx_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_tx_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_20
   (sm_reset_tx_pll_timer_sat_reg,
    D,
    in0,
    drpclk_in,
    sm_reset_tx_pll_timer_sat,
    \FSM_sequential_sm_reset_tx[2]_i_3 ,
    Q,
    gtwiz_reset_tx_datapath_dly);
  output sm_reset_tx_pll_timer_sat_reg;
  output [1:0]D;
  input in0;
  input [0:0]drpclk_in;
  input sm_reset_tx_pll_timer_sat;
  input \FSM_sequential_sm_reset_tx[2]_i_3 ;
  input [2:0]Q;
  input gtwiz_reset_tx_datapath_dly;

  wire [1:0]D;
  wire \FSM_sequential_sm_reset_tx[2]_i_3 ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_tx_datapath_dly;
  wire gtwiz_reset_tx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;
  wire sm_reset_tx_pll_timer_sat;
  wire sm_reset_tx_pll_timer_sat_reg;

  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'h0F3E)) 
    \FSM_sequential_sm_reset_tx[0]_i_1 
       (.I0(gtwiz_reset_tx_pll_and_datapath_dly),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'h55AB)) 
    \FSM_sequential_sm_reset_tx[1]_i_1 
       (.I0(Q[0]),
        .I1(gtwiz_reset_tx_pll_and_datapath_dly),
        .I2(Q[2]),
        .I3(Q[1]),
        .O(D[1]));
  LUT5 #(
    .INIT(32'h2F2F2F20)) 
    \FSM_sequential_sm_reset_tx[2]_i_6 
       (.I0(sm_reset_tx_pll_timer_sat),
        .I1(\FSM_sequential_sm_reset_tx[2]_i_3 ),
        .I2(Q[0]),
        .I3(gtwiz_reset_tx_pll_and_datapath_dly),
        .I4(gtwiz_reset_tx_datapath_dly),
        .O(sm_reset_tx_pll_timer_sat_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_tx_pll_and_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_21
   (\FSM_sequential_sm_reset_rx_reg[1] ,
    \FSM_sequential_sm_reset_rx_reg[0] ,
    \FSM_sequential_sm_reset_rx_reg[0]_0 ,
    gtwiz_userclk_rx_active_out,
    drpclk_in,
    p_0_in11_out__0,
    Q,
    sm_reset_rx_cdr_to_sat,
    \FSM_sequential_sm_reset_rx_reg[0]_1 ,
    \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    sm_reset_rx_timer_clr_reg,
    sm_reset_rx_timer_sat,
    sm_reset_rx_timer_clr_reg_0,
    gtwiz_reset_rx_any_sync,
    \gen_gtwizard_gthe4.rxuserrdy_int );
  output \FSM_sequential_sm_reset_rx_reg[1] ;
  output \FSM_sequential_sm_reset_rx_reg[0] ;
  output \FSM_sequential_sm_reset_rx_reg[0]_0 ;
  input [0:0]gtwiz_userclk_rx_active_out;
  input [0:0]drpclk_in;
  input p_0_in11_out__0;
  input [2:0]Q;
  input sm_reset_rx_cdr_to_sat;
  input \FSM_sequential_sm_reset_rx_reg[0]_1 ;
  input \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input sm_reset_rx_timer_clr_reg;
  input sm_reset_rx_timer_sat;
  input sm_reset_rx_timer_clr_reg_0;
  input gtwiz_reset_rx_any_sync;
  input \gen_gtwizard_gthe4.rxuserrdy_int ;

  wire \FSM_sequential_sm_reset_rx_reg[0] ;
  wire \FSM_sequential_sm_reset_rx_reg[0]_0 ;
  wire \FSM_sequential_sm_reset_rx_reg[0]_1 ;
  wire \FSM_sequential_sm_reset_rx_reg[1] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  wire \gen_gtwizard_gthe4.rxuserrdy_int ;
  wire gtwiz_reset_rx_any_sync;
  wire gtwiz_reset_userclk_rx_active_sync;
  wire [0:0]gtwiz_userclk_rx_active_out;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire p_0_in11_out__0;
  wire sm_reset_rx_cdr_to_sat;
  wire sm_reset_rx_timer_clr0__0;
  wire sm_reset_rx_timer_clr_i_2_n_0;
  wire sm_reset_rx_timer_clr_reg;
  wire sm_reset_rx_timer_clr_reg_0;
  wire sm_reset_rx_timer_sat;

  LUT6 #(
    .INIT(64'h30BB30BB30BB3088)) 
    \FSM_sequential_sm_reset_rx[2]_i_4 
       (.I0(p_0_in11_out__0),
        .I1(Q[1]),
        .I2(sm_reset_rx_timer_clr0__0),
        .I3(Q[0]),
        .I4(sm_reset_rx_cdr_to_sat),
        .I5(\FSM_sequential_sm_reset_rx_reg[0]_1 ),
        .O(\FSM_sequential_sm_reset_rx_reg[1] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_userclk_rx_active_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_userclk_rx_active_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFEDED00000800)) 
    rxuserrdy_out_i_1
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(sm_reset_rx_timer_clr0__0),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(\gen_gtwizard_gthe4.rxuserrdy_int ),
        .O(\FSM_sequential_sm_reset_rx_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'h40)) 
    rxuserrdy_out_i_2
       (.I0(sm_reset_rx_timer_clr_reg),
        .I1(sm_reset_rx_timer_sat),
        .I2(gtwiz_reset_userclk_rx_active_sync),
        .O(sm_reset_rx_timer_clr0__0));
  LUT6 #(
    .INIT(64'hFAAFCCFF0AA0CC0F)) 
    sm_reset_rx_timer_clr_i_1
       (.I0(sm_reset_rx_timer_clr_i_2_n_0),
        .I1(sm_reset_rx_timer_clr_reg_0),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(sm_reset_rx_timer_clr_reg),
        .O(\FSM_sequential_sm_reset_rx_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT5 #(
    .INIT(32'h0B000800)) 
    sm_reset_rx_timer_clr_i_2
       (.I0(\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .I1(Q[1]),
        .I2(sm_reset_rx_timer_clr_reg),
        .I3(sm_reset_rx_timer_sat),
        .I4(gtwiz_reset_userclk_rx_active_sync),
        .O(sm_reset_rx_timer_clr_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_22
   (sm_reset_tx_timer_clr0__0,
    \FSM_sequential_sm_reset_tx_reg[1] ,
    \FSM_sequential_sm_reset_tx_reg[2] ,
    drpclk_in,
    \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    Q,
    sm_reset_tx_timer_clr013_out__0,
    sm_reset_tx_timer_clr_reg,
    sm_reset_tx_timer_sat,
    sm_reset_tx_timer_clr_reg_0,
    gtwiz_reset_tx_any_sync,
    \gen_gtwizard_gthe4.txuserrdy_int );
  output sm_reset_tx_timer_clr0__0;
  output \FSM_sequential_sm_reset_tx_reg[1] ;
  output \FSM_sequential_sm_reset_tx_reg[2] ;
  input [0:0]drpclk_in;
  input \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input [2:0]Q;
  input sm_reset_tx_timer_clr013_out__0;
  input sm_reset_tx_timer_clr_reg;
  input sm_reset_tx_timer_sat;
  input sm_reset_tx_timer_clr_reg_0;
  input gtwiz_reset_tx_any_sync;
  input \gen_gtwizard_gthe4.txuserrdy_int ;

  wire \FSM_sequential_sm_reset_tx_reg[1] ;
  wire \FSM_sequential_sm_reset_tx_reg[2] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  wire \gen_gtwizard_gthe4.txuserrdy_int ;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_userclk_tx_active_sync;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire n_0_0;
  wire sm_reset_tx_timer_clr013_out__0;
  wire sm_reset_tx_timer_clr0__0;
  wire sm_reset_tx_timer_clr_i_2_n_0;
  wire sm_reset_tx_timer_clr_reg;
  wire sm_reset_tx_timer_clr_reg_0;
  wire sm_reset_tx_timer_sat;

  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_tx[2]_i_5 
       (.I0(sm_reset_tx_timer_clr_reg),
        .I1(sm_reset_tx_timer_sat),
        .I2(gtwiz_reset_userclk_tx_active_sync),
        .O(sm_reset_tx_timer_clr0__0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(n_0_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(n_0_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_userclk_tx_active_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFACFFACF0AC00ACF)) 
    sm_reset_tx_timer_clr_i_1
       (.I0(sm_reset_tx_timer_clr_i_2_n_0),
        .I1(sm_reset_tx_timer_clr_reg_0),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(sm_reset_tx_timer_clr_reg),
        .O(\FSM_sequential_sm_reset_tx_reg[1] ));
  LUT6 #(
    .INIT(64'hBABF00008A800000)) 
    sm_reset_tx_timer_clr_i_2
       (.I0(\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(sm_reset_tx_timer_clr013_out__0),
        .I5(gtwiz_reset_userclk_tx_active_sync),
        .O(sm_reset_tx_timer_clr_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFCCF00000008)) 
    txuserrdy_out_i_1
       (.I0(sm_reset_tx_timer_clr0__0),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(gtwiz_reset_tx_any_sync),
        .I5(\gen_gtwizard_gthe4.txuserrdy_int ),
        .O(\FSM_sequential_sm_reset_tx_reg[2] ));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_23
   (E,
    i_in_out_reg_0,
    \FSM_sequential_sm_reset_rx_reg[1] ,
    \FSM_sequential_sm_reset_rx_reg[2] ,
    \FSM_sequential_sm_reset_rx_reg[1]_0 ,
    i_in_meta_reg_0,
    drpclk_in,
    Q,
    \FSM_sequential_sm_reset_rx_reg[0] ,
    sm_reset_rx_timer_sat,
    \FSM_sequential_sm_reset_rx_reg[0]_0 ,
    \FSM_sequential_sm_reset_rx_reg[0]_1 ,
    p_0_in11_out__0,
    gtwiz_reset_rx_done_int_reg,
    gtwiz_reset_rx_any_sync,
    \gen_gtwizard_gthe4.gtrxreset_int );
  output [0:0]E;
  output i_in_out_reg_0;
  output \FSM_sequential_sm_reset_rx_reg[1] ;
  output \FSM_sequential_sm_reset_rx_reg[2] ;
  output \FSM_sequential_sm_reset_rx_reg[1]_0 ;
  input i_in_meta_reg_0;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input \FSM_sequential_sm_reset_rx_reg[0] ;
  input sm_reset_rx_timer_sat;
  input \FSM_sequential_sm_reset_rx_reg[0]_0 ;
  input \FSM_sequential_sm_reset_rx_reg[0]_1 ;
  input p_0_in11_out__0;
  input gtwiz_reset_rx_done_int_reg;
  input gtwiz_reset_rx_any_sync;
  input \gen_gtwizard_gthe4.gtrxreset_int ;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_rx[2]_i_3_n_0 ;
  wire \FSM_sequential_sm_reset_rx_reg[0] ;
  wire \FSM_sequential_sm_reset_rx_reg[0]_0 ;
  wire \FSM_sequential_sm_reset_rx_reg[0]_1 ;
  wire \FSM_sequential_sm_reset_rx_reg[1] ;
  wire \FSM_sequential_sm_reset_rx_reg[1]_0 ;
  wire \FSM_sequential_sm_reset_rx_reg[2] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gthe4.gtrxreset_int ;
  wire gtwiz_reset_rx_any_sync;
  wire gtwiz_reset_rx_done_int_reg;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_meta_reg_0;
  wire i_in_out_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire p_0_in11_out__0;
  wire plllock_rx_sync;
  wire sm_reset_rx_timer_sat;

  LUT6 #(
    .INIT(64'h00B0FFFF00B00000)) 
    \FSM_sequential_sm_reset_rx[2]_i_3 
       (.I0(plllock_rx_sync),
        .I1(Q[0]),
        .I2(sm_reset_rx_timer_sat),
        .I3(\FSM_sequential_sm_reset_rx_reg[0]_0 ),
        .I4(Q[1]),
        .I5(\FSM_sequential_sm_reset_rx_reg[0]_1 ),
        .O(\FSM_sequential_sm_reset_rx[2]_i_3_n_0 ));
  MUXF7 \FSM_sequential_sm_reset_rx_reg[2]_i_1 
       (.I0(\FSM_sequential_sm_reset_rx[2]_i_3_n_0 ),
        .I1(\FSM_sequential_sm_reset_rx_reg[0] ),
        .O(E),
        .S(Q[2]));
  LUT6 #(
    .INIT(64'hFFFFFF7F0000003E)) 
    gtrxreset_out_i_1
       (.I0(\FSM_sequential_sm_reset_rx_reg[1] ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(\gen_gtwizard_gthe4.gtrxreset_int ),
        .O(\FSM_sequential_sm_reset_rx_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hFFFF77FF00800080)) 
    gtwiz_reset_rx_done_int_i_1
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(p_0_in11_out__0),
        .I3(Q[0]),
        .I4(plllock_rx_sync),
        .I5(gtwiz_reset_rx_done_int_reg),
        .O(\FSM_sequential_sm_reset_rx_reg[2] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta_reg_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(plllock_rx_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    sm_reset_rx_cdr_to_clr_i_3
       (.I0(Q[1]),
        .I1(plllock_rx_sync),
        .I2(sm_reset_rx_timer_sat),
        .I3(\FSM_sequential_sm_reset_rx_reg[0]_0 ),
        .O(\FSM_sequential_sm_reset_rx_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'h00B0)) 
    sm_reset_rx_timer_clr_i_3
       (.I0(plllock_rx_sync),
        .I1(Q[0]),
        .I2(sm_reset_rx_timer_sat),
        .I3(\FSM_sequential_sm_reset_rx_reg[0]_0 ),
        .O(i_in_out_reg_0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_24
   (E,
    i_in_out_reg_0,
    \FSM_sequential_sm_reset_tx_reg[0] ,
    \FSM_sequential_sm_reset_tx_reg[1] ,
    i_in_meta_reg_0,
    drpclk_in,
    Q,
    gtwiz_reset_tx_done_int0__0,
    sm_reset_tx_timer_clr0__0,
    sm_reset_tx_timer_sat,
    \FSM_sequential_sm_reset_tx_reg[0]_0 ,
    \FSM_sequential_sm_reset_tx_reg[0]_1 ,
    gtwiz_reset_tx_done_int_reg,
    gtwiz_reset_tx_any_sync,
    \gen_gtwizard_gthe4.gttxreset_int );
  output [0:0]E;
  output i_in_out_reg_0;
  output \FSM_sequential_sm_reset_tx_reg[0] ;
  output \FSM_sequential_sm_reset_tx_reg[1] ;
  input i_in_meta_reg_0;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input gtwiz_reset_tx_done_int0__0;
  input sm_reset_tx_timer_clr0__0;
  input sm_reset_tx_timer_sat;
  input \FSM_sequential_sm_reset_tx_reg[0]_0 ;
  input \FSM_sequential_sm_reset_tx_reg[0]_1 ;
  input gtwiz_reset_tx_done_int_reg;
  input gtwiz_reset_tx_any_sync;
  input \gen_gtwizard_gthe4.gttxreset_int ;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_tx[2]_i_3_n_0 ;
  wire \FSM_sequential_sm_reset_tx_reg[0] ;
  wire \FSM_sequential_sm_reset_tx_reg[0]_0 ;
  wire \FSM_sequential_sm_reset_tx_reg[0]_1 ;
  wire \FSM_sequential_sm_reset_tx_reg[1] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gthe4.gttxreset_int ;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_tx_done_int0__0;
  wire gtwiz_reset_tx_done_int_reg;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_meta_reg_0;
  wire i_in_out_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire plllock_tx_sync;
  wire sm_reset_tx_timer_clr012_out__0;
  wire sm_reset_tx_timer_clr0__0;
  wire sm_reset_tx_timer_sat;

  LUT6 #(
    .INIT(64'h3A0A3A3A3A0A0A0A)) 
    \FSM_sequential_sm_reset_tx[2]_i_1 
       (.I0(\FSM_sequential_sm_reset_tx[2]_i_3_n_0 ),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(gtwiz_reset_tx_done_int0__0),
        .I4(Q[0]),
        .I5(sm_reset_tx_timer_clr0__0),
        .O(E));
  LUT6 #(
    .INIT(64'h00B0FFFF00B00000)) 
    \FSM_sequential_sm_reset_tx[2]_i_3 
       (.I0(plllock_tx_sync),
        .I1(Q[0]),
        .I2(sm_reset_tx_timer_sat),
        .I3(\FSM_sequential_sm_reset_tx_reg[0]_0 ),
        .I4(Q[1]),
        .I5(\FSM_sequential_sm_reset_tx_reg[0]_1 ),
        .O(\FSM_sequential_sm_reset_tx[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF7F0000003C)) 
    gttxreset_out_i_1
       (.I0(sm_reset_tx_timer_clr012_out__0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(gtwiz_reset_tx_any_sync),
        .I5(\gen_gtwizard_gthe4.gttxreset_int ),
        .O(\FSM_sequential_sm_reset_tx_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'h40)) 
    gttxreset_out_i_2
       (.I0(\FSM_sequential_sm_reset_tx_reg[0]_0 ),
        .I1(sm_reset_tx_timer_sat),
        .I2(plllock_tx_sync),
        .O(sm_reset_tx_timer_clr012_out__0));
  LUT6 #(
    .INIT(64'hFFCFFFFF00008080)) 
    gtwiz_reset_tx_done_int_i_1
       (.I0(gtwiz_reset_tx_done_int0__0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(plllock_tx_sync),
        .I4(Q[1]),
        .I5(gtwiz_reset_tx_done_int_reg),
        .O(\FSM_sequential_sm_reset_tx_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta_reg_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(plllock_tx_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT4 #(
    .INIT(16'h00B0)) 
    sm_reset_tx_timer_clr_i_3
       (.I0(plllock_tx_sync),
        .I1(Q[0]),
        .I2(sm_reset_tx_timer_sat),
        .I3(\FSM_sequential_sm_reset_tx_reg[0]_0 ),
        .O(i_in_out_reg_0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_25
   (i_in_out_reg_0,
    \FSM_sequential_sm_reset_rx_reg[1] ,
    \FSM_sequential_sm_reset_rx_reg[2] ,
    rxcdrlock_out,
    drpclk_in,
    sm_reset_rx_cdr_to_sat,
    Q,
    sm_reset_rx_cdr_to_clr_reg,
    sm_reset_rx_cdr_to_clr,
    gtwiz_reset_rx_any_sync,
    \gen_gtwizard_gthe4.rxprogdivreset_int );
  output i_in_out_reg_0;
  output \FSM_sequential_sm_reset_rx_reg[1] ;
  output \FSM_sequential_sm_reset_rx_reg[2] ;
  input [0:0]rxcdrlock_out;
  input [0:0]drpclk_in;
  input sm_reset_rx_cdr_to_sat;
  input [2:0]Q;
  input sm_reset_rx_cdr_to_clr_reg;
  input sm_reset_rx_cdr_to_clr;
  input gtwiz_reset_rx_any_sync;
  input \gen_gtwizard_gthe4.rxprogdivreset_int ;

  wire \FSM_sequential_sm_reset_rx_reg[1] ;
  wire \FSM_sequential_sm_reset_rx_reg[2] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gthe4.rxprogdivreset_int ;
  wire gtwiz_reset_rx_any_sync;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [0:0]rxcdrlock_out;
  wire sm_reset_rx_cdr_to_clr;
  wire sm_reset_rx_cdr_to_clr0__0;
  wire sm_reset_rx_cdr_to_clr_reg;
  wire sm_reset_rx_cdr_to_sat;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rxcdrlock_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(i_in_out_reg_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFF700000330)) 
    rxprogdivreset_out_i_1
       (.I0(sm_reset_rx_cdr_to_clr0__0),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(\gen_gtwizard_gthe4.rxprogdivreset_int ),
        .O(\FSM_sequential_sm_reset_rx_reg[2] ));
  LUT6 #(
    .INIT(64'hFFFF3FFF02023303)) 
    sm_reset_rx_cdr_to_clr_i_1
       (.I0(sm_reset_rx_cdr_to_clr0__0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(sm_reset_rx_cdr_to_clr_reg),
        .I4(Q[2]),
        .I5(sm_reset_rx_cdr_to_clr),
        .O(\FSM_sequential_sm_reset_rx_reg[1] ));
  LUT2 #(
    .INIT(4'hE)) 
    sm_reset_rx_cdr_to_clr_i_2
       (.I0(sm_reset_rx_cdr_to_sat),
        .I1(i_in_out_reg_0),
        .O(sm_reset_rx_cdr_to_clr0__0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_35
   (drprst_in_sync,
    drpclk_in);
  output drprst_in_sync;
  input [0:0]drpclk_in;

  wire [0:0]drpclk_in;
  wire drprst_in_sync;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire n_0_0;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(n_0_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(n_0_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(drprst_in_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_38
   (i_in_out_reg_0,
    \cpll_cal_state_reg[0] ,
    in0,
    drpclk_in,
    Q,
    cal_on_tx_reset_in_sync,
    USER_CPLLLOCK_OUT_reg);
  output i_in_out_reg_0;
  output \cpll_cal_state_reg[0] ;
  input in0;
  input [0:0]drpclk_in;
  input [1:0]Q;
  input cal_on_tx_reset_in_sync;
  input USER_CPLLLOCK_OUT_reg;

  wire [1:0]Q;
  wire USER_CPLLLOCK_OUT_reg;
  wire cal_on_tx_reset_in_sync;
  wire \cpll_cal_state_reg[0] ;
  wire [0:0]drpclk_in;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;

  LUT5 #(
    .INIT(32'h00000004)) 
    USER_CPLLLOCK_OUT_i_1
       (.I0(Q[0]),
        .I1(i_in_out_reg_0),
        .I2(cal_on_tx_reset_in_sync),
        .I3(Q[1]),
        .I4(USER_CPLLLOCK_OUT_reg),
        .O(\cpll_cal_state_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(i_in_out_reg_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_39
   (D,
    drpclk_in,
    txoutclksel_int,
    \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[0] );
  output [0:0]D;
  input [0:0]drpclk_in;
  input [0:0]txoutclksel_int;
  input \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[0] ;

  wire [0:0]D;
  wire [0:0]drpclk_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire n_0_0;
  wire \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[0] ;
  wire [0:0]txoutclksel_int;
  wire [0:0]user_txoutclksel_sync;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(n_0_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(n_0_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(user_txoutclksel_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT[0]_i_1 
       (.I0(txoutclksel_int),
        .I1(\non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[0] ),
        .I2(user_txoutclksel_sync),
        .O(D));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_40
   (D,
    drpclk_in,
    \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[1] );
  output [0:0]D;
  input [0:0]drpclk_in;
  input \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[1] ;

  wire [0:0]D;
  wire [0:0]drpclk_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire n_0_0;
  wire \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[1] ;
  wire [1:1]user_txoutclksel_sync;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(n_0_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(n_0_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(user_txoutclksel_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT[1]_i_1 
       (.I0(user_txoutclksel_sync),
        .I1(\non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[1] ),
        .O(D));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_41
   (D,
    drpclk_in,
    txoutclksel_int,
    \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[2] );
  output [0:0]D;
  input [0:0]drpclk_in;
  input [0:0]txoutclksel_int;
  input \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[2] ;

  wire [0:0]D;
  wire [0:0]drpclk_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire n_0_0;
  wire \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[2] ;
  wire [0:0]txoutclksel_int;
  wire [2:2]user_txoutclksel_sync;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(n_0_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(n_0_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(user_txoutclksel_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT[2]_i_1 
       (.I0(txoutclksel_int),
        .I1(\non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[2] ),
        .I2(user_txoutclksel_sync),
        .O(D));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_42
   (\cpll_cal_state_reg[14] ,
    D,
    i_in_meta_reg_0,
    drpclk_in,
    Q,
    cal_on_tx_reset_in_sync,
    freq_counter_rst_reg,
    freq_counter_rst_reg_0,
    freq_counter_rst_reg_1,
    \cpll_cal_state_reg[29] ,
    \cpll_cal_state_reg[20] ,
    cal_fail_store__0);
  output \cpll_cal_state_reg[14] ;
  output [4:0]D;
  input i_in_meta_reg_0;
  input [0:0]drpclk_in;
  input [8:0]Q;
  input cal_on_tx_reset_in_sync;
  input freq_counter_rst_reg;
  input freq_counter_rst_reg_0;
  input freq_counter_rst_reg_1;
  input \cpll_cal_state_reg[29] ;
  input \cpll_cal_state_reg[20] ;
  input cal_fail_store__0;

  wire [4:0]D;
  wire [8:0]Q;
  wire cal_fail_store__0;
  wire cal_on_tx_reset_in_sync;
  wire \cpll_cal_state_reg[14] ;
  wire \cpll_cal_state_reg[20] ;
  wire \cpll_cal_state_reg[29] ;
  wire [0:0]drpclk_in;
  wire freq_counter_rst_i_2_n_0;
  wire freq_counter_rst_reg;
  wire freq_counter_rst_reg_0;
  wire freq_counter_rst_reg_1;
  wire gthe4_txprgdivresetdone_sync;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_meta_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  LUT4 #(
    .INIT(16'h4F44)) 
    \cpll_cal_state[19]_i_1 
       (.I0(gthe4_txprgdivresetdone_sync),
        .I1(Q[3]),
        .I2(\cpll_cal_state_reg[29] ),
        .I3(Q[2]),
        .O(D[0]));
  LUT4 #(
    .INIT(16'h8F88)) 
    \cpll_cal_state[20]_i_1 
       (.I0(Q[3]),
        .I1(gthe4_txprgdivresetdone_sync),
        .I2(\cpll_cal_state_reg[20] ),
        .I3(Q[4]),
        .O(D[1]));
  LUT4 #(
    .INIT(16'h4F44)) 
    \cpll_cal_state[29]_i_1 
       (.I0(gthe4_txprgdivresetdone_sync),
        .I1(Q[6]),
        .I2(\cpll_cal_state_reg[29] ),
        .I3(Q[5]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT4 #(
    .INIT(16'hEAAA)) 
    \cpll_cal_state[30]_i_1 
       (.I0(Q[7]),
        .I1(gthe4_txprgdivresetdone_sync),
        .I2(Q[6]),
        .I3(cal_fail_store__0),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT4 #(
    .INIT(16'hAAEA)) 
    \cpll_cal_state[31]_i_1 
       (.I0(Q[8]),
        .I1(gthe4_txprgdivresetdone_sync),
        .I2(Q[6]),
        .I3(cal_fail_store__0),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFFFFFEFE00303232)) 
    freq_counter_rst_i_1
       (.I0(Q[0]),
        .I1(cal_on_tx_reset_in_sync),
        .I2(Q[1]),
        .I3(freq_counter_rst_reg),
        .I4(freq_counter_rst_i_2_n_0),
        .I5(freq_counter_rst_reg_0),
        .O(\cpll_cal_state_reg[14] ));
  LUT4 #(
    .INIT(16'h0BBB)) 
    freq_counter_rst_i_2
       (.I0(freq_counter_rst_reg_1),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(gthe4_txprgdivresetdone_sync),
        .O(freq_counter_rst_i_2_n_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta_reg_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gthe4_txprgdivresetdone_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_bit_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_43
   (txprogdivreset_int_reg,
    i_in_meta_reg_0,
    drpclk_in,
    txprogdivreset_int,
    \non_pcie_txoutclksel.GTHE4_TXPROGDIVRESET_OUT_reg );
  output txprogdivreset_int_reg;
  input i_in_meta_reg_0;
  input [0:0]drpclk_in;
  input txprogdivreset_int;
  input \non_pcie_txoutclksel.GTHE4_TXPROGDIVRESET_OUT_reg ;

  wire [0:0]drpclk_in;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_meta_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire \non_pcie_txoutclksel.GTHE4_TXPROGDIVRESET_OUT_reg ;
  wire txprogdivreset_int;
  wire txprogdivreset_int_reg;
  wire user_txprogdivreset_sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta_reg_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(user_txprogdivreset_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \non_pcie_txoutclksel.GTHE4_TXPROGDIVRESET_OUT_i_1 
       (.I0(txprogdivreset_int),
        .I1(\non_pcie_txoutclksel.GTHE4_TXPROGDIVRESET_OUT_reg ),
        .I2(user_txprogdivreset_sync),
        .O(txprogdivreset_int_reg));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_gte4_drp_arb" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gte4_drp_arb
   (Q,
    cal_on_tx_drdy,
    DEN_O,
    DWE_O,
    DADDR_O,
    DI_O,
    drprst_in_sync,
    drpclk_in,
    DO_I,
    cal_on_tx_drpen_out,
    \addr_i_reg[27]_0 ,
    \data_i_reg[47]_0 ,
    cal_on_tx_drpwe_out,
    \gen_gtwizard_gthe4.drprdy_int );
  output [15:0]Q;
  output cal_on_tx_drdy;
  output DEN_O;
  output DWE_O;
  output [6:0]DADDR_O;
  output [15:0]DI_O;
  input drprst_in_sync;
  input [0:0]drpclk_in;
  input [15:0]DO_I;
  input cal_on_tx_drpen_out;
  input [6:0]\addr_i_reg[27]_0 ;
  input [15:0]\data_i_reg[47]_0 ;
  input cal_on_tx_drpwe_out;
  input \gen_gtwizard_gthe4.drprdy_int ;

  wire CEB2;
  wire [6:0]DADDR_O;
  wire \DADDR_O[7]_i_1_n_0 ;
  wire DEN_O;
  wire DEN_O_i_1_n_0;
  wire DEN_O_i_2_n_0;
  wire [15:0]DI_O;
  wire \DI_O[15]_i_1_n_0 ;
  wire [15:0]DO_I;
  wire [47:32]DO_USR_O0;
  wire \DO_USR_O[47]_i_1_n_0 ;
  wire \DRDY_USR_O[2]_i_1_n_0 ;
  wire \DRDY_USR_O[2]_i_2_n_0 ;
  wire DWE_O;
  wire [15:0]Q;
  wire [27:21]addr_i;
  wire [6:0]\addr_i_reg[27]_0 ;
  wire [3:0]arb_state;
  wire cal_on_tx_drdy;
  wire cal_on_tx_drpen_out;
  wire cal_on_tx_drpwe_out;
  wire [7:1]daddr;
  wire [7:1]daddr0;
  wire [47:32]data_i;
  wire [15:0]\data_i_reg[47]_0 ;
  wire di;
  wire \di[0]_i_1_n_0 ;
  wire \di[10]_i_1_n_0 ;
  wire \di[11]_i_1_n_0 ;
  wire \di[12]_i_1_n_0 ;
  wire \di[13]_i_1_n_0 ;
  wire \di[14]_i_1_n_0 ;
  wire \di[15]_i_1_n_0 ;
  wire \di[1]_i_1_n_0 ;
  wire \di[2]_i_1_n_0 ;
  wire \di[3]_i_1_n_0 ;
  wire \di[4]_i_1_n_0 ;
  wire \di[5]_i_1_n_0 ;
  wire \di[6]_i_1_n_0 ;
  wire \di[7]_i_1_n_0 ;
  wire \di[8]_i_1_n_0 ;
  wire \di[9]_i_1_n_0 ;
  wire \di_reg_n_0_[0] ;
  wire \di_reg_n_0_[10] ;
  wire \di_reg_n_0_[11] ;
  wire \di_reg_n_0_[12] ;
  wire \di_reg_n_0_[13] ;
  wire \di_reg_n_0_[14] ;
  wire \di_reg_n_0_[15] ;
  wire \di_reg_n_0_[1] ;
  wire \di_reg_n_0_[2] ;
  wire \di_reg_n_0_[3] ;
  wire \di_reg_n_0_[4] ;
  wire \di_reg_n_0_[5] ;
  wire \di_reg_n_0_[6] ;
  wire \di_reg_n_0_[7] ;
  wire \di_reg_n_0_[8] ;
  wire \di_reg_n_0_[9] ;
  wire done_i_1_n_0;
  wire done_i_2_n_0;
  wire done_i_3_n_0;
  wire done_reg_n_0;
  wire [6:0]drp_state;
  wire \drp_state[0]_i_2_n_0 ;
  wire \drp_state[1]_i_2_n_0 ;
  wire \drp_state[4]_i_2_n_0 ;
  wire \drp_state[5]_i_2_n_0 ;
  wire \drp_state[6]_i_2_n_0 ;
  wire \drp_state[6]_i_3_n_0 ;
  wire \drp_state[6]_i_4_n_0 ;
  wire \drp_state_reg_n_0_[0] ;
  wire \drp_state_reg_n_0_[1] ;
  wire \drp_state_reg_n_0_[2] ;
  wire \drp_state_reg_n_0_[4] ;
  wire \drp_state_reg_n_0_[5] ;
  wire \drp_state_reg_n_0_[6] ;
  wire [0:0]drpclk_in;
  wire drprst_in_sync;
  wire [2:2]en;
  wire \en[2]_i_2_n_0 ;
  wire \gen_gtwizard_gthe4.drprdy_int ;
  wire \idx[0]_i_1_n_0 ;
  wire \idx[1]_i_2_n_0 ;
  wire \idx_reg_n_0_[0] ;
  wire \idx_reg_n_0_[1] ;
  wire [3:0]p_0_in;
  wire rd;
  wire rd_i_1_n_0;
  wire rd_reg_n_0;
  wire [7:0]timeout_cntr;
  wire \timeout_cntr[5]_i_2_n_0 ;
  wire \timeout_cntr[7]_i_1_n_0 ;
  wire \timeout_cntr[7]_i_3_n_0 ;
  wire \timeout_cntr[7]_i_4_n_0 ;
  wire \timeout_cntr_reg_n_0_[0] ;
  wire \timeout_cntr_reg_n_0_[1] ;
  wire \timeout_cntr_reg_n_0_[2] ;
  wire \timeout_cntr_reg_n_0_[3] ;
  wire \timeout_cntr_reg_n_0_[4] ;
  wire \timeout_cntr_reg_n_0_[5] ;
  wire \timeout_cntr_reg_n_0_[6] ;
  wire \timeout_cntr_reg_n_0_[7] ;
  wire [2:2]we;
  wire \we[2]_i_1_n_0 ;
  wire \we_reg_n_0_[2] ;
  wire wr;
  wire wr_reg_n_0;

  LUT6 #(
    .INIT(64'h0000000100010000)) 
    \DADDR_O[7]_i_1 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[0] ),
        .I3(\drp_state_reg_n_0_[6] ),
        .I4(\drp_state_reg_n_0_[4] ),
        .I5(\drp_state_reg_n_0_[1] ),
        .O(\DADDR_O[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[1] 
       (.C(drpclk_in),
        .CE(\DADDR_O[7]_i_1_n_0 ),
        .D(daddr[1]),
        .Q(DADDR_O[0]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[2] 
       (.C(drpclk_in),
        .CE(\DADDR_O[7]_i_1_n_0 ),
        .D(daddr[2]),
        .Q(DADDR_O[1]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[3] 
       (.C(drpclk_in),
        .CE(\DADDR_O[7]_i_1_n_0 ),
        .D(daddr[3]),
        .Q(DADDR_O[2]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[4] 
       (.C(drpclk_in),
        .CE(\DADDR_O[7]_i_1_n_0 ),
        .D(daddr[4]),
        .Q(DADDR_O[3]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[5] 
       (.C(drpclk_in),
        .CE(\DADDR_O[7]_i_1_n_0 ),
        .D(daddr[5]),
        .Q(DADDR_O[4]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[6] 
       (.C(drpclk_in),
        .CE(\DADDR_O[7]_i_1_n_0 ),
        .D(daddr[6]),
        .Q(DADDR_O[5]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[7] 
       (.C(drpclk_in),
        .CE(\DADDR_O[7]_i_1_n_0 ),
        .D(daddr[7]),
        .Q(DADDR_O[6]),
        .R(drprst_in_sync));
  LUT6 #(
    .INIT(64'h0000000000000116)) 
    DEN_O_i_1
       (.I0(\drp_state_reg_n_0_[4] ),
        .I1(\drp_state_reg_n_0_[1] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state_reg_n_0_[2] ),
        .I4(\drp_state_reg_n_0_[6] ),
        .I5(\drp_state_reg_n_0_[0] ),
        .O(DEN_O_i_1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    DEN_O_i_2
       (.I0(\drp_state_reg_n_0_[5] ),
        .I1(\drp_state_reg_n_0_[2] ),
        .O(DEN_O_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    DEN_O_reg
       (.C(drpclk_in),
        .CE(DEN_O_i_1_n_0),
        .D(DEN_O_i_2_n_0),
        .Q(DEN_O),
        .R(drprst_in_sync));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \DI_O[15]_i_1 
       (.I0(\drp_state_reg_n_0_[1] ),
        .I1(\drp_state_reg_n_0_[4] ),
        .I2(\drp_state_reg_n_0_[2] ),
        .I3(\drp_state_reg_n_0_[5] ),
        .I4(\drp_state_reg_n_0_[0] ),
        .I5(\drp_state_reg_n_0_[6] ),
        .O(\DI_O[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[0] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[0] ),
        .Q(DI_O[0]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[10] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[10] ),
        .Q(DI_O[10]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[11] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[11] ),
        .Q(DI_O[11]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[12] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[12] ),
        .Q(DI_O[12]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[13] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[13] ),
        .Q(DI_O[13]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[14] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[14] ),
        .Q(DI_O[14]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[15] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[15] ),
        .Q(DI_O[15]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[1] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[1] ),
        .Q(DI_O[1]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[2] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[2] ),
        .Q(DI_O[2]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[3] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[3] ),
        .Q(DI_O[3]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[4] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[4] ),
        .Q(DI_O[4]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[5] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[5] ),
        .Q(DI_O[5]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[6] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[6] ),
        .Q(DI_O[6]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[7] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[7] ),
        .Q(DI_O[7]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[8] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[8] ),
        .Q(DI_O[8]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[9] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[9] ),
        .Q(DI_O[9]),
        .R(drprst_in_sync));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \DO_USR_O[47]_i_1 
       (.I0(arb_state[0]),
        .I1(arb_state[3]),
        .I2(arb_state[2]),
        .I3(arb_state[1]),
        .I4(\idx_reg_n_0_[0] ),
        .I5(\idx_reg_n_0_[1] ),
        .O(\DO_USR_O[47]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[32] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[32]),
        .Q(Q[0]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[33] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[33]),
        .Q(Q[1]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[34] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[34]),
        .Q(Q[2]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[35] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[35]),
        .Q(Q[3]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[36] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[36]),
        .Q(Q[4]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[37] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[37]),
        .Q(Q[5]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[38] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[38]),
        .Q(Q[6]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[39] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[39]),
        .Q(Q[7]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[40] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[40]),
        .Q(Q[8]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[41] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[41]),
        .Q(Q[9]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[42] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[42]),
        .Q(Q[10]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[43] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[43]),
        .Q(Q[11]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[44] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[44]),
        .Q(Q[12]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[45] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[45]),
        .Q(Q[13]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[46] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[46]),
        .Q(Q[14]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[47] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[47]),
        .Q(Q[15]),
        .R(drprst_in_sync));
  LUT6 #(
    .INIT(64'hFFFFFDFF00000020)) 
    \DRDY_USR_O[2]_i_1 
       (.I0(\DRDY_USR_O[2]_i_2_n_0 ),
        .I1(arb_state[1]),
        .I2(arb_state[2]),
        .I3(arb_state[3]),
        .I4(arb_state[0]),
        .I5(cal_on_tx_drdy),
        .O(\DRDY_USR_O[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \DRDY_USR_O[2]_i_2 
       (.I0(\idx_reg_n_0_[1] ),
        .I1(\idx_reg_n_0_[0] ),
        .O(\DRDY_USR_O[2]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DRDY_USR_O_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(\DRDY_USR_O[2]_i_1_n_0 ),
        .Q(cal_on_tx_drdy),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    DWE_O_reg
       (.C(drpclk_in),
        .CE(DEN_O_i_1_n_0),
        .D(\drp_state_reg_n_0_[4] ),
        .Q(DWE_O),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[21] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\addr_i_reg[27]_0 [0]),
        .Q(addr_i[21]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[22] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\addr_i_reg[27]_0 [1]),
        .Q(addr_i[22]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[23] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\addr_i_reg[27]_0 [2]),
        .Q(addr_i[23]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[24] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\addr_i_reg[27]_0 [3]),
        .Q(addr_i[24]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[25] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\addr_i_reg[27]_0 [4]),
        .Q(addr_i[25]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[26] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\addr_i_reg[27]_0 [5]),
        .Q(addr_i[26]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[27] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\addr_i_reg[27]_0 [6]),
        .Q(addr_i[27]),
        .R(drprst_in_sync));
  LUT4 #(
    .INIT(16'hFEEB)) 
    \arb_state[0]_i_1 
       (.I0(arb_state[3]),
        .I1(arb_state[0]),
        .I2(arb_state[1]),
        .I3(arb_state[2]),
        .O(p_0_in[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \arb_state[1]_i_1 
       (.I0(arb_state[0]),
        .I1(arb_state[3]),
        .I2(done_reg_n_0),
        .I3(arb_state[2]),
        .I4(arb_state[1]),
        .I5(di),
        .O(p_0_in[1]));
  LUT5 #(
    .INIT(32'h00000008)) 
    \arb_state[2]_i_1 
       (.I0(arb_state[1]),
        .I1(done_reg_n_0),
        .I2(arb_state[2]),
        .I3(arb_state[3]),
        .I4(arb_state[0]),
        .O(p_0_in[2]));
  LUT6 #(
    .INIT(64'h00000000000F0700)) 
    \arb_state[3]_i_1 
       (.I0(en),
        .I1(\idx_reg_n_0_[1] ),
        .I2(arb_state[3]),
        .I3(arb_state[0]),
        .I4(arb_state[2]),
        .I5(arb_state[1]),
        .O(p_0_in[3]));
  (* FSM_ENCODED_STATES = "ARB_START:0001,ARB_INC:1000,ARB_WAIT:0010,ARB_REPORT:0100" *) 
  FDSE #(
    .INIT(1'b1)) 
    \arb_state_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(arb_state[0]),
        .S(drprst_in_sync));
  (* FSM_ENCODED_STATES = "ARB_START:0001,ARB_INC:1000,ARB_WAIT:0010,ARB_REPORT:0100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \arb_state_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(arb_state[1]),
        .R(drprst_in_sync));
  (* FSM_ENCODED_STATES = "ARB_START:0001,ARB_INC:1000,ARB_WAIT:0010,ARB_REPORT:0100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \arb_state_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(arb_state[2]),
        .R(drprst_in_sync));
  (* FSM_ENCODED_STATES = "ARB_START:0001,ARB_INC:1000,ARB_WAIT:0010,ARB_REPORT:0100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \arb_state_reg[3] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(arb_state[3]),
        .R(drprst_in_sync));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \daddr[1]_i_1 
       (.I0(addr_i[21]),
        .I1(\idx_reg_n_0_[0] ),
        .O(daddr0[1]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \daddr[2]_i_1 
       (.I0(addr_i[22]),
        .I1(\idx_reg_n_0_[0] ),
        .O(daddr0[2]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \daddr[3]_i_1 
       (.I0(addr_i[23]),
        .I1(\idx_reg_n_0_[0] ),
        .O(daddr0[3]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \daddr[4]_i_1 
       (.I0(addr_i[24]),
        .I1(\idx_reg_n_0_[0] ),
        .O(daddr0[4]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \daddr[5]_i_1 
       (.I0(addr_i[25]),
        .I1(\idx_reg_n_0_[0] ),
        .O(daddr0[5]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \daddr[6]_i_1 
       (.I0(addr_i[26]),
        .I1(\idx_reg_n_0_[0] ),
        .O(daddr0[6]));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \daddr[7]_i_1 
       (.I0(arb_state[1]),
        .I1(arb_state[2]),
        .I2(arb_state[0]),
        .I3(arb_state[3]),
        .I4(\idx_reg_n_0_[1] ),
        .I5(en),
        .O(di));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \daddr[7]_i_2 
       (.I0(addr_i[27]),
        .I1(\idx_reg_n_0_[0] ),
        .O(daddr0[7]));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[1] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[1]),
        .Q(daddr[1]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[2] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[2]),
        .Q(daddr[2]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[3] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[3]),
        .Q(daddr[3]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[4] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[4]),
        .Q(daddr[4]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[5] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[5]),
        .Q(daddr[5]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[6] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[6]),
        .Q(daddr[6]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[7] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[7]),
        .Q(daddr[7]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[32] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [0]),
        .Q(data_i[32]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[33] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [1]),
        .Q(data_i[33]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[34] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [2]),
        .Q(data_i[34]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[35] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [3]),
        .Q(data_i[35]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[36] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [4]),
        .Q(data_i[36]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[37] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [5]),
        .Q(data_i[37]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[38] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [6]),
        .Q(data_i[38]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[39] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [7]),
        .Q(data_i[39]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[40] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [8]),
        .Q(data_i[40]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[41] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [9]),
        .Q(data_i[41]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[42] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [10]),
        .Q(data_i[42]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[43] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [11]),
        .Q(data_i[43]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[44] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [12]),
        .Q(data_i[44]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[45] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [13]),
        .Q(data_i[45]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[46] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [14]),
        .Q(data_i[46]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[47] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [15]),
        .Q(data_i[47]),
        .R(drprst_in_sync));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[0]_i_1 
       (.I0(data_i[32]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[10]_i_1 
       (.I0(data_i[42]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[11]_i_1 
       (.I0(data_i[43]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[12]_i_1 
       (.I0(data_i[44]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[13]_i_1 
       (.I0(data_i[45]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[14]_i_1 
       (.I0(data_i[46]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[15]_i_1 
       (.I0(data_i[47]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[1]_i_1 
       (.I0(data_i[33]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[2]_i_1 
       (.I0(data_i[34]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[3]_i_1 
       (.I0(data_i[35]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[4]_i_1 
       (.I0(data_i[36]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[5]_i_1 
       (.I0(data_i[37]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[6]_i_1 
       (.I0(data_i[38]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[7]_i_1 
       (.I0(data_i[39]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[8]_i_1 
       (.I0(data_i[40]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \di[9]_i_1 
       (.I0(data_i[41]),
        .I1(\idx_reg_n_0_[0] ),
        .O(\di[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[0] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[0]_i_1_n_0 ),
        .Q(\di_reg_n_0_[0] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[10] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[10]_i_1_n_0 ),
        .Q(\di_reg_n_0_[10] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[11] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[11]_i_1_n_0 ),
        .Q(\di_reg_n_0_[11] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[12] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[12]_i_1_n_0 ),
        .Q(\di_reg_n_0_[12] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[13] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[13]_i_1_n_0 ),
        .Q(\di_reg_n_0_[13] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[14] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[14]_i_1_n_0 ),
        .Q(\di_reg_n_0_[14] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[15] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[15]_i_1_n_0 ),
        .Q(\di_reg_n_0_[15] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[1] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[1]_i_1_n_0 ),
        .Q(\di_reg_n_0_[1] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[2] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[2]_i_1_n_0 ),
        .Q(\di_reg_n_0_[2] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[3] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[3]_i_1_n_0 ),
        .Q(\di_reg_n_0_[3] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[4] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[4]_i_1_n_0 ),
        .Q(\di_reg_n_0_[4] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[5] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[5]_i_1_n_0 ),
        .Q(\di_reg_n_0_[5] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[6] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[6]_i_1_n_0 ),
        .Q(\di_reg_n_0_[6] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[7] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[7]_i_1_n_0 ),
        .Q(\di_reg_n_0_[7] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[8] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[8]_i_1_n_0 ),
        .Q(\di_reg_n_0_[8] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[9] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[9]_i_1_n_0 ),
        .Q(\di_reg_n_0_[9] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[0] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[0]),
        .Q(DO_USR_O0[32]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[10] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[10]),
        .Q(DO_USR_O0[42]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[11] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[11]),
        .Q(DO_USR_O0[43]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[12] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[12]),
        .Q(DO_USR_O0[44]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[13] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[13]),
        .Q(DO_USR_O0[45]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[14] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[14]),
        .Q(DO_USR_O0[46]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[15] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[15]),
        .Q(DO_USR_O0[47]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[1] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[1]),
        .Q(DO_USR_O0[33]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[2] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[2]),
        .Q(DO_USR_O0[34]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[3] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[3]),
        .Q(DO_USR_O0[35]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[4] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[4]),
        .Q(DO_USR_O0[36]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[5] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[5]),
        .Q(DO_USR_O0[37]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[6] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[6]),
        .Q(DO_USR_O0[38]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[7] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[7]),
        .Q(DO_USR_O0[39]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[8] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[8]),
        .Q(DO_USR_O0[40]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[9] 
       (.C(drpclk_in),
        .CE(drp_state[6]),
        .D(DO_I[9]),
        .Q(DO_USR_O0[41]),
        .R(drprst_in_sync));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    done_i_1
       (.I0(done_i_2_n_0),
        .I1(drp_state[6]),
        .I2(\DADDR_O[7]_i_1_n_0 ),
        .I3(done_i_3_n_0),
        .I4(done_reg_n_0),
        .O(done_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    done_i_2
       (.I0(\drp_state_reg_n_0_[6] ),
        .I1(\drp_state_reg_n_0_[1] ),
        .I2(\drp_state_reg_n_0_[4] ),
        .I3(\drp_state[6]_i_3_n_0 ),
        .O(done_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    done_i_3
       (.I0(\drp_state_reg_n_0_[0] ),
        .I1(\drp_state_reg_n_0_[6] ),
        .I2(\drp_state_reg_n_0_[2] ),
        .I3(\drp_state_reg_n_0_[5] ),
        .I4(\drp_state_reg_n_0_[1] ),
        .I5(\drp_state_reg_n_0_[4] ),
        .O(done_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    done_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(done_i_1_n_0),
        .Q(done_reg_n_0),
        .R(drprst_in_sync));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEF8)) 
    \drp_state[0]_i_1 
       (.I0(\drp_state_reg_n_0_[4] ),
        .I1(\drp_state_reg_n_0_[1] ),
        .I2(\drp_state_reg_n_0_[6] ),
        .I3(\drp_state_reg_n_0_[2] ),
        .I4(\drp_state_reg_n_0_[5] ),
        .I5(\drp_state[0]_i_2_n_0 ),
        .O(drp_state[0]));
  LUT6 #(
    .INIT(64'hF0F0F0F0F0F0F01F)) 
    \drp_state[0]_i_2 
       (.I0(wr_reg_n_0),
        .I1(rd_reg_n_0),
        .I2(\drp_state_reg_n_0_[0] ),
        .I3(\drp_state_reg_n_0_[4] ),
        .I4(\drp_state_reg_n_0_[1] ),
        .I5(\drp_state[1]_i_2_n_0 ),
        .O(\drp_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \drp_state[1]_i_1 
       (.I0(rd_reg_n_0),
        .I1(\drp_state_reg_n_0_[0] ),
        .I2(\drp_state_reg_n_0_[6] ),
        .I3(\drp_state[1]_i_2_n_0 ),
        .I4(\drp_state_reg_n_0_[1] ),
        .I5(\drp_state_reg_n_0_[4] ),
        .O(drp_state[1]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \drp_state[1]_i_2 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .O(\drp_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000C0400)) 
    \drp_state[2]_i_1 
       (.I0(\drp_state[6]_i_3_n_0 ),
        .I1(\drp_state[5]_i_2_n_0 ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state_reg_n_0_[2] ),
        .I4(\drp_state_reg_n_0_[1] ),
        .I5(\drp_state_reg_n_0_[4] ),
        .O(drp_state[2]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \drp_state[4]_i_1 
       (.I0(\drp_state_reg_n_0_[0] ),
        .I1(\drp_state_reg_n_0_[6] ),
        .I2(wr_reg_n_0),
        .I3(rd_reg_n_0),
        .I4(\drp_state[4]_i_2_n_0 ),
        .O(drp_state[4]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \drp_state[4]_i_2 
       (.I0(\drp_state_reg_n_0_[4] ),
        .I1(\drp_state_reg_n_0_[1] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state_reg_n_0_[2] ),
        .O(\drp_state[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000C0040)) 
    \drp_state[5]_i_1 
       (.I0(\drp_state[6]_i_3_n_0 ),
        .I1(\drp_state[5]_i_2_n_0 ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state_reg_n_0_[2] ),
        .I4(\drp_state_reg_n_0_[4] ),
        .I5(\drp_state_reg_n_0_[1] ),
        .O(drp_state[5]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \drp_state[5]_i_2 
       (.I0(\drp_state_reg_n_0_[0] ),
        .I1(\drp_state_reg_n_0_[6] ),
        .O(\drp_state[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000600000000)) 
    \drp_state[6]_i_1 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[6] ),
        .I3(\drp_state_reg_n_0_[0] ),
        .I4(\drp_state[6]_i_2_n_0 ),
        .I5(\drp_state[6]_i_3_n_0 ),
        .O(drp_state[6]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \drp_state[6]_i_2 
       (.I0(\drp_state_reg_n_0_[1] ),
        .I1(\drp_state_reg_n_0_[4] ),
        .O(\drp_state[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80000000)) 
    \drp_state[6]_i_3 
       (.I0(\drp_state[6]_i_4_n_0 ),
        .I1(\timeout_cntr_reg_n_0_[7] ),
        .I2(\timeout_cntr_reg_n_0_[6] ),
        .I3(\timeout_cntr_reg_n_0_[0] ),
        .I4(\timeout_cntr_reg_n_0_[1] ),
        .I5(\gen_gtwizard_gthe4.drprdy_int ),
        .O(\drp_state[6]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \drp_state[6]_i_4 
       (.I0(\timeout_cntr_reg_n_0_[3] ),
        .I1(\timeout_cntr_reg_n_0_[2] ),
        .I2(\timeout_cntr_reg_n_0_[5] ),
        .I3(\timeout_cntr_reg_n_0_[4] ),
        .O(\drp_state[6]_i_4_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \drp_state_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(drp_state[0]),
        .Q(\drp_state_reg_n_0_[0] ),
        .S(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(drp_state[1]),
        .Q(\drp_state_reg_n_0_[1] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(drp_state[2]),
        .Q(\drp_state_reg_n_0_[2] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[4] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(drp_state[4]),
        .Q(\drp_state_reg_n_0_[4] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[5] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(drp_state[5]),
        .Q(\drp_state_reg_n_0_[5] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[6] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(drp_state[6]),
        .Q(\drp_state_reg_n_0_[6] ),
        .R(drprst_in_sync));
  LUT4 #(
    .INIT(16'hAEAA)) 
    \en[2]_i_1 
       (.I0(cal_on_tx_drpen_out),
        .I1(\idx_reg_n_0_[1] ),
        .I2(\idx_reg_n_0_[0] ),
        .I3(done_reg_n_0),
        .O(we));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT4 #(
    .INIT(16'hDF00)) 
    \en[2]_i_2 
       (.I0(\idx_reg_n_0_[1] ),
        .I1(\idx_reg_n_0_[0] ),
        .I2(done_reg_n_0),
        .I3(cal_on_tx_drpen_out),
        .O(\en[2]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \en_reg[2] 
       (.C(drpclk_in),
        .CE(we),
        .D(\en[2]_i_2_n_0 ),
        .Q(en),
        .R(drprst_in_sync));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \idx[0]_i_1 
       (.I0(\idx_reg_n_0_[1] ),
        .I1(\idx_reg_n_0_[0] ),
        .O(\idx[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \idx[1]_i_1 
       (.I0(arb_state[0]),
        .I1(arb_state[3]),
        .I2(arb_state[2]),
        .I3(arb_state[1]),
        .O(CEB2));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \idx[1]_i_2 
       (.I0(\idx_reg_n_0_[0] ),
        .I1(\idx_reg_n_0_[1] ),
        .O(\idx[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idx_reg[0] 
       (.C(drpclk_in),
        .CE(CEB2),
        .D(\idx[0]_i_1_n_0 ),
        .Q(\idx_reg_n_0_[0] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \idx_reg[1] 
       (.C(drpclk_in),
        .CE(CEB2),
        .D(\idx[1]_i_2_n_0 ),
        .Q(\idx_reg_n_0_[1] ),
        .R(drprst_in_sync));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    rd_i_1
       (.I0(arb_state[1]),
        .I1(\we_reg_n_0_[2] ),
        .I2(\idx_reg_n_0_[1] ),
        .I3(en),
        .O(rd_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rd_reg
       (.C(drpclk_in),
        .CE(rd),
        .D(rd_i_1_n_0),
        .Q(rd_reg_n_0),
        .R(drprst_in_sync));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \timeout_cntr[0]_i_1 
       (.I0(\drp_state_reg_n_0_[5] ),
        .I1(\drp_state_reg_n_0_[2] ),
        .I2(\timeout_cntr_reg_n_0_[0] ),
        .O(timeout_cntr[0]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT4 #(
    .INIT(16'h0EE0)) 
    \timeout_cntr[1]_i_1 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\timeout_cntr_reg_n_0_[0] ),
        .I3(\timeout_cntr_reg_n_0_[1] ),
        .O(timeout_cntr[1]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT5 #(
    .INIT(32'h77708880)) 
    \timeout_cntr[2]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[1] ),
        .I1(\timeout_cntr_reg_n_0_[0] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state_reg_n_0_[2] ),
        .I4(\timeout_cntr_reg_n_0_[2] ),
        .O(timeout_cntr[2]));
  LUT6 #(
    .INIT(64'h7F7F7F0080808000)) 
    \timeout_cntr[3]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[2] ),
        .I1(\timeout_cntr_reg_n_0_[0] ),
        .I2(\timeout_cntr_reg_n_0_[1] ),
        .I3(\drp_state_reg_n_0_[5] ),
        .I4(\drp_state_reg_n_0_[2] ),
        .I5(\timeout_cntr_reg_n_0_[3] ),
        .O(timeout_cntr[3]));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \timeout_cntr[4]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[1] ),
        .I1(\timeout_cntr_reg_n_0_[0] ),
        .I2(\timeout_cntr_reg_n_0_[2] ),
        .I3(\timeout_cntr_reg_n_0_[3] ),
        .I4(\drp_state[1]_i_2_n_0 ),
        .I5(\timeout_cntr_reg_n_0_[4] ),
        .O(timeout_cntr[4]));
  LUT6 #(
    .INIT(64'hFF7F000000800000)) 
    \timeout_cntr[5]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[4] ),
        .I1(\timeout_cntr_reg_n_0_[3] ),
        .I2(\timeout_cntr_reg_n_0_[2] ),
        .I3(\timeout_cntr[5]_i_2_n_0 ),
        .I4(\drp_state[1]_i_2_n_0 ),
        .I5(\timeout_cntr_reg_n_0_[5] ),
        .O(timeout_cntr[5]));
  LUT2 #(
    .INIT(4'h7)) 
    \timeout_cntr[5]_i_2 
       (.I0(\timeout_cntr_reg_n_0_[1] ),
        .I1(\timeout_cntr_reg_n_0_[0] ),
        .O(\timeout_cntr[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'hA854)) 
    \timeout_cntr[6]_i_1 
       (.I0(\timeout_cntr[7]_i_4_n_0 ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[2] ),
        .I3(\timeout_cntr_reg_n_0_[6] ),
        .O(timeout_cntr[6]));
  LUT5 #(
    .INIT(32'h0000055C)) 
    \timeout_cntr[7]_i_1 
       (.I0(\drp_state[4]_i_2_n_0 ),
        .I1(\timeout_cntr[7]_i_3_n_0 ),
        .I2(\drp_state_reg_n_0_[6] ),
        .I3(\drp_state_reg_n_0_[0] ),
        .I4(drprst_in_sync),
        .O(\timeout_cntr[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT5 #(
    .INIT(32'hE00EE0E0)) 
    \timeout_cntr[7]_i_2 
       (.I0(\drp_state_reg_n_0_[5] ),
        .I1(\drp_state_reg_n_0_[2] ),
        .I2(\timeout_cntr_reg_n_0_[7] ),
        .I3(\timeout_cntr[7]_i_4_n_0 ),
        .I4(\timeout_cntr_reg_n_0_[6] ),
        .O(timeout_cntr[7]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT4 #(
    .INIT(16'h0116)) 
    \timeout_cntr[7]_i_3 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[1] ),
        .I3(\drp_state_reg_n_0_[4] ),
        .O(\timeout_cntr[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \timeout_cntr[7]_i_4 
       (.I0(\timeout_cntr_reg_n_0_[1] ),
        .I1(\timeout_cntr_reg_n_0_[0] ),
        .I2(\timeout_cntr_reg_n_0_[2] ),
        .I3(\timeout_cntr_reg_n_0_[3] ),
        .I4(\timeout_cntr_reg_n_0_[4] ),
        .I5(\timeout_cntr_reg_n_0_[5] ),
        .O(\timeout_cntr[7]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[0] 
       (.C(drpclk_in),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[0]),
        .Q(\timeout_cntr_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[1] 
       (.C(drpclk_in),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[1]),
        .Q(\timeout_cntr_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[2] 
       (.C(drpclk_in),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[2]),
        .Q(\timeout_cntr_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[3] 
       (.C(drpclk_in),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[3]),
        .Q(\timeout_cntr_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[4] 
       (.C(drpclk_in),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[4]),
        .Q(\timeout_cntr_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[5] 
       (.C(drpclk_in),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[5]),
        .Q(\timeout_cntr_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[6] 
       (.C(drpclk_in),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[6]),
        .Q(\timeout_cntr_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[7] 
       (.C(drpclk_in),
        .CE(\timeout_cntr[7]_i_1_n_0 ),
        .D(timeout_cntr[7]),
        .Q(\timeout_cntr_reg_n_0_[7] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT4 #(
    .INIT(16'hDF00)) 
    \we[2]_i_1 
       (.I0(\idx_reg_n_0_[1] ),
        .I1(\idx_reg_n_0_[0] ),
        .I2(done_reg_n_0),
        .I3(cal_on_tx_drpwe_out),
        .O(\we[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \we_reg[2] 
       (.C(drpclk_in),
        .CE(we),
        .D(\we[2]_i_1_n_0 ),
        .Q(\we_reg_n_0_[2] ),
        .R(drprst_in_sync));
  LUT4 #(
    .INIT(16'h0012)) 
    wr_i_1
       (.I0(arb_state[1]),
        .I1(arb_state[2]),
        .I2(arb_state[0]),
        .I3(arb_state[3]),
        .O(rd));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    wr_i_2
       (.I0(arb_state[1]),
        .I1(\we_reg_n_0_[2] ),
        .I2(\idx_reg_n_0_[1] ),
        .I3(en),
        .O(wr));
  FDRE #(
    .INIT(1'b0)) 
    wr_reg
       (.C(drpclk_in),
        .CE(rd),
        .D(wr),
        .Q(wr_reg_n_0),
        .R(drprst_in_sync));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_gthe4_channel" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gthe4_channel
   (in0,
    \gen_gtwizard_gthe4.drprdy_int ,
    gthtxn_out,
    gthtxp_out,
    \gen_gtwizard_gthe4.gtpowergood_int ,
    rxcdrlock_out,
    rxoutclk_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    gtwiz_userclk_rx_active_out,
    rxresetdone_out,
    rxsyncdone_out,
    txoutclk_out,
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_0 ,
    txresetdone_out,
    gtwiz_userdata_rx_out,
    D,
    rxctrl0_out,
    rxctrl1_out,
    txbufstatus_out,
    rxctrl2_out,
    rxctrl3_out,
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_1 ,
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_2 ,
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_3 ,
    drpclk_in,
    DEN_O,
    DWE_O,
    gthrxn_in,
    gthrxp_in,
    gtrefclk0_in,
    \gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int ,
    \gen_gtwizard_gthe4.gttxreset_int ,
    \gen_gtwizard_gthe4.rxdlysreset_int ,
    rxmcommaalignen_in,
    \gen_gtwizard_gthe4.rxprogdivreset_int ,
    RXRATE,
    \gen_gtwizard_gthe4.rxuserrdy_int ,
    rxusrclk_in,
    txelecidle_in,
    \gen_gtwizard_gthe4.txprogdivreset_ch_int ,
    \gen_gtwizard_gthe4.txuserrdy_int ,
    txusrclk_in,
    gtwiz_userdata_tx_in,
    Q,
    txctrl0_in,
    txctrl1_in,
    RXPD,
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_4 ,
    txctrl2_in,
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_5 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5);
  output in0;
  output \gen_gtwizard_gthe4.drprdy_int ;
  output [0:0]gthtxn_out;
  output [0:0]gthtxp_out;
  output \gen_gtwizard_gthe4.gtpowergood_int ;
  output [0:0]rxcdrlock_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxoutclkpcs_out;
  output [0:0]rxphaligndone_out;
  output [0:0]gtwiz_userclk_rx_active_out;
  output [0:0]rxresetdone_out;
  output [0:0]rxsyncdone_out;
  output [0:0]txoutclk_out;
  output \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_0 ;
  output [0:0]txresetdone_out;
  output [15:0]gtwiz_userdata_rx_out;
  output [15:0]D;
  output [1:0]rxctrl0_out;
  output [1:0]rxctrl1_out;
  output [0:0]txbufstatus_out;
  output [1:0]rxctrl2_out;
  output [1:0]rxctrl3_out;
  output \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_1 ;
  input \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_2 ;
  input \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_3 ;
  input [0:0]drpclk_in;
  input DEN_O;
  input DWE_O;
  input [0:0]gthrxn_in;
  input [0:0]gthrxp_in;
  input [0:0]gtrefclk0_in;
  input \gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int ;
  input \gen_gtwizard_gthe4.gttxreset_int ;
  input \gen_gtwizard_gthe4.rxdlysreset_int ;
  input [0:0]rxmcommaalignen_in;
  input \gen_gtwizard_gthe4.rxprogdivreset_int ;
  input [0:0]RXRATE;
  input \gen_gtwizard_gthe4.rxuserrdy_int ;
  input [0:0]rxusrclk_in;
  input [0:0]txelecidle_in;
  input \gen_gtwizard_gthe4.txprogdivreset_ch_int ;
  input \gen_gtwizard_gthe4.txuserrdy_int ;
  input [0:0]txusrclk_in;
  input [15:0]gtwiz_userdata_tx_in;
  input [15:0]Q;
  input [1:0]txctrl0_in;
  input [1:0]txctrl1_in;
  input [0:0]RXPD;
  input [2:0]\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_4 ;
  input [1:0]txctrl2_in;
  input [6:0]\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_5 ;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  output lopt_4;
  output lopt_5;

  wire [15:0]D;
  wire DEN_O;
  wire DWE_O;
  wire [15:0]Q;
  wire [0:0]RXPD;
  wire [0:0]RXRATE;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int ;
  wire \gen_gtwizard_gthe4.drprdy_int ;
  wire \gen_gtwizard_gthe4.gtpowergood_int ;
  wire \gen_gtwizard_gthe4.gttxreset_int ;
  wire \gen_gtwizard_gthe4.rxdlysreset_int ;
  wire \gen_gtwizard_gthe4.rxprogdivreset_int ;
  wire \gen_gtwizard_gthe4.rxuserrdy_int ;
  wire \gen_gtwizard_gthe4.txprogdivreset_ch_int ;
  wire \gen_gtwizard_gthe4.txuserrdy_int ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_0 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_1 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_2 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_3 ;
  wire [2:0]\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_4 ;
  wire [6:0]\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_5 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_0 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_1 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_100 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_101 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_102 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_103 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_104 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_105 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_106 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_107 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_108 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_109 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_11 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_110 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_111 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_112 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_113 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_114 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_115 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_116 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_117 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_118 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_119 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_12 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_120 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_121 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_122 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_123 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_124 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_125 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_126 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_127 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_128 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_129 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_13 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_130 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_131 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_132 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_133 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_134 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_135 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_136 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_137 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_138 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_139 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_14 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_140 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_141 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_142 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_143 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_144 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_145 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_146 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_147 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_148 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_149 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_15 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_150 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_151 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_152 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_153 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_154 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_155 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_156 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_157 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_158 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_159 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_16 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_160 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_161 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_162 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_163 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_164 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_165 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_166 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_167 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_168 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_169 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_17 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_170 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_171 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_172 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_173 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_174 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_175 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_176 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_177 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_178 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_179 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_18 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_180 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_181 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_182 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_183 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_184 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_185 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_186 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_187 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_188 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_189 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_19 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_190 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_2 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_20 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_207 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_208 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_209 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_21 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_210 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_211 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_212 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_213 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_214 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_215 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_216 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_217 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_218 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_219 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_22 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_220 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_221 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_222 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_239 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_24 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_240 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_241 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_242 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_243 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_244 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_245 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_246 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_247 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_248 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_249 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_25 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_250 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_251 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_252 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_253 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_254 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_255 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_256 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_257 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_258 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_259 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_26 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_260 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_261 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_262 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_263 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_264 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_265 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_266 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_267 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_268 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_269 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_27 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_270 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_271 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_272 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_273 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_274 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_275 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_276 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_277 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_278 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_279 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_28 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_280 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_281 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_282 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_283 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_284 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_287 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_288 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_289 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_29 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_290 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_291 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_292 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_293 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_294 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_295 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_296 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_297 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_298 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_299 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_30 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_300 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_303 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_304 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_305 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_306 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_307 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_308 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_309 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_31 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_310 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_311 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_312 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_313 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_314 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_316 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_317 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_318 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_319 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_32 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_320 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_321 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_322 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_323 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_324 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_325 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_326 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_327 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_328 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_329 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_33 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_330 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_331 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_332 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_333 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_334 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_335 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_336 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_337 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_338 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_339 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_34 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_340 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_341 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_342 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_343 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_344 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_345 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_348 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_349 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_35 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_350 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_351 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_352 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_353 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_356 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_357 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_358 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_359 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_36 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_360 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_361 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_362 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_363 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_364 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_365 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_366 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_367 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_368 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_369 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_37 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_370 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_371 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_372 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_373 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_374 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_375 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_376 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_377 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_378 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_379 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_38 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_380 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_39 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_4 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_40 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_41 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_43 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_46 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_48 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_49 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_5 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_50 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_51 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_52 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_53 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_54 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_56 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_57 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_58 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_59 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_61 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_62 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_63 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_64 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_65 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_67 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_68 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_69 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_7 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_70 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_71 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_73 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_74 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_75 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_77 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_78 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_79 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_80 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_81 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_82 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_83 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_84 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_85 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_86 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_87 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_88 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_89 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_90 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_91 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_92 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_93 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_94 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_95 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_96 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_97 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_98 ;
  wire \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_99 ;
  wire [0:0]gthrxn_in;
  wire [0:0]gthrxp_in;
  wire [0:0]gthtxn_out;
  wire [0:0]gthtxp_out;
  wire [0:0]gtrefclk0_in;
  wire [0:0]gtwiz_userclk_rx_active_out;
  wire [15:0]gtwiz_userdata_rx_out;
  wire [15:0]gtwiz_userdata_tx_in;
  wire in0;
  wire lopt;
  wire lopt_1;
  wire [0:0]rxcdrlock_out;
  wire [1:0]rxctrl0_out;
  wire [1:0]rxctrl1_out;
  wire [1:0]rxctrl2_out;
  wire [1:0]rxctrl3_out;
  wire [0:0]rxmcommaalignen_in;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxoutclkpcs_out;
  wire [0:0]rxphaligndone_out;
  wire [0:0]rxresetdone_out;
  wire [0:0]rxsyncdone_out;
  wire [0:0]rxusrclk_in;
  wire [0:0]txbufstatus_out;
  wire [1:0]txctrl0_in;
  wire [1:0]txctrl1_in;
  wire [1:0]txctrl2_in;
  wire [0:0]txelecidle_in;
  wire [0:0]txoutclk_out;
  wire [0:0]txresetdone_out;
  wire [0:0]txusrclk_in;
  wire xlnx_opt_;
  wire xlnx_opt__1;
  wire xlnx_opt__2;
  wire xlnx_opt__3;

  assign lopt_2 = xlnx_opt_;
  assign lopt_3 = xlnx_opt__1;
  assign lopt_4 = xlnx_opt__2;
  assign lopt_5 = xlnx_opt__3;
  (* OPT_MODIFIED = "MLO" *) 
  BUFG_GT_SYNC BUFG_GT_SYNC
       (.CE(lopt),
        .CESYNC(xlnx_opt_),
        .CLK(rxoutclk_out),
        .CLR(lopt_1),
        .CLRSYNC(xlnx_opt__1));
  (* OPT_MODIFIED = "MLO" *) 
  BUFG_GT_SYNC BUFG_GT_SYNC_1
       (.CE(lopt),
        .CESYNC(xlnx_opt__2),
        .CLK(txoutclk_out),
        .CLR(lopt_1),
        .CLRSYNC(xlnx_opt__3));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_2 
       (.I0(\gen_gtwizard_gthe4.gtpowergood_int ),
        .O(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_1 ));
  (* box_type = "PRIMITIVE" *) 
  GTHE4_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'h1000),
    .ADAPT_CFG1(16'hC800),
    .ADAPT_CFG2(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(2),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_RXTERMINATION(1'b1),
    .A_TXDIFFCTRL(5'b01100),
    .A_TXPROGDIVRESET(1'b0),
    .CAPBYPASS_FORCE(1'b0),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CFOK_PWRSVE_EN(1'b1),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CH_HSPMUX(16'h3C3C),
    .CKCAL1_CFG_0(16'b1100000011000000),
    .CKCAL1_CFG_1(16'b0101000011000000),
    .CKCAL1_CFG_2(16'b0000000000001010),
    .CKCAL1_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_0(16'b1100000011000000),
    .CKCAL2_CFG_1(16'b1000000011000000),
    .CKCAL2_CFG_2(16'b0000000000000000),
    .CKCAL2_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_4(16'b0000000000000000),
    .CKCAL_RSVD0(16'h0080),
    .CKCAL_RSVD1(16'h0400),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(20),
    .CLK_COR_MIN_LAT(18),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100000000),
    .CLK_COR_SEQ_1_2(10'b0100000000),
    .CLK_COR_SEQ_1_3(10'b0100000000),
    .CLK_COR_SEQ_1_4(10'b0100000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0100000000),
    .CLK_COR_SEQ_2_2(10'b0100000000),
    .CLK_COR_SEQ_2_3(10'b0100000000),
    .CLK_COR_SEQ_2_4(10'b0100000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h01FA),
    .CPLL_CFG1(16'h0023),
    .CPLL_CFG2(16'h0002),
    .CPLL_CFG3(16'h0000),
    .CPLL_FBDIV(4),
    .CPLL_FBDIV_45(4),
    .CPLL_INIT_CFG0(16'h02B2),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .CTLE3_OCAP_EXT_CTRL(3'b000),
    .CTLE3_OCAP_EXT_EN(1'b0),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DELAY_ELEC(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUALIFIER5(16'h0000),
    .ES_QUALIFIER6(16'h0000),
    .ES_QUALIFIER7(16'h0000),
    .ES_QUALIFIER8(16'h0000),
    .ES_QUALIFIER9(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_QUAL_MASK5(16'h0000),
    .ES_QUAL_MASK6(16'h0000),
    .ES_QUAL_MASK7(16'h0000),
    .ES_QUAL_MASK8(16'h0000),
    .ES_QUAL_MASK9(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .ES_SDATA_MASK5(16'h0000),
    .ES_SDATA_MASK6(16'h0000),
    .ES_SDATA_MASK7(16'h0000),
    .ES_SDATA_MASK8(16'h0000),
    .ES_SDATA_MASK9(16'h0000),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(5'b00000),
    .ISCAN_CK_PH_SEL2(1'b0),
    .LOCAL_MASTER(1'b1),
    .LPBK_BIAS_CTRL(3'b100),
    .LPBK_EN_RCAL_B(1'b0),
    .LPBK_EXT_RCAL(4'b1000),
    .LPBK_IND_CTRL0(3'b000),
    .LPBK_IND_CTRL1(3'b000),
    .LPBK_IND_CTRL2(3'b000),
    .LPBK_RG_CTRL(4'b1110),
    .OOBDIVCTL(2'b00),
    .OOB_PWRUP(1'b0),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE3_CLK_COR_EMPTY_THRSH(5'b00000),
    .PCIE3_CLK_COR_FULL_THRSH(6'b010000),
    .PCIE3_CLK_COR_MAX_LAT(5'b00100),
    .PCIE3_CLK_COR_MIN_LAT(5'b00000),
    .PCIE3_CLK_COR_THRSH_TIMER(6'b001000),
    .PCIE_BUFG_DIV_CTRL(16'h1000),
    .PCIE_PLL_SEL_MODE_GEN12(2'h0),
    .PCIE_PLL_SEL_MODE_GEN3(2'h3),
    .PCIE_PLL_SEL_MODE_GEN4(2'h2),
    .PCIE_RXPCS_CFG_GEN3(16'h0AA5),
    .PCIE_RXPMA_CFG(16'h280A),
    .PCIE_TXPCS_CFG_GEN3(16'h2CA4),
    .PCIE_TXPMA_CFG(16'h280A),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD0(16'b0000000000000000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PREIQ_FREQ_BST(0),
    .PROCESS_PAR(3'b010),
    .RATE_SW_USE_DRP(1'b1),
    .RCLK_SIPO_DLY_ENB(1'b0),
    .RCLK_SIPO_INV_EN(1'b0),
    .RESET_POWERSAVE_DISABLE(1'b0),
    .RTX_BUF_CML_CTRL(3'b010),
    .RTX_BUF_TERM_CTRL(2'b00),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("FALSE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(0),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0003),
    .RXCDR_CFG0_GEN3(16'h0003),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h0249),
    .RXCDR_CFG2_GEN2(10'h249),
    .RXCDR_CFG2_GEN3(16'h0249),
    .RXCDR_CFG2_GEN4(16'h0164),
    .RXCDR_CFG3(16'h0012),
    .RXCDR_CFG3_GEN2(6'h12),
    .RXCDR_CFG3_GEN3(16'h0012),
    .RXCDR_CFG3_GEN4(16'h0012),
    .RXCDR_CFG4(16'h5CF6),
    .RXCDR_CFG4_GEN3(16'h5CF6),
    .RXCDR_CFG5(16'hB46B),
    .RXCDR_CFG5_GEN3(16'h146B),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG0(16'h2201),
    .RXCDR_LOCK_CFG1(16'h9FFF),
    .RXCDR_LOCK_CFG2(16'h77C3),
    .RXCDR_LOCK_CFG3(16'h0001),
    .RXCDR_LOCK_CFG4(16'h0000),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h0000),
    .RXCFOK_CFG1(16'h8015),
    .RXCFOK_CFG2(16'h02AE),
    .RXCKCAL1_IQ_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_I_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_Q_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_DX_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_D_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_S_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_X_LOOP_RST_CFG(16'h0004),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'hA0E2),
    .RXDFELPM_KL_CFG2(16'h0100),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h8000),
    .RXDFE_GC_CFG2(16'hFFE0),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0002),
    .RXDFE_H3_CFG0(16'h0000),
    .RXDFE_H3_CFG1(16'h8002),
    .RXDFE_H4_CFG0(16'h0000),
    .RXDFE_H4_CFG1(16'h8002),
    .RXDFE_H5_CFG0(16'h0000),
    .RXDFE_H5_CFG1(16'h8002),
    .RXDFE_H6_CFG0(16'h0000),
    .RXDFE_H6_CFG1(16'h8002),
    .RXDFE_H7_CFG0(16'h0000),
    .RXDFE_H7_CFG1(16'h8002),
    .RXDFE_H8_CFG0(16'h0000),
    .RXDFE_H8_CFG1(16'h8002),
    .RXDFE_H9_CFG0(16'h0000),
    .RXDFE_H9_CFG1(16'h8002),
    .RXDFE_HA_CFG0(16'h0000),
    .RXDFE_HA_CFG1(16'h8002),
    .RXDFE_HB_CFG0(16'h0000),
    .RXDFE_HB_CFG1(16'h8002),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h8002),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h8002),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h8002),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h8002),
    .RXDFE_KH_CFG0(16'h0000),
    .RXDFE_KH_CFG1(16'h8000),
    .RXDFE_KH_CFG2(16'h2613),
    .RXDFE_KH_CFG3(16'h411C),
    .RXDFE_OS_CFG0(16'h0000),
    .RXDFE_OS_CFG1(16'h8002),
    .RXDFE_PWR_SAVING(1'b1),
    .RXDFE_UT_CFG0(16'h0000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_UT_CFG2(16'h0000),
    .RXDFE_VP_CFG0(16'h0000),
    .RXDFE_VP_CFG1(16'h8033),
    .RXDLY_CFG(16'h0010),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("SIGCFG_4"),
    .RXGBOX_FIFO_INIT_RD_ADDR(4),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'h8000),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'h0002),
    .RXLPM_OS_CFG0(16'h0000),
    .RXLPM_OS_CFG1(16'h8002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(4),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2070),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h9933),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_AUTO_BW_SEL_BYPASS(1'b0),
    .RXPI_CFG0(16'h1300),
    .RXPI_CFG1(16'b0000000011111101),
    .RXPI_LPM(1'b0),
    .RXPI_SEL_LC(2'b00),
    .RXPI_STARTCODE(2'b00),
    .RXPI_VREFSEL(1'b0),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXREFCLKDIV2_SEL(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b0),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b1),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h1554),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(7),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(3),
    .RX_CM_TRIM(10),
    .RX_CTLE3_LPF(8'b11111111),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DEGEN_CTRL(3'b011),
    .RX_DFELPM_CFG0(6),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG0(2'b10),
    .RX_DFE_AGC_CFG1(4),
    .RX_DFE_KL_LPM_KH_CFG0(1),
    .RX_DFE_KL_LPM_KH_CFG1(4),
    .RX_DFE_KL_LPM_KL_CFG0(2'b01),
    .RX_DFE_KL_LPM_KL_CFG1(4),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIV2_MODE_B(1'b0),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_CTLE_RCAL_B(1'b0),
    .RX_EN_HI_LR(1'b1),
    .RX_EXT_RL_CTRL(9'b000000000),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b00),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_INT_DATAWIDTH(0),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PMA_RSV0(16'h0000),
    .RX_PROGDIV_CFG(0.000000),
    .RX_PROGDIV_RATE(16'h0001),
    .RX_RESLOAD_CTRL(4'b0000),
    .RX_RESLOAD_OVRD(1'b0),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(11),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0100),
    .RX_SUM_RESLOAD_CTRL(4'b0011),
    .RX_SUM_VCMTUNE(4'b0110),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b100),
    .RX_TUNE_AFE_OS(2'b00),
    .RX_VREG_CTRL(3'b101),
    .RX_VREG_PDB(1'b1),
    .RX_WIDEMODE_CDR(2'b00),
    .RX_WIDEMODE_CDR_GEN3(2'b00),
    .RX_WIDEMODE_CDR_GEN4(2'b01),
    .RX_XCLK_SEL("RXUSR"),
    .RX_XMODE_SEL(1'b0),
    .SAMPLE_CLK_PHASE(1'b0),
    .SAS_12G_MODE(1'b0),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_DEVICE("ULTRASCALE_PLUS"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("Z"),
    .SRSTMODE(1'b0),
    .TAPDLY_SET_TX(2'h0),
    .TEMPERATURE_PAR(4'b0010),
    .TERM_RCAL_CFG(15'b100001000010001),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("TRUE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h8010),
    .TXDLY_LCFG(16'h0030),
    .TXDRVBIAS_N(4'b1010),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(4),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h6070),
    .TXPHDLY_CFG1(16'h000F),
    .TXPH_CFG(16'h0723),
    .TXPH_CFG2(16'h0000),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG(16'h03DF),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b1),
    .TXPI_CFG4(1'b1),
    .TXPI_CFG5(3'b000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_LPM(1'b0),
    .TXPI_PPM(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPI_VREFSEL(1'b0),
    .TXPMARESET_TIME(5'b00011),
    .TXREFCLKDIV2_SEL(1'b0),
    .TXSYNC_MULTILANE(1'b0),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(7),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DCC_LOOP_RST_CFG(16'h0004),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DEEMPH2(6'b000000),
    .TX_DEEMPH3(6'b000000),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_DRVMUX_CTRL(2),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_FIFO_BYP_EN(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1011111),
    .TX_MARGIN_FULL_1(7'b1011110),
    .TX_MARGIN_FULL_2(7'b1011100),
    .TX_MARGIN_FULL_3(7'b1011010),
    .TX_MARGIN_FULL_4(7'b1011000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000101),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PHICAL_CFG0(16'h0000),
    .TX_PHICAL_CFG1(16'h7E00),
    .TX_PHICAL_CFG2(16'h0201),
    .TX_PI_BIASSET(0),
    .TX_PI_IBIAS_MID(2'b00),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PMA_RSV0(16'h0008),
    .TX_PREDRV_CTRL(2),
    .TX_PROGCLK_SEL("CPLL"),
    .TX_PROGDIV_CFG(20.000000),
    .TX_PROGDIV_RATE(16'h0001),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(4),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SARC_LPBK_ENB(1'b0),
    .TX_SW_MEAS(2'b00),
    .TX_VREG_CTRL(3'b000),
    .TX_VREG_PDB(1'b0),
    .TX_VREG_VREFSEL(2'b00),
    .TX_XCLK_SEL("TXOUT"),
    .USB_BOTH_BURST_IDLE(1'b0),
    .USB_BURSTMAX_U3WAKE(7'b1111111),
    .USB_BURSTMIN_U3WAKE(7'b1100011),
    .USB_CLK_COR_EQ_EN(1'b0),
    .USB_EXT_CNTL(1'b1),
    .USB_IDLEMAX_POLLING(10'b1010111011),
    .USB_IDLEMIN_POLLING(10'b0100101011),
    .USB_LFPSPING_BURST(9'b000000101),
    .USB_LFPSPOLLING_BURST(9'b000110001),
    .USB_LFPSPOLLING_IDLE_MS(9'b000000100),
    .USB_LFPSU1EXIT_BURST(9'b000011101),
    .USB_LFPSU2LPEXIT_BURST_MS(9'b001100011),
    .USB_LFPSU3WAKE_BURST_MS(9'b111110011),
    .USB_LFPS_TPERIOD(4'b0011),
    .USB_LFPS_TPERIOD_ACCURATE(1'b1),
    .USB_MODE(1'b0),
    .USB_PCIE_ERR_REP_DIS(1'b0),
    .USB_PING_SATA_MAX_INIT(21),
    .USB_PING_SATA_MIN_INIT(12),
    .USB_POLL_SATA_MAX_BURST(8),
    .USB_POLL_SATA_MIN_BURST(4),
    .USB_RAW_ELEC(1'b0),
    .USB_RXIDLE_P0_CTRL(1'b1),
    .USB_TXIDLE_TUNE_ENABLE(1'b1),
    .USB_U1_SATA_MAX_WAKE(7),
    .USB_U1_SATA_MIN_WAKE(4),
    .USB_U2_SAS_MAX_COM(64),
    .USB_U2_SAS_MIN_COM(36),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .Y_ALL_MODE(1'b0)) 
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST 
       (.BUFGTCE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_0 ),
        .BUFGTCEMASK({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_317 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_318 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_319 }),
        .BUFGTDIV({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_372 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_373 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_374 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_375 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_376 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_377 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_378 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_379 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_380 }),
        .BUFGTRESET(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_1 ),
        .BUFGTRSTMASK({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_320 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_321 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_322 }),
        .CDRSTEPDIR(1'b0),
        .CDRSTEPSQ(1'b0),
        .CDRSTEPSX(1'b0),
        .CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_2 ),
        .CPLLFREQLOCK(1'b0),
        .CPLLLOCK(in0),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b1),
        .CPLLPD(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_2 ),
        .CPLLREFCLKLOST(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_4 ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_3 ),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_207 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_208 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_209 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_210 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_211 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_212 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_213 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_214 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_215 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_216 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_217 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_218 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_219 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_220 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_221 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_222 }),
        .DMONITOROUTCLK(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_5 ),
        .DRPADDR({1'b0,1'b0,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_5 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_5 [5]}),
        .DRPCLK(drpclk_in),
        .DRPDI(Q),
        .DRPDO(D),
        .DRPEN(DEN_O),
        .DRPRDY(\gen_gtwizard_gthe4.drprdy_int ),
        .DRPRST(1'b0),
        .DRPWE(DWE_O),
        .EYESCANDATAERROR(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_7 ),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .FREQOS(1'b0),
        .GTGREFCLK(1'b0),
        .GTHRXN(gthrxn_in),
        .GTHRXP(gthrxp_in),
        .GTHTXN(gthtxn_out),
        .GTHTXP(gthtxp_out),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTPOWERGOOD(\gen_gtwizard_gthe4.gtpowergood_int ),
        .GTREFCLK0(gtrefclk0_in),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_11 ),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(\gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int ),
        .GTRXRESETSEL(1'b0),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(\gen_gtwizard_gthe4.gttxreset_int ),
        .GTTXRESETSEL(1'b0),
        .INCPCTRL(1'b0),
        .LOOPBACK({1'b0,1'b0,1'b0}),
        .PCIEEQRXEQADAPTDONE(1'b0),
        .PCIERATEGEN3(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_12 ),
        .PCIERATEIDLE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_13 ),
        .PCIERATEQPLLPD({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_303 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_304 }),
        .PCIERATEQPLLRESET({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_305 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_306 }),
        .PCIERSTIDLE(1'b0),
        .PCIERSTTXSYNCSTART(1'b0),
        .PCIESYNCTXSYNCDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_14 ),
        .PCIEUSERGEN3RDY(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_15 ),
        .PCIEUSERPHYSTATUSRST(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_16 ),
        .PCIEUSERRATEDONE(1'b0),
        .PCIEUSERRATESTART(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_17 ),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_239 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_240 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_241 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_242 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_243 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_244 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_245 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_246 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_247 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_248 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_249 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_250 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_251 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_252 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_253 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_254 }),
        .PHYSTATUS(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_18 ),
        .PINRSRVDAS({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_255 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_256 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_257 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_258 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_259 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_260 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_261 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_262 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_263 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_264 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_265 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_266 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_267 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_268 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_269 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_270 }),
        .POWERPRESENT(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_19 ),
        .QPLL0CLK(1'b0),
        .QPLL0FREQLOCK(1'b0),
        .QPLL0REFCLK(1'b0),
        .QPLL1CLK(1'b0),
        .QPLL1FREQLOCK(1'b0),
        .QPLL1REFCLK(1'b0),
        .RESETEXCEPTION(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_20 ),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b1),
        .RXAFECFOKEN(1'b1),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_323 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_324 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_325 }),
        .RXBYTEISALIGNED(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_21 ),
        .RXBYTEREALIGN(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_22 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(rxcdrlock_out),
        .RXCDROVRDEN(1'b0),
        .RXCDRPHDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_24 ),
        .RXCDRRESET(1'b0),
        .RXCHANBONDSEQ(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_25 ),
        .RXCHANISALIGNED(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_26 ),
        .RXCHANREALIGN(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_27 ),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_329 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_330 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_331 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_332 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_333 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCKCALDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_28 ),
        .RXCKCALRESET(1'b0),
        .RXCKCALSTART({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCLKCORCNT({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_307 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_308 }),
        .RXCOMINITDET(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_29 ),
        .RXCOMMADET(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_30 ),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_31 ),
        .RXCOMWAKEDET(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_32 ),
        .RXCTRL0({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_271 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_272 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_273 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_274 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_275 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_276 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_277 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_278 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_279 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_280 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_281 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_282 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_283 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_284 ,rxctrl0_out}),
        .RXCTRL1({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_287 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_288 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_289 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_290 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_291 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_292 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_293 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_294 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_295 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_296 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_297 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_298 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_299 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_300 ,rxctrl1_out}),
        .RXCTRL2({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_340 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_341 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_342 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_343 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_344 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_345 ,rxctrl2_out}),
        .RXCTRL3({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_348 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_349 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_350 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_351 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_352 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_353 ,rxctrl3_out}),
        .RXDATA({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_79 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_80 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_81 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_82 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_83 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_84 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_85 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_86 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_87 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_88 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_89 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_90 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_91 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_92 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_93 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_94 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_95 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_96 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_97 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_98 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_99 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_100 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_101 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_102 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_103 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_104 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_105 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_106 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_107 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_108 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_109 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_110 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_111 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_112 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_113 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_114 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_115 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_116 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_117 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_118 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_119 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_120 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_121 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_122 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_123 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_124 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_125 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_126 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_127 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_128 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_129 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_130 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_131 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_132 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_133 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_134 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_135 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_136 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_137 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_138 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_139 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_140 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_141 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_142 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_143 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_144 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_145 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_146 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_147 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_148 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_149 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_150 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_151 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_152 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_153 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_154 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_155 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_156 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_157 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_158 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_159 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_160 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_161 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_162 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_163 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_164 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_165 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_166 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_167 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_168 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_169 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_170 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_171 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_172 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_173 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_174 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_175 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_176 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_177 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_178 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_179 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_180 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_181 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_182 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_183 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_184 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_185 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_186 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_187 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_188 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_189 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_190 ,gtwiz_userdata_rx_out}),
        .RXDATAEXTENDRSVD({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_356 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_357 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_358 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_359 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_360 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_361 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_362 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_363 }),
        .RXDATAVALID({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_309 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_310 }),
        .RXDFEAGCCTRL({1'b0,1'b1}),
        .RXDFEAGCHOLD(1'b0),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECFOKFCNUM({1'b1,1'b1,1'b0,1'b1}),
        .RXDFECFOKFEN(1'b0),
        .RXDFECFOKFPULSE(1'b0),
        .RXDFECFOKHOLD(1'b0),
        .RXDFECFOKOVREN(1'b0),
        .RXDFEKHHOLD(1'b0),
        .RXDFEKHOVRDEN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(1'b0),
        .RXDFETAP10HOLD(1'b0),
        .RXDFETAP10OVRDEN(1'b0),
        .RXDFETAP11HOLD(1'b0),
        .RXDFETAP11OVRDEN(1'b0),
        .RXDFETAP12HOLD(1'b0),
        .RXDFETAP12OVRDEN(1'b0),
        .RXDFETAP13HOLD(1'b0),
        .RXDFETAP13OVRDEN(1'b0),
        .RXDFETAP14HOLD(1'b0),
        .RXDFETAP14OVRDEN(1'b0),
        .RXDFETAP15HOLD(1'b0),
        .RXDFETAP15OVRDEN(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFETAP8HOLD(1'b0),
        .RXDFETAP8OVRDEN(1'b0),
        .RXDFETAP9HOLD(1'b0),
        .RXDFETAP9OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDLYBYPASS(1'b0),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(\gen_gtwizard_gthe4.rxdlysreset_int ),
        .RXDLYSRESETDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_33 ),
        .RXELECIDLE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_34 ),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXEQTRAINING(1'b0),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_334 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_335 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_336 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_337 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_338 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_339 }),
        .RXHEADERVALID({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_311 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_312 }),
        .RXLATCLK(1'b0),
        .RXLFPSTRESETDET(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_35 ),
        .RXLFPSU2LPEXITDET(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_36 ),
        .RXLFPSU3WAKEDET(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_37 ),
        .RXLPMEN(1'b1),
        .RXLPMGCHOLD(1'b0),
        .RXLPMGCOVRDEN(1'b0),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXLPMOSHOLD(1'b0),
        .RXLPMOSOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(rxmcommaalignen_in),
        .RXMONITOROUT({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_364 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_365 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_366 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_367 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_368 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_369 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_370 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_371 }),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_38 ),
        .RXOSINTSTARTED(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_39 ),
        .RXOSINTSTROBEDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_40 ),
        .RXOSINTSTROBESTARTED(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_41 ),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(rxoutclk_out),
        .RXOUTCLKFABRIC(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_43 ),
        .RXOUTCLKPCS(rxoutclkpcs_out),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(rxmcommaalignen_in),
        .RXPCSRESET(1'b0),
        .RXPD({RXPD,RXPD}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(rxphaligndone_out),
        .RXPHALIGNEN(1'b0),
        .RXPHALIGNERR(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_46 ),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHOVRDEN(1'b0),
        .RXPLLCLKSEL({1'b0,1'b0}),
        .RXPMARESET(1'b0),
        .RXPMARESETDONE(gtwiz_userclk_rx_active_out),
        .RXPOLARITY(1'b0),
        .RXPRBSCNTRESET(1'b0),
        .RXPRBSERR(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_48 ),
        .RXPRBSLOCKED(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_49 ),
        .RXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .RXPRGDIVRESETDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_50 ),
        .RXPROGDIVRESET(\gen_gtwizard_gthe4.rxprogdivreset_int ),
        .RXQPIEN(1'b0),
        .RXQPISENN(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_51 ),
        .RXQPISENP(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_52 ),
        .RXRATE({1'b0,1'b0,RXRATE}),
        .RXRATEDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_53 ),
        .RXRATEMODE(RXRATE),
        .RXRECCLKOUT(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_54 ),
        .RXRESETDONE(rxresetdone_out),
        .RXSLIDE(1'b0),
        .RXSLIDERDY(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_56 ),
        .RXSLIPDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_57 ),
        .RXSLIPOUTCLK(1'b0),
        .RXSLIPOUTCLKRDY(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_58 ),
        .RXSLIPPMA(1'b0),
        .RXSLIPPMARDY(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_59 ),
        .RXSTARTOFSEQ({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_313 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_314 }),
        .RXSTATUS({\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_326 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_327 ,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_328 }),
        .RXSYNCALLIN(rxphaligndone_out),
        .RXSYNCDONE(rxsyncdone_out),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b1),
        .RXSYNCOUT(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_61 ),
        .RXSYSCLKSEL({1'b0,1'b0}),
        .RXTERMINATION(1'b0),
        .RXUSERRDY(\gen_gtwizard_gthe4.rxuserrdy_int ),
        .RXUSRCLK(rxusrclk_in),
        .RXUSRCLK2(rxusrclk_in),
        .RXVALID(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_62 ),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b1),
        .TXBUFSTATUS({txbufstatus_out,\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_316 }),
        .TXCOMFINISH(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_63 ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXCTRL0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl0_in}),
        .TXCTRL1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl1_in}),
        .TXCTRL2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl2_in}),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gtwiz_userdata_tx_in}),
        .TXDATAEXTENDRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDCCDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_64 ),
        .TXDCCFORCESTART(1'b0),
        .TXDCCRESET(1'b0),
        .TXDEEMPH({1'b0,1'b0}),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL({1'b1,1'b1,1'b0,1'b0,1'b0}),
        .TXDLYBYPASS(1'b1),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(1'b0),
        .TXDLYSRESETDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_65 ),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(txelecidle_in),
        .TXHEADER({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXINHIBIT(1'b0),
        .TXLATCLK(1'b0),
        .TXLFPSTRESET(1'b0),
        .TXLFPSU2LPEXIT(1'b0),
        .TXLFPSU3WAKE(1'b0),
        .TXMAINCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXMUXDCDEXHOLD(1'b0),
        .TXMUXDCDORWREN(1'b0),
        .TXONESZEROS(1'b0),
        .TXOUTCLK(txoutclk_out),
        .TXOUTCLKFABRIC(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_67 ),
        .TXOUTCLKPCS(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_68 ),
        .TXOUTCLKSEL(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_4 ),
        .TXPCSRESET(1'b0),
        .TXPD({txelecidle_in,txelecidle_in}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(1'b0),
        .TXPHALIGNDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_69 ),
        .TXPHALIGNEN(1'b0),
        .TXPHDLYPD(1'b1),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(1'b0),
        .TXPHINITDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_70 ),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b0),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(1'b0),
        .TXPLLCLKSEL({1'b0,1'b0}),
        .TXPMARESET(1'b0),
        .TXPMARESETDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_71 ),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .TXPRECURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRGDIVRESETDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_0 ),
        .TXPROGDIVRESET(\gen_gtwizard_gthe4.txprogdivreset_ch_int ),
        .TXQPIBIASEN(1'b0),
        .TXQPISENN(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_73 ),
        .TXQPISENP(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_74 ),
        .TXQPIWEAKPUP(1'b0),
        .TXRATE({1'b0,1'b0,1'b0}),
        .TXRATEDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_75 ),
        .TXRATEMODE(1'b0),
        .TXRESETDONE(txresetdone_out),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_77 ),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(\gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_n_78 ),
        .TXSYSCLKSEL({1'b0,1'b0}),
        .TXUSERRDY(\gen_gtwizard_gthe4.txuserrdy_int ),
        .TXUSRCLK(txusrclk_in),
        .TXUSRCLK2(txusrclk_in));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal
   (\gen_gtwizard_gthe4.txprogdivreset_ch_int ,
    cpllpd_int_reg,
    cpllreset_int_reg,
    USER_CPLLLOCK_OUT_reg,
    rst_in0,
    Q,
    DEN_O,
    DWE_O,
    DADDR_O,
    DI_O,
    in0,
    i_in_meta_reg,
    i_in_meta_reg_0,
    txoutclk_out,
    drpclk_in,
    RESET_IN,
    DO_I,
    \gen_gtwizard_gthe4.drprdy_int ,
    lopt,
    lopt_1);
  output \gen_gtwizard_gthe4.txprogdivreset_ch_int ;
  output cpllpd_int_reg;
  output cpllreset_int_reg;
  output USER_CPLLLOCK_OUT_reg;
  output rst_in0;
  output [2:0]Q;
  output DEN_O;
  output DWE_O;
  output [6:0]DADDR_O;
  output [15:0]DI_O;
  input in0;
  input i_in_meta_reg;
  input i_in_meta_reg_0;
  input [0:0]txoutclk_out;
  input [0:0]drpclk_in;
  input RESET_IN;
  input [15:0]DO_I;
  input \gen_gtwizard_gthe4.drprdy_int ;
  input lopt;
  input lopt_1;

  wire [6:0]DADDR_O;
  wire DEN_O;
  wire [15:0]DI_O;
  wire [15:0]DO_I;
  wire DWE_O;
  wire [2:0]Q;
  wire RESET_IN;
  wire USER_CPLLLOCK_OUT_reg;
  wire [17:1]\U_TXOUTCLK_FREQ_COUNTER/testclk_cnt_reg ;
  wire [15:0]cal_on_tx_dout;
  wire cal_on_tx_drdy;
  wire [7:1]cal_on_tx_drpaddr_out;
  wire [15:0]cal_on_tx_drpdi_out;
  wire cal_on_tx_drpen_out;
  wire cal_on_tx_drpwe_out;
  wire cal_on_tx_reset_in_sync;
  wire cpllpd_int_reg;
  wire cpllreset_int_reg;
  wire [0:0]drpclk_in;
  wire drprst_in_sync;
  wire \gen_gtwizard_gthe4.drprdy_int ;
  wire \gen_gtwizard_gthe4.txprogdivreset_ch_int ;
  wire gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_tx_i_n_24;
  wire \i_/i_/i__carry__0_n_0 ;
  wire \i_/i_/i__carry__0_n_1 ;
  wire \i_/i_/i__carry__0_n_10 ;
  wire \i_/i_/i__carry__0_n_11 ;
  wire \i_/i_/i__carry__0_n_12 ;
  wire \i_/i_/i__carry__0_n_13 ;
  wire \i_/i_/i__carry__0_n_14 ;
  wire \i_/i_/i__carry__0_n_15 ;
  wire \i_/i_/i__carry__0_n_2 ;
  wire \i_/i_/i__carry__0_n_3 ;
  wire \i_/i_/i__carry__0_n_4 ;
  wire \i_/i_/i__carry__0_n_5 ;
  wire \i_/i_/i__carry__0_n_6 ;
  wire \i_/i_/i__carry__0_n_7 ;
  wire \i_/i_/i__carry__0_n_8 ;
  wire \i_/i_/i__carry__0_n_9 ;
  wire \i_/i_/i__carry__1_n_14 ;
  wire \i_/i_/i__carry__1_n_15 ;
  wire \i_/i_/i__carry__1_n_7 ;
  wire \i_/i_/i__carry_n_0 ;
  wire \i_/i_/i__carry_n_1 ;
  wire \i_/i_/i__carry_n_10 ;
  wire \i_/i_/i__carry_n_11 ;
  wire \i_/i_/i__carry_n_12 ;
  wire \i_/i_/i__carry_n_13 ;
  wire \i_/i_/i__carry_n_14 ;
  wire \i_/i_/i__carry_n_15 ;
  wire \i_/i_/i__carry_n_2 ;
  wire \i_/i_/i__carry_n_3 ;
  wire \i_/i_/i__carry_n_4 ;
  wire \i_/i_/i__carry_n_5 ;
  wire \i_/i_/i__carry_n_6 ;
  wire \i_/i_/i__carry_n_7 ;
  wire \i_/i_/i__carry_n_8 ;
  wire \i_/i_/i__carry_n_9 ;
  wire i_in_meta_reg;
  wire i_in_meta_reg_0;
  wire in0;
  wire lopt;
  wire lopt_1;
  wire rst_in0;
  wire [0:0]txoutclk_out;
  wire [7:1]\NLW_i_/i_/i__carry__1_CO_UNCONNECTED ;
  wire [7:2]\NLW_i_/i_/i__carry__1_O_UNCONNECTED ;

  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_35 bit_synchronizer_drprst_inst
       (.drpclk_in(drpclk_in),
        .drprst_in_sync(drprst_in_sync));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gte4_drp_arb gtwizard_ultrascale_v1_7_17_gte4_drp_arb_i
       (.DADDR_O(DADDR_O),
        .DEN_O(DEN_O),
        .DI_O(DI_O),
        .DO_I(DO_I),
        .DWE_O(DWE_O),
        .Q(cal_on_tx_dout),
        .\addr_i_reg[27]_0 (cal_on_tx_drpaddr_out),
        .cal_on_tx_drdy(cal_on_tx_drdy),
        .cal_on_tx_drpen_out(cal_on_tx_drpen_out),
        .cal_on_tx_drpwe_out(cal_on_tx_drpwe_out),
        .\data_i_reg[47]_0 (cal_on_tx_drpdi_out),
        .drpclk_in(drpclk_in),
        .drprst_in_sync(drprst_in_sync),
        .\gen_gtwizard_gthe4.drprdy_int (\gen_gtwizard_gthe4.drprdy_int ));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_tx gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_tx_i
       (.D(\U_TXOUTCLK_FREQ_COUNTER/testclk_cnt_reg ),
        .O({\i_/i_/i__carry_n_8 ,\i_/i_/i__carry_n_9 ,\i_/i_/i__carry_n_10 ,\i_/i_/i__carry_n_11 ,\i_/i_/i__carry_n_12 ,\i_/i_/i__carry_n_13 ,\i_/i_/i__carry_n_14 ,\i_/i_/i__carry_n_15 }),
        .Q(cal_on_tx_dout),
        .S(gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_tx_i_n_24),
        .USER_CPLLLOCK_OUT_reg_0(USER_CPLLLOCK_OUT_reg),
        .cal_on_tx_drdy(cal_on_tx_drdy),
        .cal_on_tx_drpen_out(cal_on_tx_drpen_out),
        .cal_on_tx_drpwe_out(cal_on_tx_drpwe_out),
        .cal_on_tx_reset_in_sync(cal_on_tx_reset_in_sync),
        .cpllpd_int_reg_0(cpllpd_int_reg),
        .cpllreset_int_reg_0(cpllreset_int_reg),
        .\daddr_reg[7]_0 (cal_on_tx_drpaddr_out),
        .\di_reg[15]_0 (cal_on_tx_drpdi_out),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gthe4.txprogdivreset_ch_int (\gen_gtwizard_gthe4.txprogdivreset_ch_int ),
        .i_in_meta_reg(i_in_meta_reg),
        .i_in_meta_reg_0(i_in_meta_reg_0),
        .in0(in0),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .\non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[2]_0 (Q),
        .rst_in0(rst_in0),
        .\testclk_cnt_reg[15] ({\i_/i_/i__carry__0_n_8 ,\i_/i_/i__carry__0_n_9 ,\i_/i_/i__carry__0_n_10 ,\i_/i_/i__carry__0_n_11 ,\i_/i_/i__carry__0_n_12 ,\i_/i_/i__carry__0_n_13 ,\i_/i_/i__carry__0_n_14 ,\i_/i_/i__carry__0_n_15 }),
        .\testclk_cnt_reg[17] ({\i_/i_/i__carry__1_n_14 ,\i_/i_/i__carry__1_n_15 }),
        .txoutclk_out(txoutclk_out));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \i_/i_/i__carry 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\i_/i_/i__carry_n_0 ,\i_/i_/i__carry_n_1 ,\i_/i_/i__carry_n_2 ,\i_/i_/i__carry_n_3 ,\i_/i_/i__carry_n_4 ,\i_/i_/i__carry_n_5 ,\i_/i_/i__carry_n_6 ,\i_/i_/i__carry_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\i_/i_/i__carry_n_8 ,\i_/i_/i__carry_n_9 ,\i_/i_/i__carry_n_10 ,\i_/i_/i__carry_n_11 ,\i_/i_/i__carry_n_12 ,\i_/i_/i__carry_n_13 ,\i_/i_/i__carry_n_14 ,\i_/i_/i__carry_n_15 }),
        .S({\U_TXOUTCLK_FREQ_COUNTER/testclk_cnt_reg [7:1],gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_tx_i_n_24}));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \i_/i_/i__carry__0 
       (.CI(\i_/i_/i__carry_n_0 ),
        .CI_TOP(1'b0),
        .CO({\i_/i_/i__carry__0_n_0 ,\i_/i_/i__carry__0_n_1 ,\i_/i_/i__carry__0_n_2 ,\i_/i_/i__carry__0_n_3 ,\i_/i_/i__carry__0_n_4 ,\i_/i_/i__carry__0_n_5 ,\i_/i_/i__carry__0_n_6 ,\i_/i_/i__carry__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\i_/i_/i__carry__0_n_8 ,\i_/i_/i__carry__0_n_9 ,\i_/i_/i__carry__0_n_10 ,\i_/i_/i__carry__0_n_11 ,\i_/i_/i__carry__0_n_12 ,\i_/i_/i__carry__0_n_13 ,\i_/i_/i__carry__0_n_14 ,\i_/i_/i__carry__0_n_15 }),
        .S(\U_TXOUTCLK_FREQ_COUNTER/testclk_cnt_reg [15:8]));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \i_/i_/i__carry__1 
       (.CI(\i_/i_/i__carry__0_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_i_/i_/i__carry__1_CO_UNCONNECTED [7:1],\i_/i_/i__carry__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_i_/i_/i__carry__1_O_UNCONNECTED [7:2],\i_/i_/i__carry__1_n_14 ,\i_/i_/i__carry__1_n_15 }),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\U_TXOUTCLK_FREQ_COUNTER/testclk_cnt_reg [17:16]}));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_36 reset_synchronizer_resetin_rx_inst
       (.drpclk_in(drpclk_in));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_37 reset_synchronizer_resetin_tx_inst
       (.RESET_IN(RESET_IN),
        .cal_on_tx_reset_in_sync(cal_on_tx_reset_in_sync),
        .drpclk_in(drpclk_in));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_freq_counter" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_freq_counter
   (done_o_reg_0,
    D,
    rst_in_out_reg,
    rst_in_out_reg_0,
    S,
    done_o_reg_1,
    DI,
    \freq_cnt_o_reg[16]_0 ,
    \freq_cnt_o_reg[15]_0 ,
    \freq_cnt_o_reg[14]_0 ,
    \freq_cnt_o_reg[0]_0 ,
    \freq_cnt_o_reg[17]_0 ,
    \freq_cnt_o_reg[16]_1 ,
    drpclk_in,
    \state_reg[1]_0 ,
    txoutclkmon,
    O,
    \testclk_cnt_reg[15]_0 ,
    \testclk_cnt_reg[17]_0 ,
    cal_on_tx_reset_in_sync,
    \repeat_ctr_reg[3] ,
    CO,
    \repeat_ctr_reg[3]_0 ,
    Q,
    cal_fail_store_reg,
    cal_fail_store__0,
    \cpll_cal_state_reg[21] ,
    cal_fail_store_reg_0,
    cal_fail_store_reg_1,
    \cpll_cal_state_reg[13] ,
    \cpll_cal_state_reg[13]_0 ,
    \cpll_cal_state_reg[13]_1 ,
    \cpll_cal_state_reg[13]_2 );
  output done_o_reg_0;
  output [16:0]D;
  output rst_in_out_reg;
  output rst_in_out_reg_0;
  output [0:0]S;
  output [1:0]done_o_reg_1;
  output [5:0]DI;
  output [7:0]\freq_cnt_o_reg[16]_0 ;
  output [6:0]\freq_cnt_o_reg[15]_0 ;
  output [7:0]\freq_cnt_o_reg[14]_0 ;
  output \freq_cnt_o_reg[0]_0 ;
  output [0:0]\freq_cnt_o_reg[17]_0 ;
  output [0:0]\freq_cnt_o_reg[16]_1 ;
  input [0:0]drpclk_in;
  input \state_reg[1]_0 ;
  input txoutclkmon;
  input [7:0]O;
  input [7:0]\testclk_cnt_reg[15]_0 ;
  input [1:0]\testclk_cnt_reg[17]_0 ;
  input cal_on_tx_reset_in_sync;
  input \repeat_ctr_reg[3] ;
  input [0:0]CO;
  input [0:0]\repeat_ctr_reg[3]_0 ;
  input [5:0]Q;
  input cal_fail_store_reg;
  input cal_fail_store__0;
  input [0:0]\cpll_cal_state_reg[21] ;
  input cal_fail_store_reg_0;
  input cal_fail_store_reg_1;
  input \cpll_cal_state_reg[13] ;
  input \cpll_cal_state_reg[13]_0 ;
  input \cpll_cal_state_reg[13]_1 ;
  input \cpll_cal_state_reg[13]_2 ;

  wire [0:0]CO;
  wire [16:0]D;
  wire [5:0]DI;
  wire [7:0]O;
  wire [5:0]Q;
  wire [0:0]S;
  wire cal_fail_store__0;
  wire cal_fail_store_i_2_n_0;
  wire cal_fail_store_i_3_n_0;
  wire cal_fail_store_reg;
  wire cal_fail_store_reg_0;
  wire cal_fail_store_reg_1;
  wire cal_on_tx_reset_in_sync;
  wire clear;
  wire \cpll_cal_state[21]_i_2_n_0 ;
  wire \cpll_cal_state_reg[13] ;
  wire \cpll_cal_state_reg[13]_0 ;
  wire \cpll_cal_state_reg[13]_1 ;
  wire \cpll_cal_state_reg[13]_2 ;
  wire [0:0]\cpll_cal_state_reg[21] ;
  wire done_o_reg_0;
  wire [1:0]done_o_reg_1;
  wire [0:0]drpclk_in;
  wire \freq_cnt_o[17]_i_1_n_0 ;
  wire \freq_cnt_o_reg[0]_0 ;
  wire [7:0]\freq_cnt_o_reg[14]_0 ;
  wire [6:0]\freq_cnt_o_reg[15]_0 ;
  wire [7:0]\freq_cnt_o_reg[16]_0 ;
  wire [0:0]\freq_cnt_o_reg[16]_1 ;
  wire [0:0]\freq_cnt_o_reg[17]_0 ;
  wire \freq_cnt_o_reg_n_0_[0] ;
  wire \freq_cnt_o_reg_n_0_[10] ;
  wire \freq_cnt_o_reg_n_0_[12] ;
  wire \freq_cnt_o_reg_n_0_[13] ;
  wire \freq_cnt_o_reg_n_0_[14] ;
  wire \freq_cnt_o_reg_n_0_[15] ;
  wire \freq_cnt_o_reg_n_0_[16] ;
  wire \freq_cnt_o_reg_n_0_[17] ;
  wire \freq_cnt_o_reg_n_0_[1] ;
  wire \freq_cnt_o_reg_n_0_[2] ;
  wire \freq_cnt_o_reg_n_0_[3] ;
  wire \freq_cnt_o_reg_n_0_[4] ;
  wire \freq_cnt_o_reg_n_0_[5] ;
  wire \freq_cnt_o_reg_n_0_[6] ;
  wire \freq_cnt_o_reg_n_0_[7] ;
  wire \freq_cnt_o_reg_n_0_[8] ;
  wire \freq_cnt_o_reg_n_0_[9] ;
  wire \hold_clk[2]_i_1_n_0 ;
  wire \hold_clk[5]_i_1_n_0 ;
  wire [5:0]hold_clk_reg;
  wire [5:0]p_0_in__0;
  wire [15:1]p_0_in__1;
  wire p_1_in;
  wire refclk_cnt0_carry__0_n_2;
  wire refclk_cnt0_carry__0_n_3;
  wire refclk_cnt0_carry__0_n_4;
  wire refclk_cnt0_carry__0_n_5;
  wire refclk_cnt0_carry__0_n_6;
  wire refclk_cnt0_carry__0_n_7;
  wire refclk_cnt0_carry_n_0;
  wire refclk_cnt0_carry_n_1;
  wire refclk_cnt0_carry_n_2;
  wire refclk_cnt0_carry_n_3;
  wire refclk_cnt0_carry_n_4;
  wire refclk_cnt0_carry_n_5;
  wire refclk_cnt0_carry_n_6;
  wire refclk_cnt0_carry_n_7;
  wire \refclk_cnt[0]_i_1_n_0 ;
  wire [15:0]refclk_cnt_reg;
  wire \repeat_ctr[3]_i_4_n_0 ;
  wire \repeat_ctr_reg[3] ;
  wire [0:0]\repeat_ctr_reg[3]_0 ;
  wire rst_in_out;
  wire rst_in_out_reg;
  wire rst_in_out_reg_0;
  wire \state[0]_i_1_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire \state[1]_i_2_n_0 ;
  wire \state[2]_i_1_n_0 ;
  wire \state[2]_i_2_n_0 ;
  wire \state[2]_i_3_n_0 ;
  wire \state[2]_i_4_n_0 ;
  wire \state[2]_i_5_n_0 ;
  wire \state[3]_i_1_n_0 ;
  wire \state[3]_i_2_n_0 ;
  wire \state[4]_i_1_n_0 ;
  wire \state_reg[1]_0 ;
  wire \state_reg_n_0_[2] ;
  wire \state_reg_n_0_[4] ;
  wire testclk_cnt0_n_0;
  wire [0:0]testclk_cnt_reg;
  wire [7:0]\testclk_cnt_reg[15]_0 ;
  wire [1:0]\testclk_cnt_reg[17]_0 ;
  wire [3:0]testclk_div4;
  wire testclk_en;
  (* async_reg = "true" *) wire testclk_en_dly1;
  (* async_reg = "true" *) wire testclk_en_dly2;
  wire testclk_rst;
  (* async_reg = "true" *) wire tstclk_rst_dly1;
  (* async_reg = "true" *) wire tstclk_rst_dly2;
  wire txoutclkmon;
  wire [7:6]NLW_refclk_cnt0_carry__0_CO_UNCONNECTED;
  wire [7:7]NLW_refclk_cnt0_carry__0_O_UNCONNECTED;

  LUT6 #(
    .INIT(64'hFFFFDFDF30331010)) 
    cal_fail_store_i_1
       (.I0(cal_fail_store_i_2_n_0),
        .I1(cal_on_tx_reset_in_sync),
        .I2(cal_fail_store_i_3_n_0),
        .I3(cal_fail_store_reg),
        .I4(Q[5]),
        .I5(cal_fail_store__0),
        .O(rst_in_out_reg_0));
  LUT2 #(
    .INIT(4'h8)) 
    cal_fail_store_i_2
       (.I0(CO),
        .I1(\repeat_ctr_reg[3]_0 ),
        .O(cal_fail_store_i_2_n_0));
  LUT6 #(
    .INIT(64'hF222000000000000)) 
    cal_fail_store_i_3
       (.I0(cal_fail_store_reg_0),
        .I1(cal_fail_store_reg_1),
        .I2(CO),
        .I3(\repeat_ctr_reg[3]_0 ),
        .I4(Q[3]),
        .I5(done_o_reg_0),
        .O(cal_fail_store_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cpll_cal_state2_carry_i_1
       (.I0(\freq_cnt_o_reg_n_0_[0] ),
        .I1(\freq_cnt_o_reg_n_0_[1] ),
        .O(\freq_cnt_o_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    cpll_cal_state2_carry_i_10
       (.I0(\freq_cnt_o_reg_n_0_[13] ),
        .I1(\freq_cnt_o_reg_n_0_[12] ),
        .O(\freq_cnt_o_reg[16]_0 [5]));
  LUT2 #(
    .INIT(4'h2)) 
    cpll_cal_state2_carry_i_11
       (.I0(\freq_cnt_o_reg_n_0_[10] ),
        .I1(\freq_cnt_o_reg[15]_0 [4]),
        .O(\freq_cnt_o_reg[16]_0 [4]));
  LUT2 #(
    .INIT(4'h8)) 
    cpll_cal_state2_carry_i_12
       (.I0(\freq_cnt_o_reg_n_0_[9] ),
        .I1(\freq_cnt_o_reg_n_0_[8] ),
        .O(\freq_cnt_o_reg[16]_0 [3]));
  LUT2 #(
    .INIT(4'h2)) 
    cpll_cal_state2_carry_i_13
       (.I0(\freq_cnt_o_reg_n_0_[6] ),
        .I1(\freq_cnt_o_reg_n_0_[7] ),
        .O(\freq_cnt_o_reg[16]_0 [2]));
  LUT2 #(
    .INIT(4'h8)) 
    cpll_cal_state2_carry_i_14
       (.I0(\freq_cnt_o_reg_n_0_[5] ),
        .I1(\freq_cnt_o_reg_n_0_[4] ),
        .O(\freq_cnt_o_reg[16]_0 [1]));
  LUT2 #(
    .INIT(4'h2)) 
    cpll_cal_state2_carry_i_15
       (.I0(\freq_cnt_o_reg_n_0_[2] ),
        .I1(\freq_cnt_o_reg_n_0_[3] ),
        .O(\freq_cnt_o_reg[16]_0 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    cpll_cal_state2_carry_i_2
       (.I0(\freq_cnt_o_reg_n_0_[13] ),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h1)) 
    cpll_cal_state2_carry_i_3
       (.I0(\freq_cnt_o_reg_n_0_[10] ),
        .I1(\freq_cnt_o_reg[15]_0 [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h7)) 
    cpll_cal_state2_carry_i_4
       (.I0(\freq_cnt_o_reg_n_0_[8] ),
        .I1(\freq_cnt_o_reg_n_0_[9] ),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h1)) 
    cpll_cal_state2_carry_i_5
       (.I0(\freq_cnt_o_reg_n_0_[6] ),
        .I1(\freq_cnt_o_reg_n_0_[7] ),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h7)) 
    cpll_cal_state2_carry_i_6
       (.I0(\freq_cnt_o_reg_n_0_[4] ),
        .I1(\freq_cnt_o_reg_n_0_[5] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h1)) 
    cpll_cal_state2_carry_i_7
       (.I0(\freq_cnt_o_reg_n_0_[2] ),
        .I1(\freq_cnt_o_reg_n_0_[3] ),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h1)) 
    cpll_cal_state2_carry_i_8
       (.I0(\freq_cnt_o_reg_n_0_[16] ),
        .I1(\freq_cnt_o_reg_n_0_[17] ),
        .O(\freq_cnt_o_reg[16]_0 [7]));
  LUT2 #(
    .INIT(4'h1)) 
    cpll_cal_state2_carry_i_9
       (.I0(\freq_cnt_o_reg_n_0_[14] ),
        .I1(\freq_cnt_o_reg_n_0_[15] ),
        .O(\freq_cnt_o_reg[16]_0 [6]));
  LUT6 #(
    .INIT(64'hFFFFFFFF8F888888)) 
    \cpll_cal_state[13]_i_1 
       (.I0(\cpll_cal_state_reg[13] ),
        .I1(Q[2]),
        .I2(\cpll_cal_state[21]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(done_o_reg_0),
        .I5(Q[1]),
        .O(done_o_reg_1[0]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT5 #(
    .INIT(32'h80FF8080)) 
    \cpll_cal_state[21]_i_1 
       (.I0(done_o_reg_0),
        .I1(Q[3]),
        .I2(\cpll_cal_state[21]_i_2_n_0 ),
        .I3(\cpll_cal_state_reg[21] ),
        .I4(Q[4]),
        .O(done_o_reg_1[1]));
  LUT6 #(
    .INIT(64'hF888888888888888)) 
    \cpll_cal_state[21]_i_2 
       (.I0(\repeat_ctr_reg[3]_0 ),
        .I1(CO),
        .I2(\cpll_cal_state_reg[13]_0 ),
        .I3(\cpll_cal_state_reg[13]_1 ),
        .I4(\cpll_cal_state_reg[13]_2 ),
        .I5(cal_fail_store_reg_0),
        .O(\cpll_cal_state[21]_i_2_n_0 ));
  FDCE done_o_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(\state_reg[1]_0 ),
        .D(\state_reg_n_0_[4] ),
        .Q(done_o_reg_0));
  LUT2 #(
    .INIT(4'h2)) 
    \freq_cnt_o[17]_i_1 
       (.I0(p_1_in),
        .I1(\state_reg[1]_0 ),
        .O(\freq_cnt_o[17]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[0] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(testclk_cnt_reg),
        .Q(\freq_cnt_o_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[10] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[9]),
        .Q(\freq_cnt_o_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[11] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[10]),
        .Q(\freq_cnt_o_reg[15]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[12] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[11]),
        .Q(\freq_cnt_o_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[13] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[12]),
        .Q(\freq_cnt_o_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[14] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[13]),
        .Q(\freq_cnt_o_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[15] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[14]),
        .Q(\freq_cnt_o_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[16] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[15]),
        .Q(\freq_cnt_o_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[17] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[16]),
        .Q(\freq_cnt_o_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[1] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[0]),
        .Q(\freq_cnt_o_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[2] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[1]),
        .Q(\freq_cnt_o_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[3] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[2]),
        .Q(\freq_cnt_o_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[4] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[3]),
        .Q(\freq_cnt_o_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[5] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[4]),
        .Q(\freq_cnt_o_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[6] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[5]),
        .Q(\freq_cnt_o_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[7] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[6]),
        .Q(\freq_cnt_o_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[8] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[7]),
        .Q(\freq_cnt_o_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[9] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[8]),
        .Q(\freq_cnt_o_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \hold_clk[0]_i_1 
       (.I0(hold_clk_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \hold_clk[1]_i_1 
       (.I0(hold_clk_reg[0]),
        .I1(hold_clk_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \hold_clk[2]_i_1 
       (.I0(hold_clk_reg[0]),
        .I1(hold_clk_reg[1]),
        .I2(hold_clk_reg[2]),
        .O(\hold_clk[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \hold_clk[3]_i_1 
       (.I0(hold_clk_reg[1]),
        .I1(hold_clk_reg[0]),
        .I2(hold_clk_reg[2]),
        .I3(hold_clk_reg[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \hold_clk[4]_i_1 
       (.I0(hold_clk_reg[2]),
        .I1(hold_clk_reg[0]),
        .I2(hold_clk_reg[1]),
        .I3(hold_clk_reg[3]),
        .I4(hold_clk_reg[4]),
        .O(p_0_in__0[4]));
  LUT2 #(
    .INIT(4'h1)) 
    \hold_clk[5]_i_1 
       (.I0(testclk_rst),
        .I1(\state_reg_n_0_[2] ),
        .O(\hold_clk[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \hold_clk[5]_i_2 
       (.I0(hold_clk_reg[3]),
        .I1(hold_clk_reg[1]),
        .I2(hold_clk_reg[0]),
        .I3(hold_clk_reg[2]),
        .I4(hold_clk_reg[4]),
        .I5(hold_clk_reg[5]),
        .O(p_0_in__0[5]));
  FDRE #(
    .INIT(1'b0)) 
    \hold_clk_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(hold_clk_reg[0]),
        .R(\hold_clk[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hold_clk_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(hold_clk_reg[1]),
        .R(\hold_clk[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hold_clk_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(\hold_clk[2]_i_1_n_0 ),
        .Q(hold_clk_reg[2]),
        .R(\hold_clk[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hold_clk_reg[3] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(hold_clk_reg[3]),
        .R(\hold_clk[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hold_clk_reg[4] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(hold_clk_reg[4]),
        .R(\hold_clk[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hold_clk_reg[5] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__0[5]),
        .Q(hold_clk_reg[5]),
        .R(\hold_clk[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry__0_i_1
       (.I0(\freq_cnt_o_reg_n_0_[17] ),
        .I1(\freq_cnt_o_reg_n_0_[16] ),
        .O(\freq_cnt_o_reg[17]_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_2
       (.I0(\freq_cnt_o_reg_n_0_[16] ),
        .I1(\freq_cnt_o_reg_n_0_[17] ),
        .O(\freq_cnt_o_reg[16]_1 ));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1
       (.I0(testclk_cnt_reg),
        .O(S));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_10
       (.I0(\freq_cnt_o_reg_n_0_[9] ),
        .I1(\freq_cnt_o_reg_n_0_[8] ),
        .O(\freq_cnt_o_reg[14]_0 [4]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_11
       (.I0(\freq_cnt_o_reg_n_0_[7] ),
        .I1(\freq_cnt_o_reg_n_0_[6] ),
        .O(\freq_cnt_o_reg[14]_0 [3]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_12
       (.I0(\freq_cnt_o_reg_n_0_[5] ),
        .I1(\freq_cnt_o_reg_n_0_[4] ),
        .O(\freq_cnt_o_reg[14]_0 [2]));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_13
       (.I0(\freq_cnt_o_reg_n_0_[2] ),
        .I1(\freq_cnt_o_reg_n_0_[3] ),
        .O(\freq_cnt_o_reg[14]_0 [1]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_14
       (.I0(\freq_cnt_o_reg_n_0_[0] ),
        .I1(\freq_cnt_o_reg_n_0_[1] ),
        .O(\freq_cnt_o_reg[14]_0 [0]));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry_i_1__0
       (.I0(\freq_cnt_o_reg_n_0_[15] ),
        .I1(\freq_cnt_o_reg_n_0_[14] ),
        .O(\freq_cnt_o_reg[15]_0 [6]));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_2
       (.I0(\freq_cnt_o_reg_n_0_[13] ),
        .I1(\freq_cnt_o_reg_n_0_[12] ),
        .O(\freq_cnt_o_reg[15]_0 [5]));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_3
       (.I0(\freq_cnt_o_reg_n_0_[9] ),
        .I1(\freq_cnt_o_reg_n_0_[8] ),
        .O(\freq_cnt_o_reg[15]_0 [3]));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_4
       (.I0(\freq_cnt_o_reg_n_0_[6] ),
        .I1(\freq_cnt_o_reg_n_0_[7] ),
        .O(\freq_cnt_o_reg[15]_0 [2]));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_5
       (.I0(\freq_cnt_o_reg_n_0_[5] ),
        .I1(\freq_cnt_o_reg_n_0_[4] ),
        .O(\freq_cnt_o_reg[15]_0 [1]));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry_i_6
       (.I0(\freq_cnt_o_reg_n_0_[1] ),
        .I1(\freq_cnt_o_reg_n_0_[0] ),
        .O(\freq_cnt_o_reg[15]_0 [0]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_7
       (.I0(\freq_cnt_o_reg_n_0_[14] ),
        .I1(\freq_cnt_o_reg_n_0_[15] ),
        .O(\freq_cnt_o_reg[14]_0 [7]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_8
       (.I0(\freq_cnt_o_reg_n_0_[13] ),
        .I1(\freq_cnt_o_reg_n_0_[12] ),
        .O(\freq_cnt_o_reg[14]_0 [6]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_9
       (.I0(\freq_cnt_o_reg_n_0_[10] ),
        .I1(\freq_cnt_o_reg[15]_0 [4]),
        .O(\freq_cnt_o_reg[14]_0 [5]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 refclk_cnt0_carry
       (.CI(refclk_cnt_reg[0]),
        .CI_TOP(1'b0),
        .CO({refclk_cnt0_carry_n_0,refclk_cnt0_carry_n_1,refclk_cnt0_carry_n_2,refclk_cnt0_carry_n_3,refclk_cnt0_carry_n_4,refclk_cnt0_carry_n_5,refclk_cnt0_carry_n_6,refclk_cnt0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__1[8:1]),
        .S(refclk_cnt_reg[8:1]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 refclk_cnt0_carry__0
       (.CI(refclk_cnt0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_refclk_cnt0_carry__0_CO_UNCONNECTED[7:6],refclk_cnt0_carry__0_n_2,refclk_cnt0_carry__0_n_3,refclk_cnt0_carry__0_n_4,refclk_cnt0_carry__0_n_5,refclk_cnt0_carry__0_n_6,refclk_cnt0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_refclk_cnt0_carry__0_O_UNCONNECTED[7],p_0_in__1[15:9]}),
        .S({1'b0,refclk_cnt_reg[15:9]}));
  LUT1 #(
    .INIT(2'h1)) 
    \refclk_cnt[0]_i_1 
       (.I0(refclk_cnt_reg[0]),
        .O(\refclk_cnt[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \refclk_cnt[15]_i_1 
       (.I0(testclk_en),
        .O(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(\refclk_cnt[0]_i_1_n_0 ),
        .Q(refclk_cnt_reg[0]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[10] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[10]),
        .Q(refclk_cnt_reg[10]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[11] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[11]),
        .Q(refclk_cnt_reg[11]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[12] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[12]),
        .Q(refclk_cnt_reg[12]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[13] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[13]),
        .Q(refclk_cnt_reg[13]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[14] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[14]),
        .Q(refclk_cnt_reg[14]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[15] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[15]),
        .Q(refclk_cnt_reg[15]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[1]),
        .Q(refclk_cnt_reg[1]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[2]),
        .Q(refclk_cnt_reg[2]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[3] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[3]),
        .Q(refclk_cnt_reg[3]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[4] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[4]),
        .Q(refclk_cnt_reg[4]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[5] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[5]),
        .Q(refclk_cnt_reg[5]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[6] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[6]),
        .Q(refclk_cnt_reg[6]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[7] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[7]),
        .Q(refclk_cnt_reg[7]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[8] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[8]),
        .Q(refclk_cnt_reg[8]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[9] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[9]),
        .Q(refclk_cnt_reg[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h5555555500000111)) 
    \repeat_ctr[3]_i_1 
       (.I0(cal_on_tx_reset_in_sync),
        .I1(\repeat_ctr_reg[3] ),
        .I2(CO),
        .I3(\repeat_ctr_reg[3]_0 ),
        .I4(\repeat_ctr[3]_i_4_n_0 ),
        .I5(Q[0]),
        .O(rst_in_out_reg));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \repeat_ctr[3]_i_4 
       (.I0(done_o_reg_0),
        .I1(Q[3]),
        .O(\repeat_ctr[3]_i_4_n_0 ));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_44 reset_synchronizer_testclk_rst_inst
       (.out(testclk_rst),
        .rst_in_out(rst_in_out),
        .txoutclkmon(txoutclkmon));
  LUT6 #(
    .INIT(64'hAA2AAAAAAAAAAAAA)) 
    \state[0]_i_1 
       (.I0(testclk_rst),
        .I1(hold_clk_reg[2]),
        .I2(hold_clk_reg[3]),
        .I3(\state[3]_i_2_n_0 ),
        .I4(hold_clk_reg[4]),
        .I5(hold_clk_reg[5]),
        .O(\state[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    \state[1]_i_1 
       (.I0(\state[1]_i_2_n_0 ),
        .I1(testclk_rst),
        .I2(\state[2]_i_2_n_0 ),
        .I3(testclk_en),
        .O(\state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \state[1]_i_2 
       (.I0(hold_clk_reg[5]),
        .I1(hold_clk_reg[4]),
        .I2(hold_clk_reg[1]),
        .I3(hold_clk_reg[0]),
        .I4(hold_clk_reg[3]),
        .I5(hold_clk_reg[2]),
        .O(\state[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \state[2]_i_1 
       (.I0(\state[2]_i_2_n_0 ),
        .I1(testclk_en),
        .I2(\state[2]_i_3_n_0 ),
        .I3(\state_reg_n_0_[2] ),
        .O(\state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \state[2]_i_2 
       (.I0(refclk_cnt_reg[13]),
        .I1(refclk_cnt_reg[14]),
        .I2(refclk_cnt_reg[12]),
        .I3(refclk_cnt_reg[15]),
        .I4(\state[2]_i_4_n_0 ),
        .I5(\state[2]_i_5_n_0 ),
        .O(\state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFF7FFFFFFFFFFFF)) 
    \state[2]_i_3 
       (.I0(hold_clk_reg[0]),
        .I1(hold_clk_reg[1]),
        .I2(hold_clk_reg[4]),
        .I3(hold_clk_reg[5]),
        .I4(hold_clk_reg[3]),
        .I5(hold_clk_reg[2]),
        .O(\state[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \state[2]_i_4 
       (.I0(refclk_cnt_reg[0]),
        .I1(refclk_cnt_reg[1]),
        .I2(refclk_cnt_reg[2]),
        .I3(refclk_cnt_reg[3]),
        .I4(refclk_cnt_reg[4]),
        .I5(refclk_cnt_reg[5]),
        .O(\state[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFFFFFFFFFF)) 
    \state[2]_i_5 
       (.I0(refclk_cnt_reg[6]),
        .I1(refclk_cnt_reg[7]),
        .I2(refclk_cnt_reg[8]),
        .I3(refclk_cnt_reg[10]),
        .I4(refclk_cnt_reg[11]),
        .I5(refclk_cnt_reg[9]),
        .O(\state[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    \state[3]_i_1 
       (.I0(\state_reg_n_0_[2] ),
        .I1(hold_clk_reg[2]),
        .I2(hold_clk_reg[3]),
        .I3(\state[3]_i_2_n_0 ),
        .I4(hold_clk_reg[4]),
        .I5(hold_clk_reg[5]),
        .O(\state[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \state[3]_i_2 
       (.I0(hold_clk_reg[1]),
        .I1(hold_clk_reg[0]),
        .O(\state[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \state[4]_i_1 
       (.I0(p_1_in),
        .I1(\state_reg_n_0_[4] ),
        .O(\state[4]_i_1_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \state_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(\state[0]_i_1_n_0 ),
        .PRE(\state_reg[1]_0 ),
        .Q(testclk_rst));
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(\state_reg[1]_0 ),
        .D(\state[1]_i_1_n_0 ),
        .Q(testclk_en));
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(\state_reg[1]_0 ),
        .D(\state[2]_i_1_n_0 ),
        .Q(\state_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[3] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(\state_reg[1]_0 ),
        .D(\state[3]_i_1_n_0 ),
        .Q(p_1_in));
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[4] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(\state_reg[1]_0 ),
        .D(\state[4]_i_1_n_0 ),
        .Q(\state_reg_n_0_[4] ));
  LUT5 #(
    .INIT(32'h00000020)) 
    testclk_cnt0
       (.I0(testclk_en_dly2),
        .I1(testclk_div4[1]),
        .I2(testclk_div4[3]),
        .I3(testclk_div4[2]),
        .I4(testclk_div4[0]),
        .O(testclk_cnt0_n_0));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[0] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[0]),
        .Q(testclk_cnt_reg));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[10] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [2]),
        .Q(D[9]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[11] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [3]),
        .Q(D[10]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[12] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [4]),
        .Q(D[11]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[13] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [5]),
        .Q(D[12]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[14] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [6]),
        .Q(D[13]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[15] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [7]),
        .Q(D[14]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[16] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[17]_0 [0]),
        .Q(D[15]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[17] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[17]_0 [1]),
        .Q(D[16]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[1] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[1]),
        .Q(D[0]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[2] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[2]),
        .Q(D[1]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[3] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[3]),
        .Q(D[2]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[4] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[4]),
        .Q(D[3]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[5] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[5]),
        .Q(D[4]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[6] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[6]),
        .Q(D[5]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[7] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[7]),
        .Q(D[6]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[8] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [0]),
        .Q(D[7]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[9] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [1]),
        .Q(D[8]));
  FDSE #(
    .INIT(1'b1)) 
    \testclk_div4_reg[0] 
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(testclk_div4[3]),
        .Q(testclk_div4[0]),
        .S(tstclk_rst_dly2));
  FDRE #(
    .INIT(1'b0)) 
    \testclk_div4_reg[1] 
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(testclk_div4[0]),
        .Q(testclk_div4[1]),
        .R(tstclk_rst_dly2));
  FDRE #(
    .INIT(1'b0)) 
    \testclk_div4_reg[2] 
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(testclk_div4[1]),
        .Q(testclk_div4[2]),
        .R(tstclk_rst_dly2));
  FDRE #(
    .INIT(1'b0)) 
    \testclk_div4_reg[3] 
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(testclk_div4[2]),
        .Q(testclk_div4[3]),
        .R(tstclk_rst_dly2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE testclk_en_dly1_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(testclk_en),
        .Q(testclk_en_dly1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE testclk_en_dly2_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(testclk_en_dly1),
        .Q(testclk_en_dly2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE tstclk_rst_dly1_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(testclk_rst),
        .Q(tstclk_rst_dly1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE tstclk_rst_dly2_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(tstclk_rst_dly1),
        .Q(tstclk_rst_dly2),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_tx" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_tx
   (\gen_gtwizard_gthe4.txprogdivreset_ch_int ,
    cpllpd_int_reg_0,
    cpllreset_int_reg_0,
    USER_CPLLLOCK_OUT_reg_0,
    cal_on_tx_drpen_out,
    cal_on_tx_drpwe_out,
    D,
    rst_in0,
    S,
    \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[2]_0 ,
    \daddr_reg[7]_0 ,
    \di_reg[15]_0 ,
    in0,
    i_in_meta_reg,
    i_in_meta_reg_0,
    txoutclk_out,
    drpclk_in,
    cal_on_tx_reset_in_sync,
    O,
    \testclk_cnt_reg[15] ,
    \testclk_cnt_reg[17] ,
    Q,
    cal_on_tx_drdy,
    lopt,
    lopt_1);
  output \gen_gtwizard_gthe4.txprogdivreset_ch_int ;
  output cpllpd_int_reg_0;
  output cpllreset_int_reg_0;
  output USER_CPLLLOCK_OUT_reg_0;
  output cal_on_tx_drpen_out;
  output cal_on_tx_drpwe_out;
  output [16:0]D;
  output rst_in0;
  output [0:0]S;
  output [2:0]\non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[2]_0 ;
  output [6:0]\daddr_reg[7]_0 ;
  output [15:0]\di_reg[15]_0 ;
  input in0;
  input i_in_meta_reg;
  input i_in_meta_reg_0;
  input [0:0]txoutclk_out;
  input [0:0]drpclk_in;
  input cal_on_tx_reset_in_sync;
  input [7:0]O;
  input [7:0]\testclk_cnt_reg[15] ;
  input [1:0]\testclk_cnt_reg[17] ;
  input [15:0]Q;
  input cal_on_tx_drdy;
  input lopt;
  input lopt_1;

  wire [16:0]D;
  wire [7:0]O;
  wire [15:0]Q;
  wire [0:0]S;
  wire USER_CPLLLOCK_OUT_reg_0;
  wire U_TXOUTCLK_FREQ_COUNTER_n_0;
  wire U_TXOUTCLK_FREQ_COUNTER_n_18;
  wire U_TXOUTCLK_FREQ_COUNTER_n_19;
  wire U_TXOUTCLK_FREQ_COUNTER_n_23;
  wire U_TXOUTCLK_FREQ_COUNTER_n_24;
  wire U_TXOUTCLK_FREQ_COUNTER_n_25;
  wire U_TXOUTCLK_FREQ_COUNTER_n_26;
  wire U_TXOUTCLK_FREQ_COUNTER_n_27;
  wire U_TXOUTCLK_FREQ_COUNTER_n_28;
  wire U_TXOUTCLK_FREQ_COUNTER_n_29;
  wire U_TXOUTCLK_FREQ_COUNTER_n_30;
  wire U_TXOUTCLK_FREQ_COUNTER_n_31;
  wire U_TXOUTCLK_FREQ_COUNTER_n_32;
  wire U_TXOUTCLK_FREQ_COUNTER_n_33;
  wire U_TXOUTCLK_FREQ_COUNTER_n_34;
  wire U_TXOUTCLK_FREQ_COUNTER_n_35;
  wire U_TXOUTCLK_FREQ_COUNTER_n_36;
  wire U_TXOUTCLK_FREQ_COUNTER_n_37;
  wire U_TXOUTCLK_FREQ_COUNTER_n_38;
  wire U_TXOUTCLK_FREQ_COUNTER_n_39;
  wire U_TXOUTCLK_FREQ_COUNTER_n_40;
  wire U_TXOUTCLK_FREQ_COUNTER_n_41;
  wire U_TXOUTCLK_FREQ_COUNTER_n_42;
  wire U_TXOUTCLK_FREQ_COUNTER_n_43;
  wire U_TXOUTCLK_FREQ_COUNTER_n_44;
  wire U_TXOUTCLK_FREQ_COUNTER_n_45;
  wire U_TXOUTCLK_FREQ_COUNTER_n_46;
  wire U_TXOUTCLK_FREQ_COUNTER_n_47;
  wire U_TXOUTCLK_FREQ_COUNTER_n_48;
  wire U_TXOUTCLK_FREQ_COUNTER_n_49;
  wire U_TXOUTCLK_FREQ_COUNTER_n_50;
  wire U_TXOUTCLK_FREQ_COUNTER_n_51;
  wire U_TXOUTCLK_FREQ_COUNTER_n_52;
  wire U_TXOUTCLK_FREQ_COUNTER_n_53;
  wire U_TXOUTCLK_FREQ_COUNTER_n_54;
  wire bit_synchronizer_cplllock_inst_n_0;
  wire bit_synchronizer_cplllock_inst_n_1;
  wire bit_synchronizer_txoutclksel_inst0_n_0;
  wire bit_synchronizer_txoutclksel_inst1_n_0;
  wire bit_synchronizer_txoutclksel_inst2_n_0;
  wire bit_synchronizer_txprgdivresetdone_inst_n_0;
  wire bit_synchronizer_txprogdivreset_inst_n_0;
  wire cal_fail_store__0;
  wire cal_fail_store_i_4_n_0;
  wire cal_on_tx_drdy;
  wire cal_on_tx_drpen_out;
  wire cal_on_tx_drpwe_out;
  wire cal_on_tx_reset_in_sync;
  wire cpll_cal_state2;
  wire cpll_cal_state26_in;
  wire cpll_cal_state2_carry_n_1;
  wire cpll_cal_state2_carry_n_2;
  wire cpll_cal_state2_carry_n_3;
  wire cpll_cal_state2_carry_n_4;
  wire cpll_cal_state2_carry_n_5;
  wire cpll_cal_state2_carry_n_6;
  wire cpll_cal_state2_carry_n_7;
  wire \cpll_cal_state2_inferred__0/i__carry_n_0 ;
  wire \cpll_cal_state2_inferred__0/i__carry_n_1 ;
  wire \cpll_cal_state2_inferred__0/i__carry_n_2 ;
  wire \cpll_cal_state2_inferred__0/i__carry_n_3 ;
  wire \cpll_cal_state2_inferred__0/i__carry_n_4 ;
  wire \cpll_cal_state2_inferred__0/i__carry_n_5 ;
  wire \cpll_cal_state2_inferred__0/i__carry_n_6 ;
  wire \cpll_cal_state2_inferred__0/i__carry_n_7 ;
  wire [31:1]cpll_cal_state7_out;
  wire \cpll_cal_state_reg_n_0_[0] ;
  wire \cpll_cal_state_reg_n_0_[12] ;
  wire \cpll_cal_state_reg_n_0_[27] ;
  wire \cpll_cal_state_reg_n_0_[28] ;
  wire \cpll_cal_state_reg_n_0_[29] ;
  wire \cpll_cal_state_reg_n_0_[30] ;
  wire \cpll_cal_state_reg_n_0_[31] ;
  wire cpllpd_int_i_1_n_0;
  wire cpllpd_int_reg_0;
  wire cpllreset_int_i_1_n_0;
  wire cpllreset_int_reg_0;
  wire [7:1]daddr0_in;
  wire \daddr[4]_i_2_n_0 ;
  wire \daddr[5]_i_1__0_n_0 ;
  wire \daddr[5]_i_2_n_0 ;
  wire \daddr[6]_i_1__0_n_0 ;
  wire \daddr[6]_i_2_n_0 ;
  wire \daddr[7]_i_1__0_n_0 ;
  wire \daddr[7]_i_3_n_0 ;
  wire [6:0]\daddr_reg[7]_0 ;
  wire den_i_1_n_0;
  wire \di_msk[0]_i_1_n_0 ;
  wire \di_msk[10]_i_1_n_0 ;
  wire \di_msk[11]_i_1_n_0 ;
  wire \di_msk[12]_i_1_n_0 ;
  wire \di_msk[12]_i_2_n_0 ;
  wire \di_msk[12]_i_3_n_0 ;
  wire \di_msk[13]_i_1_n_0 ;
  wire \di_msk[13]_i_2_n_0 ;
  wire \di_msk[14]_i_1_n_0 ;
  wire \di_msk[14]_i_2_n_0 ;
  wire \di_msk[15]_i_1_n_0 ;
  wire \di_msk[15]_i_2_n_0 ;
  wire \di_msk[15]_i_3_n_0 ;
  wire \di_msk[15]_i_4_n_0 ;
  wire \di_msk[1]_i_1_n_0 ;
  wire \di_msk[1]_i_2_n_0 ;
  wire \di_msk[2]_i_1_n_0 ;
  wire \di_msk[3]_i_1_n_0 ;
  wire \di_msk[4]_i_1_n_0 ;
  wire \di_msk[5]_i_1_n_0 ;
  wire \di_msk[5]_i_2_n_0 ;
  wire \di_msk[6]_i_1_n_0 ;
  wire \di_msk[6]_i_2_n_0 ;
  wire \di_msk[7]_i_1_n_0 ;
  wire \di_msk[8]_i_1_n_0 ;
  wire \di_msk[9]_i_1_n_0 ;
  wire \di_msk_reg_n_0_[0] ;
  wire \di_msk_reg_n_0_[10] ;
  wire \di_msk_reg_n_0_[11] ;
  wire \di_msk_reg_n_0_[12] ;
  wire \di_msk_reg_n_0_[13] ;
  wire \di_msk_reg_n_0_[14] ;
  wire \di_msk_reg_n_0_[15] ;
  wire \di_msk_reg_n_0_[1] ;
  wire \di_msk_reg_n_0_[2] ;
  wire \di_msk_reg_n_0_[3] ;
  wire \di_msk_reg_n_0_[4] ;
  wire \di_msk_reg_n_0_[5] ;
  wire \di_msk_reg_n_0_[6] ;
  wire \di_msk_reg_n_0_[7] ;
  wire \di_msk_reg_n_0_[8] ;
  wire \di_msk_reg_n_0_[9] ;
  wire [15:0]\di_reg[15]_0 ;
  wire drp_done;
  wire \drp_state[0]_i_1__0_n_0 ;
  wire \drp_state[1]_i_1__0_n_0 ;
  wire \drp_state[2]_i_1__0_n_0 ;
  wire \drp_state[3]_i_1_n_0 ;
  wire \drp_state[4]_i_1__0_n_0 ;
  wire \drp_state[5]_i_1__0_n_0 ;
  wire \drp_state[6]_i_1__0_n_0 ;
  wire \drp_state_reg_n_0_[0] ;
  wire \drp_state_reg_n_0_[1] ;
  wire \drp_state_reg_n_0_[2] ;
  wire \drp_state_reg_n_0_[3] ;
  wire \drp_state_reg_n_0_[4] ;
  wire \drp_state_reg_n_0_[5] ;
  wire [0:0]drpclk_in;
  wire dwe_i_1_n_0;
  wire freq_counter_rst_reg_n_0;
  wire \gen_gtwizard_gthe4.txprogdivreset_ch_int ;
  wire i_in_meta_reg;
  wire i_in_meta_reg_0;
  wire in0;
  wire lopt;
  wire lopt_1;
  wire mask_user_in_i_1_n_0;
  wire mask_user_in_reg_n_0;
  wire [2:0]\non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[2]_0 ;
  wire p_0_in;
  wire p_0_in0_in;
  wire p_0_in3_in;
  wire p_0_in7_in;
  wire p_11_in;
  wire p_12_in;
  wire p_13_in;
  wire p_14_in;
  wire p_15_in;
  wire p_16_in;
  wire p_17_in;
  wire p_18_in;
  wire p_1_in;
  wire p_1_in10_in;
  wire p_1_in2_in;
  wire p_1_in5_in;
  wire p_25_in;
  wire p_29_in;
  wire p_2_in;
  wire p_2_in1_in;
  wire p_2_in4_in;
  wire p_2_in8_in;
  wire p_3_in;
  wire p_3_in9_in;
  wire p_4_in;
  wire progclk_sel_store;
  wire \progclk_sel_store_reg_n_0_[0] ;
  wire \progclk_sel_store_reg_n_0_[10] ;
  wire \progclk_sel_store_reg_n_0_[11] ;
  wire \progclk_sel_store_reg_n_0_[12] ;
  wire \progclk_sel_store_reg_n_0_[13] ;
  wire \progclk_sel_store_reg_n_0_[14] ;
  wire \progclk_sel_store_reg_n_0_[1] ;
  wire \progclk_sel_store_reg_n_0_[2] ;
  wire \progclk_sel_store_reg_n_0_[3] ;
  wire \progclk_sel_store_reg_n_0_[4] ;
  wire \progclk_sel_store_reg_n_0_[5] ;
  wire \progclk_sel_store_reg_n_0_[6] ;
  wire \progclk_sel_store_reg_n_0_[7] ;
  wire \progclk_sel_store_reg_n_0_[8] ;
  wire \progclk_sel_store_reg_n_0_[9] ;
  wire progdiv_cfg_store;
  wire \progdiv_cfg_store[15]_i_1_n_0 ;
  wire \progdiv_cfg_store_reg_n_0_[0] ;
  wire \progdiv_cfg_store_reg_n_0_[10] ;
  wire \progdiv_cfg_store_reg_n_0_[11] ;
  wire \progdiv_cfg_store_reg_n_0_[12] ;
  wire \progdiv_cfg_store_reg_n_0_[13] ;
  wire \progdiv_cfg_store_reg_n_0_[14] ;
  wire \progdiv_cfg_store_reg_n_0_[15] ;
  wire \progdiv_cfg_store_reg_n_0_[1] ;
  wire \progdiv_cfg_store_reg_n_0_[2] ;
  wire \progdiv_cfg_store_reg_n_0_[3] ;
  wire \progdiv_cfg_store_reg_n_0_[4] ;
  wire \progdiv_cfg_store_reg_n_0_[5] ;
  wire \progdiv_cfg_store_reg_n_0_[6] ;
  wire \progdiv_cfg_store_reg_n_0_[7] ;
  wire \progdiv_cfg_store_reg_n_0_[8] ;
  wire \progdiv_cfg_store_reg_n_0_[9] ;
  wire rd;
  wire rd_i_1__0_n_0;
  wire rd_i_2_n_0;
  wire \repeat_ctr[0]_i_1_n_0 ;
  wire \repeat_ctr[1]_i_1_n_0 ;
  wire \repeat_ctr[2]_i_1_n_0 ;
  wire \repeat_ctr[3]_i_2_n_0 ;
  wire \repeat_ctr[3]_i_3_n_0 ;
  wire \repeat_ctr_reg_n_0_[0] ;
  wire \repeat_ctr_reg_n_0_[1] ;
  wire \repeat_ctr_reg_n_0_[2] ;
  wire \repeat_ctr_reg_n_0_[3] ;
  wire rst_in0;
  wire status_store__0;
  wire status_store_i_1_n_0;
  wire [7:0]\testclk_cnt_reg[15] ;
  wire [1:0]\testclk_cnt_reg[17] ;
  wire [0:0]txoutclk_out;
  wire txoutclkmon;
  wire [2:2]txoutclksel_int;
  wire \txoutclksel_int[2]_i_1_n_0 ;
  wire txprogdivreset_int;
  wire txprogdivreset_int_i_1_n_0;
  wire wait_ctr0_carry__0_n_0;
  wire wait_ctr0_carry__0_n_1;
  wire wait_ctr0_carry__0_n_10;
  wire wait_ctr0_carry__0_n_11;
  wire wait_ctr0_carry__0_n_12;
  wire wait_ctr0_carry__0_n_13;
  wire wait_ctr0_carry__0_n_14;
  wire wait_ctr0_carry__0_n_15;
  wire wait_ctr0_carry__0_n_2;
  wire wait_ctr0_carry__0_n_3;
  wire wait_ctr0_carry__0_n_4;
  wire wait_ctr0_carry__0_n_5;
  wire wait_ctr0_carry__0_n_6;
  wire wait_ctr0_carry__0_n_7;
  wire wait_ctr0_carry__0_n_8;
  wire wait_ctr0_carry__0_n_9;
  wire wait_ctr0_carry__1_n_1;
  wire wait_ctr0_carry__1_n_10;
  wire wait_ctr0_carry__1_n_11;
  wire wait_ctr0_carry__1_n_12;
  wire wait_ctr0_carry__1_n_13;
  wire wait_ctr0_carry__1_n_14;
  wire wait_ctr0_carry__1_n_15;
  wire wait_ctr0_carry__1_n_2;
  wire wait_ctr0_carry__1_n_3;
  wire wait_ctr0_carry__1_n_4;
  wire wait_ctr0_carry__1_n_5;
  wire wait_ctr0_carry__1_n_6;
  wire wait_ctr0_carry__1_n_7;
  wire wait_ctr0_carry__1_n_8;
  wire wait_ctr0_carry__1_n_9;
  wire wait_ctr0_carry_n_0;
  wire wait_ctr0_carry_n_1;
  wire wait_ctr0_carry_n_10;
  wire wait_ctr0_carry_n_11;
  wire wait_ctr0_carry_n_12;
  wire wait_ctr0_carry_n_13;
  wire wait_ctr0_carry_n_14;
  wire wait_ctr0_carry_n_15;
  wire wait_ctr0_carry_n_2;
  wire wait_ctr0_carry_n_3;
  wire wait_ctr0_carry_n_4;
  wire wait_ctr0_carry_n_5;
  wire wait_ctr0_carry_n_6;
  wire wait_ctr0_carry_n_7;
  wire wait_ctr0_carry_n_8;
  wire wait_ctr0_carry_n_9;
  wire \wait_ctr[0]_i_1_n_0 ;
  wire \wait_ctr[10]_i_1_n_0 ;
  wire \wait_ctr[11]_i_1_n_0 ;
  wire \wait_ctr[12]_i_1_n_0 ;
  wire \wait_ctr[13]_i_1_n_0 ;
  wire \wait_ctr[14]_i_1_n_0 ;
  wire \wait_ctr[15]_i_1_n_0 ;
  wire \wait_ctr[16]_i_1_n_0 ;
  wire \wait_ctr[17]_i_1_n_0 ;
  wire \wait_ctr[18]_i_1_n_0 ;
  wire \wait_ctr[19]_i_1_n_0 ;
  wire \wait_ctr[1]_i_1_n_0 ;
  wire \wait_ctr[20]_i_1_n_0 ;
  wire \wait_ctr[21]_i_1_n_0 ;
  wire \wait_ctr[22]_i_1_n_0 ;
  wire \wait_ctr[23]_i_1_n_0 ;
  wire \wait_ctr[24]_i_10_n_0 ;
  wire \wait_ctr[24]_i_11_n_0 ;
  wire \wait_ctr[24]_i_12_n_0 ;
  wire \wait_ctr[24]_i_13_n_0 ;
  wire \wait_ctr[24]_i_14_n_0 ;
  wire \wait_ctr[24]_i_15_n_0 ;
  wire \wait_ctr[24]_i_16_n_0 ;
  wire \wait_ctr[24]_i_17_n_0 ;
  wire \wait_ctr[24]_i_18_n_0 ;
  wire \wait_ctr[24]_i_19_n_0 ;
  wire \wait_ctr[24]_i_1_n_0 ;
  wire \wait_ctr[24]_i_20_n_0 ;
  wire \wait_ctr[24]_i_2_n_0 ;
  wire \wait_ctr[24]_i_3_n_0 ;
  wire \wait_ctr[24]_i_4_n_0 ;
  wire \wait_ctr[24]_i_5_n_0 ;
  wire \wait_ctr[24]_i_6_n_0 ;
  wire \wait_ctr[24]_i_7_n_0 ;
  wire \wait_ctr[24]_i_8_n_0 ;
  wire \wait_ctr[24]_i_9_n_0 ;
  wire \wait_ctr[2]_i_1_n_0 ;
  wire \wait_ctr[3]_i_1_n_0 ;
  wire \wait_ctr[4]_i_1_n_0 ;
  wire \wait_ctr[5]_i_1_n_0 ;
  wire \wait_ctr[6]_i_1_n_0 ;
  wire \wait_ctr[7]_i_1_n_0 ;
  wire \wait_ctr[8]_i_1_n_0 ;
  wire \wait_ctr[9]_i_1_n_0 ;
  wire \wait_ctr_reg_n_0_[0] ;
  wire \wait_ctr_reg_n_0_[10] ;
  wire \wait_ctr_reg_n_0_[11] ;
  wire \wait_ctr_reg_n_0_[12] ;
  wire \wait_ctr_reg_n_0_[13] ;
  wire \wait_ctr_reg_n_0_[14] ;
  wire \wait_ctr_reg_n_0_[15] ;
  wire \wait_ctr_reg_n_0_[16] ;
  wire \wait_ctr_reg_n_0_[17] ;
  wire \wait_ctr_reg_n_0_[18] ;
  wire \wait_ctr_reg_n_0_[19] ;
  wire \wait_ctr_reg_n_0_[1] ;
  wire \wait_ctr_reg_n_0_[20] ;
  wire \wait_ctr_reg_n_0_[21] ;
  wire \wait_ctr_reg_n_0_[22] ;
  wire \wait_ctr_reg_n_0_[23] ;
  wire \wait_ctr_reg_n_0_[24] ;
  wire \wait_ctr_reg_n_0_[2] ;
  wire \wait_ctr_reg_n_0_[3] ;
  wire \wait_ctr_reg_n_0_[4] ;
  wire \wait_ctr_reg_n_0_[5] ;
  wire \wait_ctr_reg_n_0_[6] ;
  wire \wait_ctr_reg_n_0_[7] ;
  wire \wait_ctr_reg_n_0_[8] ;
  wire \wait_ctr_reg_n_0_[9] ;
  wire wr;
  wire wr_i_1__0_n_0;
  wire \x0e1_store[14]_i_1_n_0 ;
  wire \x0e1_store_reg_n_0_[0] ;
  wire \x0e1_store_reg_n_0_[12] ;
  wire \x0e1_store_reg_n_0_[13] ;
  wire \x0e1_store_reg_n_0_[14] ;
  wire \x0e1_store_reg_n_0_[1] ;
  wire \x0e1_store_reg_n_0_[2] ;
  wire \x0e1_store_reg_n_0_[3] ;
  wire \x0e1_store_reg_n_0_[4] ;
  wire \x0e1_store_reg_n_0_[5] ;
  wire \x0e1_store_reg_n_0_[6] ;
  wire \x0e1_store_reg_n_0_[7] ;
  wire \x0e1_store_reg_n_0_[8] ;
  wire \x0e1_store_reg_n_0_[9] ;
  wire [7:0]NLW_cpll_cal_state2_carry_O_UNCONNECTED;
  wire [7:0]\NLW_cpll_cal_state2_inferred__0/i__carry_O_UNCONNECTED ;
  wire [7:1]\NLW_cpll_cal_state2_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [7:0]\NLW_cpll_cal_state2_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [7:7]NLW_wait_ctr0_carry__1_CO_UNCONNECTED;

  FDRE USER_CPLLLOCK_OUT_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_cplllock_inst_n_1),
        .Q(USER_CPLLLOCK_OUT_reg_0),
        .R(1'b0));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gthe4_cpll_cal_freq_counter U_TXOUTCLK_FREQ_COUNTER
       (.CO(cpll_cal_state2),
        .D(D),
        .DI({U_TXOUTCLK_FREQ_COUNTER_n_23,U_TXOUTCLK_FREQ_COUNTER_n_24,U_TXOUTCLK_FREQ_COUNTER_n_25,U_TXOUTCLK_FREQ_COUNTER_n_26,U_TXOUTCLK_FREQ_COUNTER_n_27,U_TXOUTCLK_FREQ_COUNTER_n_28}),
        .O(O),
        .Q({\cpll_cal_state_reg_n_0_[27] ,p_2_in8_in,p_11_in,p_18_in,\cpll_cal_state_reg_n_0_[12] ,\cpll_cal_state_reg_n_0_[0] }),
        .S(S),
        .cal_fail_store__0(cal_fail_store__0),
        .cal_fail_store_reg(bit_synchronizer_cplllock_inst_n_0),
        .cal_fail_store_reg_0(\repeat_ctr_reg_n_0_[3] ),
        .cal_fail_store_reg_1(cal_fail_store_i_4_n_0),
        .cal_on_tx_reset_in_sync(cal_on_tx_reset_in_sync),
        .\cpll_cal_state_reg[13] (\wait_ctr[24]_i_6_n_0 ),
        .\cpll_cal_state_reg[13]_0 (\repeat_ctr_reg_n_0_[1] ),
        .\cpll_cal_state_reg[13]_1 (\repeat_ctr_reg_n_0_[0] ),
        .\cpll_cal_state_reg[13]_2 (\repeat_ctr_reg_n_0_[2] ),
        .\cpll_cal_state_reg[21] (drp_done),
        .done_o_reg_0(U_TXOUTCLK_FREQ_COUNTER_n_0),
        .done_o_reg_1({cpll_cal_state7_out[21],cpll_cal_state7_out[13]}),
        .drpclk_in(drpclk_in),
        .\freq_cnt_o_reg[0]_0 (U_TXOUTCLK_FREQ_COUNTER_n_52),
        .\freq_cnt_o_reg[14]_0 ({U_TXOUTCLK_FREQ_COUNTER_n_44,U_TXOUTCLK_FREQ_COUNTER_n_45,U_TXOUTCLK_FREQ_COUNTER_n_46,U_TXOUTCLK_FREQ_COUNTER_n_47,U_TXOUTCLK_FREQ_COUNTER_n_48,U_TXOUTCLK_FREQ_COUNTER_n_49,U_TXOUTCLK_FREQ_COUNTER_n_50,U_TXOUTCLK_FREQ_COUNTER_n_51}),
        .\freq_cnt_o_reg[15]_0 ({U_TXOUTCLK_FREQ_COUNTER_n_37,U_TXOUTCLK_FREQ_COUNTER_n_38,U_TXOUTCLK_FREQ_COUNTER_n_39,U_TXOUTCLK_FREQ_COUNTER_n_40,U_TXOUTCLK_FREQ_COUNTER_n_41,U_TXOUTCLK_FREQ_COUNTER_n_42,U_TXOUTCLK_FREQ_COUNTER_n_43}),
        .\freq_cnt_o_reg[16]_0 ({U_TXOUTCLK_FREQ_COUNTER_n_29,U_TXOUTCLK_FREQ_COUNTER_n_30,U_TXOUTCLK_FREQ_COUNTER_n_31,U_TXOUTCLK_FREQ_COUNTER_n_32,U_TXOUTCLK_FREQ_COUNTER_n_33,U_TXOUTCLK_FREQ_COUNTER_n_34,U_TXOUTCLK_FREQ_COUNTER_n_35,U_TXOUTCLK_FREQ_COUNTER_n_36}),
        .\freq_cnt_o_reg[16]_1 (U_TXOUTCLK_FREQ_COUNTER_n_54),
        .\freq_cnt_o_reg[17]_0 (U_TXOUTCLK_FREQ_COUNTER_n_53),
        .\repeat_ctr_reg[3] (\repeat_ctr[3]_i_3_n_0 ),
        .\repeat_ctr_reg[3]_0 (cpll_cal_state26_in),
        .rst_in_out_reg(U_TXOUTCLK_FREQ_COUNTER_n_18),
        .rst_in_out_reg_0(U_TXOUTCLK_FREQ_COUNTER_n_19),
        .\state_reg[1]_0 (freq_counter_rst_reg_n_0),
        .\testclk_cnt_reg[15]_0 (\testclk_cnt_reg[15] ),
        .\testclk_cnt_reg[17]_0 (\testclk_cnt_reg[17] ),
        .txoutclkmon(txoutclkmon));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_38 bit_synchronizer_cplllock_inst
       (.Q({\cpll_cal_state_reg_n_0_[30] ,\cpll_cal_state_reg_n_0_[0] }),
        .USER_CPLLLOCK_OUT_reg(mask_user_in_reg_n_0),
        .cal_on_tx_reset_in_sync(cal_on_tx_reset_in_sync),
        .\cpll_cal_state_reg[0] (bit_synchronizer_cplllock_inst_n_1),
        .drpclk_in(drpclk_in),
        .i_in_out_reg_0(bit_synchronizer_cplllock_inst_n_0),
        .in0(in0));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_39 bit_synchronizer_txoutclksel_inst0
       (.D(bit_synchronizer_txoutclksel_inst0_n_0),
        .drpclk_in(drpclk_in),
        .\non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[0] (mask_user_in_reg_n_0),
        .txoutclksel_int(txoutclksel_int));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_40 bit_synchronizer_txoutclksel_inst1
       (.D(bit_synchronizer_txoutclksel_inst1_n_0),
        .drpclk_in(drpclk_in),
        .\non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[1] (mask_user_in_reg_n_0));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_41 bit_synchronizer_txoutclksel_inst2
       (.D(bit_synchronizer_txoutclksel_inst2_n_0),
        .drpclk_in(drpclk_in),
        .\non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[2] (mask_user_in_reg_n_0),
        .txoutclksel_int(txoutclksel_int));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_42 bit_synchronizer_txprgdivresetdone_inst
       (.D({cpll_cal_state7_out[31:29],cpll_cal_state7_out[20:19]}),
        .Q({\cpll_cal_state_reg_n_0_[31] ,\cpll_cal_state_reg_n_0_[30] ,\cpll_cal_state_reg_n_0_[29] ,\cpll_cal_state_reg_n_0_[28] ,p_11_in,p_12_in,p_13_in,p_16_in,p_17_in}),
        .cal_fail_store__0(cal_fail_store__0),
        .cal_on_tx_reset_in_sync(cal_on_tx_reset_in_sync),
        .\cpll_cal_state_reg[14] (bit_synchronizer_txprgdivresetdone_inst_n_0),
        .\cpll_cal_state_reg[20] (U_TXOUTCLK_FREQ_COUNTER_n_0),
        .\cpll_cal_state_reg[29] (\wait_ctr[24]_i_6_n_0 ),
        .drpclk_in(drpclk_in),
        .freq_counter_rst_reg(\wait_ctr[24]_i_5_n_0 ),
        .freq_counter_rst_reg_0(freq_counter_rst_reg_n_0),
        .freq_counter_rst_reg_1(\wait_ctr[24]_i_9_n_0 ),
        .i_in_meta_reg_0(i_in_meta_reg_0));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_43 bit_synchronizer_txprogdivreset_inst
       (.drpclk_in(drpclk_in),
        .i_in_meta_reg_0(i_in_meta_reg),
        .\non_pcie_txoutclksel.GTHE4_TXPROGDIVRESET_OUT_reg (mask_user_in_reg_n_0),
        .txprogdivreset_int(txprogdivreset_int),
        .txprogdivreset_int_reg(bit_synchronizer_txprogdivreset_inst_n_0));
  (* OPT_MODIFIED = "MLO" *) 
  (* box_type = "PRIMITIVE" *) 
  BUFG_GT #(
    .SIM_DEVICE("ULTRASCALE"),
    .STARTUP_SYNC("FALSE")) 
    bufg_gt_txoutclkmon_inst
       (.CE(lopt),
        .CEMASK(1'b1),
        .CLR(lopt_1),
        .CLRMASK(1'b1),
        .DIV({1'b0,1'b0,1'b0}),
        .I(txoutclk_out),
        .O(txoutclkmon));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    cal_fail_store_i_4
       (.I0(\repeat_ctr_reg_n_0_[1] ),
        .I1(\repeat_ctr_reg_n_0_[0] ),
        .I2(\repeat_ctr_reg_n_0_[2] ),
        .O(cal_fail_store_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cal_fail_store_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(U_TXOUTCLK_FREQ_COUNTER_n_19),
        .Q(cal_fail_store__0),
        .R(1'b0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY8 cpll_cal_state2_carry
       (.CI(U_TXOUTCLK_FREQ_COUNTER_n_52),
        .CI_TOP(1'b0),
        .CO({cpll_cal_state2,cpll_cal_state2_carry_n_1,cpll_cal_state2_carry_n_2,cpll_cal_state2_carry_n_3,cpll_cal_state2_carry_n_4,cpll_cal_state2_carry_n_5,cpll_cal_state2_carry_n_6,cpll_cal_state2_carry_n_7}),
        .DI({1'b0,1'b0,U_TXOUTCLK_FREQ_COUNTER_n_23,U_TXOUTCLK_FREQ_COUNTER_n_24,U_TXOUTCLK_FREQ_COUNTER_n_25,U_TXOUTCLK_FREQ_COUNTER_n_26,U_TXOUTCLK_FREQ_COUNTER_n_27,U_TXOUTCLK_FREQ_COUNTER_n_28}),
        .O(NLW_cpll_cal_state2_carry_O_UNCONNECTED[7:0]),
        .S({U_TXOUTCLK_FREQ_COUNTER_n_29,U_TXOUTCLK_FREQ_COUNTER_n_30,U_TXOUTCLK_FREQ_COUNTER_n_31,U_TXOUTCLK_FREQ_COUNTER_n_32,U_TXOUTCLK_FREQ_COUNTER_n_33,U_TXOUTCLK_FREQ_COUNTER_n_34,U_TXOUTCLK_FREQ_COUNTER_n_35,U_TXOUTCLK_FREQ_COUNTER_n_36}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY8 \cpll_cal_state2_inferred__0/i__carry 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\cpll_cal_state2_inferred__0/i__carry_n_0 ,\cpll_cal_state2_inferred__0/i__carry_n_1 ,\cpll_cal_state2_inferred__0/i__carry_n_2 ,\cpll_cal_state2_inferred__0/i__carry_n_3 ,\cpll_cal_state2_inferred__0/i__carry_n_4 ,\cpll_cal_state2_inferred__0/i__carry_n_5 ,\cpll_cal_state2_inferred__0/i__carry_n_6 ,\cpll_cal_state2_inferred__0/i__carry_n_7 }),
        .DI({U_TXOUTCLK_FREQ_COUNTER_n_37,U_TXOUTCLK_FREQ_COUNTER_n_38,U_TXOUTCLK_FREQ_COUNTER_n_39,U_TXOUTCLK_FREQ_COUNTER_n_40,U_TXOUTCLK_FREQ_COUNTER_n_41,U_TXOUTCLK_FREQ_COUNTER_n_42,1'b0,U_TXOUTCLK_FREQ_COUNTER_n_43}),
        .O(\NLW_cpll_cal_state2_inferred__0/i__carry_O_UNCONNECTED [7:0]),
        .S({U_TXOUTCLK_FREQ_COUNTER_n_44,U_TXOUTCLK_FREQ_COUNTER_n_45,U_TXOUTCLK_FREQ_COUNTER_n_46,U_TXOUTCLK_FREQ_COUNTER_n_47,U_TXOUTCLK_FREQ_COUNTER_n_48,U_TXOUTCLK_FREQ_COUNTER_n_49,U_TXOUTCLK_FREQ_COUNTER_n_50,U_TXOUTCLK_FREQ_COUNTER_n_51}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY8 \cpll_cal_state2_inferred__0/i__carry__0 
       (.CI(\cpll_cal_state2_inferred__0/i__carry_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_cpll_cal_state2_inferred__0/i__carry__0_CO_UNCONNECTED [7:1],cpll_cal_state26_in}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,U_TXOUTCLK_FREQ_COUNTER_n_53}),
        .O(\NLW_cpll_cal_state2_inferred__0/i__carry__0_O_UNCONNECTED [7:0]),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,U_TXOUTCLK_FREQ_COUNTER_n_54}));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cpll_cal_state[12]_i_1 
       (.I0(drp_done),
        .I1(p_0_in),
        .O(cpll_cal_state7_out[12]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT4 #(
    .INIT(16'hBA30)) 
    \cpll_cal_state[14]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(\wait_ctr[24]_i_6_n_0 ),
        .I2(p_18_in),
        .I3(p_17_in),
        .O(cpll_cal_state7_out[14]));
  LUT4 #(
    .INIT(16'hF222)) 
    \cpll_cal_state[15]_i_1 
       (.I0(p_17_in),
        .I1(\wait_ctr[24]_i_9_n_0 ),
        .I2(\wait_ctr[24]_i_5_n_0 ),
        .I3(p_16_in),
        .O(cpll_cal_state7_out[15]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT4 #(
    .INIT(16'hBA30)) 
    \cpll_cal_state[16]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(\wait_ctr[24]_i_5_n_0 ),
        .I2(p_16_in),
        .I3(p_15_in),
        .O(cpll_cal_state7_out[16]));
  LUT4 #(
    .INIT(16'hF222)) 
    \cpll_cal_state[17]_i_1 
       (.I0(p_15_in),
        .I1(\wait_ctr[24]_i_9_n_0 ),
        .I2(\wait_ctr[24]_i_5_n_0 ),
        .I3(p_14_in),
        .O(cpll_cal_state7_out[17]));
  LUT4 #(
    .INIT(16'h8F88)) 
    \cpll_cal_state[18]_i_1 
       (.I0(\wait_ctr[24]_i_6_n_0 ),
        .I1(p_13_in),
        .I2(\wait_ctr[24]_i_5_n_0 ),
        .I3(p_14_in),
        .O(cpll_cal_state7_out[18]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \cpll_cal_state[1]_i_1 
       (.I0(\cpll_cal_state_reg_n_0_[0] ),
        .I1(drp_done),
        .I2(p_1_in10_in),
        .O(cpll_cal_state7_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cpll_cal_state[27]_i_1 
       (.I0(drp_done),
        .I1(p_3_in),
        .O(cpll_cal_state7_out[27]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \cpll_cal_state[28]_i_1 
       (.I0(\cpll_cal_state_reg_n_0_[27] ),
        .I1(\wait_ctr[24]_i_6_n_0 ),
        .I2(\cpll_cal_state_reg_n_0_[28] ),
        .O(cpll_cal_state7_out[28]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cpll_cal_state[2]_i_1 
       (.I0(p_1_in10_in),
        .I1(drp_done),
        .O(cpll_cal_state7_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \cpll_cal_state[3]_i_1 
       (.I0(drp_done),
        .I1(p_1_in2_in),
        .I2(status_store__0),
        .I3(p_29_in),
        .O(cpll_cal_state7_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT5 #(
    .INIT(32'hFFE2E2E2)) 
    \cpll_cal_state[5]_i_1 
       (.I0(p_1_in5_in),
        .I1(drp_done),
        .I2(p_0_in7_in),
        .I3(status_store__0),
        .I4(p_29_in),
        .O(cpll_cal_state7_out[5]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cpll_cal_state[6]_i_1 
       (.I0(drp_done),
        .I1(p_1_in5_in),
        .O(cpll_cal_state7_out[6]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \cpll_cal_state[7]_i_1 
       (.I0(drp_done),
        .I1(p_1_in),
        .I2(status_store__0),
        .I3(p_25_in),
        .O(cpll_cal_state7_out[7]));
  LUT5 #(
    .INIT(32'hFFE2E2E2)) 
    \cpll_cal_state[9]_i_1 
       (.I0(p_4_in),
        .I1(drp_done),
        .I2(p_0_in3_in),
        .I3(status_store__0),
        .I4(p_25_in),
        .O(cpll_cal_state7_out[9]));
  FDSE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(\cpll_cal_state_reg_n_0_[0] ),
        .S(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[10] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_4_in),
        .Q(p_0_in0_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[11] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_0_in0_in),
        .Q(p_0_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[12] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[12]),
        .Q(\cpll_cal_state_reg_n_0_[12] ),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[13] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[13]),
        .Q(p_18_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[14] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[14]),
        .Q(p_17_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[15] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[15]),
        .Q(p_16_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[16] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[16]),
        .Q(p_15_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[17] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[17]),
        .Q(p_14_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[18] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[18]),
        .Q(p_13_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[19] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[19]),
        .Q(p_12_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[1]),
        .Q(p_1_in10_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[20] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[20]),
        .Q(p_11_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[21] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[21]),
        .Q(p_2_in8_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[22] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_2_in8_in),
        .Q(p_2_in4_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[23] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_2_in4_in),
        .Q(p_2_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[24] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_2_in),
        .Q(p_2_in1_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[25] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_2_in1_in),
        .Q(p_3_in9_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[26] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_3_in9_in),
        .Q(p_3_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[27] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[27]),
        .Q(\cpll_cal_state_reg_n_0_[27] ),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[28] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[28]),
        .Q(\cpll_cal_state_reg_n_0_[28] ),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[29] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[29]),
        .Q(\cpll_cal_state_reg_n_0_[29] ),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[2]),
        .Q(p_29_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[30] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[30]),
        .Q(\cpll_cal_state_reg_n_0_[30] ),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[31] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[31]),
        .Q(\cpll_cal_state_reg_n_0_[31] ),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[3] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[3]),
        .Q(p_1_in2_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[4] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_1_in2_in),
        .Q(p_0_in7_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[5] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[5]),
        .Q(p_1_in5_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[6] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[6]),
        .Q(p_25_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[7] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[7]),
        .Q(p_1_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[8] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_1_in),
        .Q(p_0_in3_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[9] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[9]),
        .Q(p_4_in),
        .R(cal_on_tx_reset_in_sync));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT5 #(
    .INIT(32'hFFDD2F00)) 
    cpllpd_int_i_1
       (.I0(p_17_in),
        .I1(\wait_ctr[24]_i_9_n_0 ),
        .I2(\wait_ctr[24]_i_6_n_0 ),
        .I3(p_18_in),
        .I4(cpllpd_int_reg_0),
        .O(cpllpd_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cpllpd_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpllpd_int_i_1_n_0),
        .Q(cpllpd_int_reg_0),
        .R(cal_on_tx_reset_in_sync));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'hFFDD2F00)) 
    cpllreset_int_i_1
       (.I0(p_15_in),
        .I1(\wait_ctr[24]_i_9_n_0 ),
        .I2(\wait_ctr[24]_i_5_n_0 ),
        .I3(p_16_in),
        .I4(cpllreset_int_reg_0),
        .O(cpllreset_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cpllreset_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpllreset_int_i_1_n_0),
        .Q(cpllreset_int_reg_0),
        .R(cal_on_tx_reset_in_sync));
  LUT5 #(
    .INIT(32'h00000100)) 
    \daddr[1]_i_1__0 
       (.I0(p_0_in0_in),
        .I1(p_2_in1_in),
        .I2(p_1_in2_in),
        .I3(\daddr[5]_i_2_n_0 ),
        .I4(\daddr[4]_i_2_n_0 ),
        .O(daddr0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \daddr[2]_i_1__0 
       (.I0(p_1_in5_in),
        .I1(p_2_in4_in),
        .I2(p_0_in3_in),
        .I3(p_3_in),
        .I4(\daddr[4]_i_2_n_0 ),
        .O(daddr0_in[2]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \daddr[3]_i_1__0 
       (.I0(p_3_in9_in),
        .I1(p_2_in8_in),
        .I2(p_4_in),
        .I3(p_0_in7_in),
        .I4(p_1_in10_in),
        .I5(\cpll_cal_state_reg_n_0_[0] ),
        .O(daddr0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT5 #(
    .INIT(32'h00015555)) 
    \daddr[4]_i_1__0 
       (.I0(\daddr[4]_i_2_n_0 ),
        .I1(p_1_in2_in),
        .I2(p_2_in1_in),
        .I3(p_0_in0_in),
        .I4(\daddr[5]_i_2_n_0 ),
        .O(daddr0_in[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \daddr[4]_i_2 
       (.I0(\cpll_cal_state_reg_n_0_[0] ),
        .I1(p_1_in10_in),
        .I2(p_0_in7_in),
        .I3(p_4_in),
        .I4(p_2_in8_in),
        .I5(p_3_in9_in),
        .O(\daddr[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h4545454545454555)) 
    \daddr[5]_i_1__0 
       (.I0(\cpll_cal_state_reg_n_0_[0] ),
        .I1(\daddr[6]_i_2_n_0 ),
        .I2(\daddr[5]_i_2_n_0 ),
        .I3(p_0_in0_in),
        .I4(p_2_in1_in),
        .I5(p_1_in2_in),
        .O(\daddr[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \daddr[5]_i_2 
       (.I0(p_3_in),
        .I1(p_0_in3_in),
        .I2(p_2_in4_in),
        .I3(p_1_in5_in),
        .O(\daddr[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555554)) 
    \daddr[6]_i_1__0 
       (.I0(\cpll_cal_state_reg_n_0_[0] ),
        .I1(\daddr[6]_i_2_n_0 ),
        .I2(p_3_in),
        .I3(p_0_in3_in),
        .I4(p_2_in4_in),
        .I5(p_1_in5_in),
        .O(\daddr[6]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \daddr[6]_i_2 
       (.I0(p_3_in9_in),
        .I1(p_2_in8_in),
        .I2(p_4_in),
        .I3(p_0_in7_in),
        .I4(p_1_in10_in),
        .O(\daddr[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \daddr[7]_i_1__0 
       (.I0(p_0_in),
        .I1(p_2_in),
        .I2(p_1_in),
        .I3(\daddr[7]_i_3_n_0 ),
        .O(\daddr[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFE)) 
    \daddr[7]_i_2__0 
       (.I0(p_1_in10_in),
        .I1(p_0_in7_in),
        .I2(p_4_in),
        .I3(p_2_in8_in),
        .I4(p_3_in9_in),
        .I5(\cpll_cal_state_reg_n_0_[0] ),
        .O(daddr0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    \daddr[7]_i_3 
       (.I0(\daddr[4]_i_2_n_0 ),
        .I1(\daddr[5]_i_2_n_0 ),
        .I2(p_1_in2_in),
        .I3(p_2_in1_in),
        .I4(p_0_in0_in),
        .O(\daddr[7]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[1] 
       (.C(drpclk_in),
        .CE(\daddr[7]_i_1__0_n_0 ),
        .D(daddr0_in[1]),
        .Q(\daddr_reg[7]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[2] 
       (.C(drpclk_in),
        .CE(\daddr[7]_i_1__0_n_0 ),
        .D(daddr0_in[2]),
        .Q(\daddr_reg[7]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[3] 
       (.C(drpclk_in),
        .CE(\daddr[7]_i_1__0_n_0 ),
        .D(daddr0_in[3]),
        .Q(\daddr_reg[7]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[4] 
       (.C(drpclk_in),
        .CE(\daddr[7]_i_1__0_n_0 ),
        .D(daddr0_in[4]),
        .Q(\daddr_reg[7]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[5] 
       (.C(drpclk_in),
        .CE(\daddr[7]_i_1__0_n_0 ),
        .D(\daddr[5]_i_1__0_n_0 ),
        .Q(\daddr_reg[7]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[6] 
       (.C(drpclk_in),
        .CE(\daddr[7]_i_1__0_n_0 ),
        .D(\daddr[6]_i_1__0_n_0 ),
        .Q(\daddr_reg[7]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[7] 
       (.C(drpclk_in),
        .CE(\daddr[7]_i_1__0_n_0 ),
        .D(daddr0_in[7]),
        .Q(\daddr_reg[7]_0 [6]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFCDFFCC)) 
    den_i_1
       (.I0(\drp_state_reg_n_0_[5] ),
        .I1(\drp_state_reg_n_0_[4] ),
        .I2(\drp_state_reg_n_0_[2] ),
        .I3(\drp_state_reg_n_0_[1] ),
        .I4(cal_on_tx_drpen_out),
        .O(den_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    den_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(den_i_1_n_0),
        .Q(cal_on_tx_drpen_out));
  LUT6 #(
    .INIT(64'hFFFF44F444F444F4)) 
    \di_msk[0]_i_1 
       (.I0(\di_msk[12]_i_2_n_0 ),
        .I1(\progclk_sel_store_reg_n_0_[0] ),
        .I2(\progdiv_cfg_store_reg_n_0_[0] ),
        .I3(\di_msk[12]_i_3_n_0 ),
        .I4(p_0_in0_in),
        .I5(\x0e1_store_reg_n_0_[0] ),
        .O(\di_msk[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFE0E0E0E0E0)) 
    \di_msk[10]_i_1 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[10] ),
        .I3(p_0_in7_in),
        .I4(p_2_in1_in),
        .I5(\progclk_sel_store_reg_n_0_[10] ),
        .O(\di_msk[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFE0E0FFE0)) 
    \di_msk[11]_i_1 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[11] ),
        .I3(\progclk_sel_store_reg_n_0_[11] ),
        .I4(\di_msk[12]_i_2_n_0 ),
        .I5(p_0_in0_in),
        .O(\di_msk[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF44F444F444F4)) 
    \di_msk[12]_i_1 
       (.I0(\di_msk[12]_i_2_n_0 ),
        .I1(\progclk_sel_store_reg_n_0_[12] ),
        .I2(\progdiv_cfg_store_reg_n_0_[12] ),
        .I3(\di_msk[12]_i_3_n_0 ),
        .I4(p_0_in0_in),
        .I5(\x0e1_store_reg_n_0_[12] ),
        .O(\di_msk[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \di_msk[12]_i_2 
       (.I0(p_0_in7_in),
        .I1(p_2_in1_in),
        .O(\di_msk[12]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \di_msk[12]_i_3 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .O(\di_msk[12]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFE0)) 
    \di_msk[13]_i_1 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[13] ),
        .I3(\di_msk[13]_i_2_n_0 ),
        .O(\di_msk[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \di_msk[13]_i_2 
       (.I0(p_0_in7_in),
        .I1(p_2_in1_in),
        .I2(\progclk_sel_store_reg_n_0_[13] ),
        .I3(p_0_in0_in),
        .I4(\x0e1_store_reg_n_0_[13] ),
        .I5(p_0_in),
        .O(\di_msk[13]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFE0)) 
    \di_msk[14]_i_1 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[14] ),
        .I3(\di_msk[14]_i_2_n_0 ),
        .O(\di_msk[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \di_msk[14]_i_2 
       (.I0(p_0_in7_in),
        .I1(p_2_in1_in),
        .I2(\progclk_sel_store_reg_n_0_[14] ),
        .I3(p_0_in0_in),
        .I4(\x0e1_store_reg_n_0_[14] ),
        .I5(p_0_in),
        .O(\di_msk[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h54)) 
    \di_msk[15]_i_1 
       (.I0(cal_on_tx_reset_in_sync),
        .I1(\di_msk[15]_i_3_n_0 ),
        .I2(\cpll_cal_state_reg_n_0_[0] ),
        .O(\di_msk[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT5 #(
    .INIT(32'hFFFFFFE0)) 
    \di_msk[15]_i_2 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[15] ),
        .I3(p_0_in7_in),
        .I4(p_0_in),
        .O(\di_msk[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    \di_msk[15]_i_3 
       (.I0(p_0_in0_in),
        .I1(p_3_in9_in),
        .I2(p_0_in3_in),
        .I3(p_3_in),
        .I4(\di_msk[12]_i_2_n_0 ),
        .I5(\di_msk[15]_i_4_n_0 ),
        .O(\di_msk[15]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \di_msk[15]_i_4 
       (.I0(p_0_in),
        .I1(p_2_in),
        .O(\di_msk[15]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT4 #(
    .INIT(16'hFFE0)) 
    \di_msk[1]_i_1 
       (.I0(p_0_in7_in),
        .I1(p_2_in1_in),
        .I2(\progclk_sel_store_reg_n_0_[1] ),
        .I3(\di_msk[1]_i_2_n_0 ),
        .O(\di_msk[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \di_msk[1]_i_2 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[1] ),
        .I3(p_0_in0_in),
        .I4(\x0e1_store_reg_n_0_[1] ),
        .I5(p_0_in),
        .O(\di_msk[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF444F444FFFFF444)) 
    \di_msk[2]_i_1 
       (.I0(\di_msk[12]_i_3_n_0 ),
        .I1(\progdiv_cfg_store_reg_n_0_[2] ),
        .I2(p_0_in0_in),
        .I3(\x0e1_store_reg_n_0_[2] ),
        .I4(\progclk_sel_store_reg_n_0_[2] ),
        .I5(\di_msk[12]_i_2_n_0 ),
        .O(\di_msk[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF444F444FFFFF444)) 
    \di_msk[3]_i_1 
       (.I0(\di_msk[12]_i_3_n_0 ),
        .I1(\progdiv_cfg_store_reg_n_0_[3] ),
        .I2(p_0_in0_in),
        .I3(\x0e1_store_reg_n_0_[3] ),
        .I4(\progclk_sel_store_reg_n_0_[3] ),
        .I5(\di_msk[12]_i_2_n_0 ),
        .O(\di_msk[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF44F444F444F4)) 
    \di_msk[4]_i_1 
       (.I0(\di_msk[12]_i_2_n_0 ),
        .I1(\progclk_sel_store_reg_n_0_[4] ),
        .I2(\progdiv_cfg_store_reg_n_0_[4] ),
        .I3(\di_msk[12]_i_3_n_0 ),
        .I4(p_0_in0_in),
        .I5(\x0e1_store_reg_n_0_[4] ),
        .O(\di_msk[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT4 #(
    .INIT(16'hFFE0)) 
    \di_msk[5]_i_1 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[5] ),
        .I3(\di_msk[5]_i_2_n_0 ),
        .O(\di_msk[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \di_msk[5]_i_2 
       (.I0(p_0_in7_in),
        .I1(p_2_in1_in),
        .I2(\progclk_sel_store_reg_n_0_[5] ),
        .I3(p_0_in0_in),
        .I4(\x0e1_store_reg_n_0_[5] ),
        .I5(p_0_in),
        .O(\di_msk[5]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFE0)) 
    \di_msk[6]_i_1 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[6] ),
        .I3(\di_msk[6]_i_2_n_0 ),
        .O(\di_msk[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \di_msk[6]_i_2 
       (.I0(p_0_in7_in),
        .I1(p_2_in1_in),
        .I2(\progclk_sel_store_reg_n_0_[6] ),
        .I3(p_0_in0_in),
        .I4(\x0e1_store_reg_n_0_[6] ),
        .I5(p_0_in),
        .O(\di_msk[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF444F444FFFFF444)) 
    \di_msk[7]_i_1 
       (.I0(\di_msk[12]_i_3_n_0 ),
        .I1(\progdiv_cfg_store_reg_n_0_[7] ),
        .I2(p_0_in0_in),
        .I3(\x0e1_store_reg_n_0_[7] ),
        .I4(\progclk_sel_store_reg_n_0_[7] ),
        .I5(\di_msk[12]_i_2_n_0 ),
        .O(\di_msk[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF44F444F444F4)) 
    \di_msk[8]_i_1 
       (.I0(\di_msk[12]_i_2_n_0 ),
        .I1(\progclk_sel_store_reg_n_0_[8] ),
        .I2(\progdiv_cfg_store_reg_n_0_[8] ),
        .I3(\di_msk[12]_i_3_n_0 ),
        .I4(p_0_in0_in),
        .I5(\x0e1_store_reg_n_0_[8] ),
        .O(\di_msk[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF44F444F444F4)) 
    \di_msk[9]_i_1 
       (.I0(\di_msk[12]_i_2_n_0 ),
        .I1(\progclk_sel_store_reg_n_0_[9] ),
        .I2(\progdiv_cfg_store_reg_n_0_[9] ),
        .I3(\di_msk[12]_i_3_n_0 ),
        .I4(p_0_in0_in),
        .I5(\x0e1_store_reg_n_0_[9] ),
        .O(\di_msk[9]_i_1_n_0 ));
  FDRE \di_msk_reg[0] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[0]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \di_msk_reg[10] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[10]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \di_msk_reg[11] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[11]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \di_msk_reg[12] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[12]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \di_msk_reg[13] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[13]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \di_msk_reg[14] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[14]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \di_msk_reg[15] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[15]_i_2_n_0 ),
        .Q(\di_msk_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \di_msk_reg[1] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[1]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \di_msk_reg[2] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[2]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \di_msk_reg[3] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[3]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \di_msk_reg[4] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[4]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \di_msk_reg[5] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[5]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \di_msk_reg[6] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[6]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \di_msk_reg[7] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[7]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \di_msk_reg[8] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[8]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \di_msk_reg[9] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[9]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[9] ),
        .R(1'b0));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[0] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[0] ),
        .Q(\di_reg[15]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[10] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[10] ),
        .Q(\di_reg[15]_0 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[11] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[11] ),
        .Q(\di_reg[15]_0 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[12] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[12] ),
        .Q(\di_reg[15]_0 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[13] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[13] ),
        .Q(\di_reg[15]_0 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[14] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[14] ),
        .Q(\di_reg[15]_0 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[15] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[15] ),
        .Q(\di_reg[15]_0 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[1] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[1] ),
        .Q(\di_reg[15]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[2] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[2] ),
        .Q(\di_reg[15]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[3] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[3] ),
        .Q(\di_reg[15]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[4] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[4] ),
        .Q(\di_reg[15]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[5] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[5] ),
        .Q(\di_reg[15]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[6] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[6] ),
        .Q(\di_reg[15]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[7] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[7] ),
        .Q(\di_reg[15]_0 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[8] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[8] ),
        .Q(\di_reg[15]_0 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[9] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[9] ),
        .Q(\di_reg[15]_0 [9]));
  LUT4 #(
    .INIT(16'hAABA)) 
    \drp_state[0]_i_1__0 
       (.I0(drp_done),
        .I1(rd),
        .I2(\drp_state_reg_n_0_[0] ),
        .I3(wr),
        .O(\drp_state[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_state[1]_i_1__0 
       (.I0(rd),
        .I1(\drp_state_reg_n_0_[0] ),
        .O(\drp_state[1]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \drp_state[2]_i_1__0 
       (.I0(\drp_state_reg_n_0_[1] ),
        .I1(cal_on_tx_drdy),
        .I2(\drp_state_reg_n_0_[2] ),
        .O(\drp_state[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \drp_state[3]_i_1 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(cal_on_tx_drdy),
        .I2(rd),
        .O(\drp_state[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT4 #(
    .INIT(16'hBAAA)) 
    \drp_state[4]_i_1__0 
       (.I0(\drp_state_reg_n_0_[3] ),
        .I1(rd),
        .I2(\drp_state_reg_n_0_[0] ),
        .I3(wr),
        .O(\drp_state[4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \drp_state[5]_i_1__0 
       (.I0(\drp_state_reg_n_0_[4] ),
        .I1(cal_on_tx_drdy),
        .I2(\drp_state_reg_n_0_[5] ),
        .O(\drp_state[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT4 #(
    .INIT(16'hA888)) 
    \drp_state[6]_i_1__0 
       (.I0(cal_on_tx_drdy),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(rd),
        .I3(\drp_state_reg_n_0_[2] ),
        .O(\drp_state[6]_i_1__0_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \drp_state_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(\drp_state[0]_i_1__0_n_0 ),
        .PRE(cal_on_tx_reset_in_sync),
        .Q(\drp_state_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \drp_state_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\drp_state[1]_i_1__0_n_0 ),
        .Q(\drp_state_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \drp_state_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\drp_state[2]_i_1__0_n_0 ),
        .Q(\drp_state_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \drp_state_reg[3] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\drp_state[3]_i_1_n_0 ),
        .Q(\drp_state_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \drp_state_reg[4] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\drp_state[4]_i_1__0_n_0 ),
        .Q(\drp_state_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \drp_state_reg[5] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\drp_state[5]_i_1__0_n_0 ),
        .Q(\drp_state_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \drp_state_reg[6] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\drp_state[6]_i_1__0_n_0 ),
        .Q(drp_done));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    dwe_i_1
       (.I0(\drp_state_reg_n_0_[4] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(cal_on_tx_drpwe_out),
        .O(dwe_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    dwe_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(dwe_i_1_n_0),
        .Q(cal_on_tx_drpwe_out));
  FDRE #(
    .INIT(1'b1)) 
    freq_counter_rst_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_txprgdivresetdone_inst_n_0),
        .Q(freq_counter_rst_reg_n_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEEEFEEEE)) 
    mask_user_in_i_1
       (.I0(\cpll_cal_state_reg_n_0_[0] ),
        .I1(p_1_in10_in),
        .I2(\cpll_cal_state_reg_n_0_[30] ),
        .I3(\cpll_cal_state_reg_n_0_[31] ),
        .I4(mask_user_in_reg_n_0),
        .O(mask_user_in_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mask_user_in_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(mask_user_in_i_1_n_0),
        .Q(mask_user_in_reg_n_0),
        .R(cal_on_tx_reset_in_sync));
  FDRE \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_txoutclksel_inst0_n_0),
        .Q(\non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[2]_0 [0]),
        .R(1'b0));
  FDRE \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_txoutclksel_inst1_n_0),
        .Q(\non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[2]_0 [1]),
        .R(1'b0));
  FDRE \non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_txoutclksel_inst2_n_0),
        .Q(\non_pcie_txoutclksel.GTHE4_TXOUTCLKSEL_OUT_reg[2]_0 [2]),
        .R(1'b0));
  FDRE \non_pcie_txoutclksel.GTHE4_TXPROGDIVRESET_OUT_reg 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_txprogdivreset_inst_n_0),
        .Q(\gen_gtwizard_gthe4.txprogdivreset_ch_int ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h4440)) 
    \progclk_sel_store[14]_i_1 
       (.I0(cal_on_tx_reset_in_sync),
        .I1(drp_done),
        .I2(p_2_in8_in),
        .I3(p_1_in2_in),
        .O(progclk_sel_store));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[0] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[0]),
        .Q(\progclk_sel_store_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[10] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[10]),
        .Q(\progclk_sel_store_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[11] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[11]),
        .Q(\progclk_sel_store_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[12] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[12]),
        .Q(\progclk_sel_store_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[13] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[13]),
        .Q(\progclk_sel_store_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[14] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[14]),
        .Q(\progclk_sel_store_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[1] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[1]),
        .Q(\progclk_sel_store_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[2] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[2]),
        .Q(\progclk_sel_store_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[3] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[3]),
        .Q(\progclk_sel_store_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[4] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[4]),
        .Q(\progclk_sel_store_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[5] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[5]),
        .Q(\progclk_sel_store_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[6] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[6]),
        .Q(\progclk_sel_store_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[7] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[7]),
        .Q(\progclk_sel_store_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[8] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[8]),
        .Q(\progclk_sel_store_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[9] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[9]),
        .Q(\progclk_sel_store_reg_n_0_[9] ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h4440)) 
    \progdiv_cfg_store[14]_i_1 
       (.I0(cal_on_tx_reset_in_sync),
        .I1(drp_done),
        .I2(p_2_in4_in),
        .I3(p_1_in),
        .O(progdiv_cfg_store));
  LUT6 #(
    .INIT(64'hFFFFEFFF30302000)) 
    \progdiv_cfg_store[15]_i_1 
       (.I0(Q[15]),
        .I1(cal_on_tx_reset_in_sync),
        .I2(drp_done),
        .I3(p_2_in4_in),
        .I4(p_1_in),
        .I5(\progdiv_cfg_store_reg_n_0_[15] ),
        .O(\progdiv_cfg_store[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[0] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[0]),
        .Q(\progdiv_cfg_store_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[10] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[10]),
        .Q(\progdiv_cfg_store_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[11] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[11]),
        .Q(\progdiv_cfg_store_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[12] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[12]),
        .Q(\progdiv_cfg_store_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[13] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[13]),
        .Q(\progdiv_cfg_store_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[14] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[14]),
        .Q(\progdiv_cfg_store_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[15] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(\progdiv_cfg_store[15]_i_1_n_0 ),
        .Q(\progdiv_cfg_store_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[1] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[1]),
        .Q(\progdiv_cfg_store_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[2] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[2]),
        .Q(\progdiv_cfg_store_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[3] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[3]),
        .Q(\progdiv_cfg_store_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[4] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[4]),
        .Q(\progdiv_cfg_store_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[5] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[5]),
        .Q(\progdiv_cfg_store_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[6] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[6]),
        .Q(\progdiv_cfg_store_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[7] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[7]),
        .Q(\progdiv_cfg_store_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[8] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[8]),
        .Q(\progdiv_cfg_store_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[9] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[9]),
        .Q(\progdiv_cfg_store_reg_n_0_[9] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h5555555755555554)) 
    rd_i_1__0
       (.I0(drp_done),
        .I1(p_1_in),
        .I2(p_2_in4_in),
        .I3(p_4_in),
        .I4(rd_i_2_n_0),
        .I5(rd),
        .O(rd_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    rd_i_2
       (.I0(p_1_in5_in),
        .I1(p_1_in10_in),
        .I2(p_2_in8_in),
        .I3(p_1_in2_in),
        .O(rd_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rd_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rd_i_1__0_n_0),
        .Q(rd),
        .R(cal_on_tx_reset_in_sync));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \repeat_ctr[0]_i_1 
       (.I0(p_11_in),
        .I1(\repeat_ctr_reg_n_0_[0] ),
        .O(\repeat_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \repeat_ctr[1]_i_1 
       (.I0(p_11_in),
        .I1(\repeat_ctr_reg_n_0_[0] ),
        .I2(\repeat_ctr_reg_n_0_[1] ),
        .O(\repeat_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT4 #(
    .INIT(16'h2888)) 
    \repeat_ctr[2]_i_1 
       (.I0(p_11_in),
        .I1(\repeat_ctr_reg_n_0_[2] ),
        .I2(\repeat_ctr_reg_n_0_[1] ),
        .I3(\repeat_ctr_reg_n_0_[0] ),
        .O(\repeat_ctr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT5 #(
    .INIT(32'h28888888)) 
    \repeat_ctr[3]_i_2 
       (.I0(p_11_in),
        .I1(\repeat_ctr_reg_n_0_[3] ),
        .I2(\repeat_ctr_reg_n_0_[2] ),
        .I3(\repeat_ctr_reg_n_0_[0] ),
        .I4(\repeat_ctr_reg_n_0_[1] ),
        .O(\repeat_ctr[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \repeat_ctr[3]_i_3 
       (.I0(\repeat_ctr_reg_n_0_[3] ),
        .I1(\repeat_ctr_reg_n_0_[2] ),
        .I2(\repeat_ctr_reg_n_0_[0] ),
        .I3(\repeat_ctr_reg_n_0_[1] ),
        .O(\repeat_ctr[3]_i_3_n_0 ));
  FDRE \repeat_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(U_TXOUTCLK_FREQ_COUNTER_n_18),
        .D(\repeat_ctr[0]_i_1_n_0 ),
        .Q(\repeat_ctr_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \repeat_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(U_TXOUTCLK_FREQ_COUNTER_n_18),
        .D(\repeat_ctr[1]_i_1_n_0 ),
        .Q(\repeat_ctr_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \repeat_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(U_TXOUTCLK_FREQ_COUNTER_n_18),
        .D(\repeat_ctr[2]_i_1_n_0 ),
        .Q(\repeat_ctr_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \repeat_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(U_TXOUTCLK_FREQ_COUNTER_n_18),
        .D(\repeat_ctr[3]_i_2_n_0 ),
        .Q(\repeat_ctr_reg_n_0_[3] ),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    rst_in_meta_i_1__2
       (.I0(USER_CPLLLOCK_OUT_reg_0),
        .O(rst_in0));
  LUT6 #(
    .INIT(64'hFFABFFFF00A80000)) 
    status_store_i_1
       (.I0(Q[15]),
        .I1(p_1_in5_in),
        .I2(p_1_in10_in),
        .I3(cal_on_tx_reset_in_sync),
        .I4(drp_done),
        .I5(status_store__0),
        .O(status_store_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    status_store_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(status_store_i_1_n_0),
        .Q(status_store__0),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h0E)) 
    \txoutclksel_int[2]_i_1 
       (.I0(txoutclksel_int),
        .I1(\cpll_cal_state_reg_n_0_[12] ),
        .I2(\cpll_cal_state_reg_n_0_[0] ),
        .O(\txoutclksel_int[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txoutclksel_int_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(\txoutclksel_int[2]_i_1_n_0 ),
        .Q(txoutclksel_int),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    txprogdivreset_int_i_1
       (.I0(\wait_ctr[24]_i_6_n_0 ),
        .I1(\cpll_cal_state_reg_n_0_[28] ),
        .I2(p_13_in),
        .I3(txprogdivreset_int),
        .O(txprogdivreset_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txprogdivreset_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(txprogdivreset_int_i_1_n_0),
        .Q(txprogdivreset_int),
        .R(cal_on_tx_reset_in_sync));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 wait_ctr0_carry
       (.CI(\wait_ctr_reg_n_0_[0] ),
        .CI_TOP(1'b0),
        .CO({wait_ctr0_carry_n_0,wait_ctr0_carry_n_1,wait_ctr0_carry_n_2,wait_ctr0_carry_n_3,wait_ctr0_carry_n_4,wait_ctr0_carry_n_5,wait_ctr0_carry_n_6,wait_ctr0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({wait_ctr0_carry_n_8,wait_ctr0_carry_n_9,wait_ctr0_carry_n_10,wait_ctr0_carry_n_11,wait_ctr0_carry_n_12,wait_ctr0_carry_n_13,wait_ctr0_carry_n_14,wait_ctr0_carry_n_15}),
        .S({\wait_ctr_reg_n_0_[8] ,\wait_ctr_reg_n_0_[7] ,\wait_ctr_reg_n_0_[6] ,\wait_ctr_reg_n_0_[5] ,\wait_ctr_reg_n_0_[4] ,\wait_ctr_reg_n_0_[3] ,\wait_ctr_reg_n_0_[2] ,\wait_ctr_reg_n_0_[1] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 wait_ctr0_carry__0
       (.CI(wait_ctr0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({wait_ctr0_carry__0_n_0,wait_ctr0_carry__0_n_1,wait_ctr0_carry__0_n_2,wait_ctr0_carry__0_n_3,wait_ctr0_carry__0_n_4,wait_ctr0_carry__0_n_5,wait_ctr0_carry__0_n_6,wait_ctr0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({wait_ctr0_carry__0_n_8,wait_ctr0_carry__0_n_9,wait_ctr0_carry__0_n_10,wait_ctr0_carry__0_n_11,wait_ctr0_carry__0_n_12,wait_ctr0_carry__0_n_13,wait_ctr0_carry__0_n_14,wait_ctr0_carry__0_n_15}),
        .S({\wait_ctr_reg_n_0_[16] ,\wait_ctr_reg_n_0_[15] ,\wait_ctr_reg_n_0_[14] ,\wait_ctr_reg_n_0_[13] ,\wait_ctr_reg_n_0_[12] ,\wait_ctr_reg_n_0_[11] ,\wait_ctr_reg_n_0_[10] ,\wait_ctr_reg_n_0_[9] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 wait_ctr0_carry__1
       (.CI(wait_ctr0_carry__0_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_wait_ctr0_carry__1_CO_UNCONNECTED[7],wait_ctr0_carry__1_n_1,wait_ctr0_carry__1_n_2,wait_ctr0_carry__1_n_3,wait_ctr0_carry__1_n_4,wait_ctr0_carry__1_n_5,wait_ctr0_carry__1_n_6,wait_ctr0_carry__1_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({wait_ctr0_carry__1_n_8,wait_ctr0_carry__1_n_9,wait_ctr0_carry__1_n_10,wait_ctr0_carry__1_n_11,wait_ctr0_carry__1_n_12,wait_ctr0_carry__1_n_13,wait_ctr0_carry__1_n_14,wait_ctr0_carry__1_n_15}),
        .S({\wait_ctr_reg_n_0_[24] ,\wait_ctr_reg_n_0_[23] ,\wait_ctr_reg_n_0_[22] ,\wait_ctr_reg_n_0_[21] ,\wait_ctr_reg_n_0_[20] ,\wait_ctr_reg_n_0_[19] ,\wait_ctr_reg_n_0_[18] ,\wait_ctr_reg_n_0_[17] }));
  LUT5 #(
    .INIT(32'h22203333)) 
    \wait_ctr[0]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(\wait_ctr_reg_n_0_[0] ),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[10]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__0_n_14),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[11]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__0_n_13),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[12]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__0_n_12),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[12]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[13]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__0_n_11),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[13]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[14]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__0_n_10),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[15]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__0_n_9),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[16]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__0_n_8),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[16]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[17]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__1_n_15),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[17]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[18]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__1_n_14),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[18]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[19]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__1_n_13),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[1]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry_n_15),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[20]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__1_n_12),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[20]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[21]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__1_n_11),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[21]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[22]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__1_n_10),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[23]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__1_n_9),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0202020202020222)) 
    \wait_ctr[24]_i_1 
       (.I0(\wait_ctr[24]_i_2_n_0 ),
        .I1(\wait_ctr[24]_i_4_n_0 ),
        .I2(\wait_ctr[24]_i_5_n_0 ),
        .I3(\wait_ctr[24]_i_6_n_0 ),
        .I4(p_16_in),
        .I5(p_14_in),
        .O(\wait_ctr[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \wait_ctr[24]_i_10 
       (.I0(\wait_ctr_reg_n_0_[22] ),
        .I1(\wait_ctr_reg_n_0_[21] ),
        .I2(\wait_ctr_reg_n_0_[24] ),
        .I3(\wait_ctr_reg_n_0_[23] ),
        .I4(\wait_ctr[24]_i_16_n_0 ),
        .O(\wait_ctr[24]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT5 #(
    .INIT(32'hFFFFFF80)) 
    \wait_ctr[24]_i_11 
       (.I0(\wait_ctr_reg_n_0_[9] ),
        .I1(\wait_ctr_reg_n_0_[8] ),
        .I2(\wait_ctr_reg_n_0_[7] ),
        .I3(\wait_ctr_reg_n_0_[10] ),
        .I4(\wait_ctr_reg_n_0_[11] ),
        .O(\wait_ctr[24]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFA800)) 
    \wait_ctr[24]_i_12 
       (.I0(\wait_ctr_reg_n_0_[6] ),
        .I1(\wait_ctr_reg_n_0_[4] ),
        .I2(\wait_ctr_reg_n_0_[5] ),
        .I3(\wait_ctr[24]_i_18_n_0 ),
        .I4(\wait_ctr_reg_n_0_[12] ),
        .I5(\wait_ctr_reg_n_0_[13] ),
        .O(\wait_ctr[24]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_ctr[24]_i_13 
       (.I0(\wait_ctr[24]_i_19_n_0 ),
        .I1(\wait_ctr_reg_n_0_[7] ),
        .I2(\wait_ctr_reg_n_0_[9] ),
        .I3(\wait_ctr_reg_n_0_[12] ),
        .I4(\wait_ctr_reg_n_0_[8] ),
        .I5(\wait_ctr[24]_i_20_n_0 ),
        .O(\wait_ctr[24]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_ctr[24]_i_14 
       (.I0(\wait_ctr_reg_n_0_[13] ),
        .I1(\wait_ctr_reg_n_0_[14] ),
        .I2(\wait_ctr_reg_n_0_[15] ),
        .I3(\wait_ctr_reg_n_0_[16] ),
        .O(\wait_ctr[24]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_ctr[24]_i_15 
       (.I0(\wait_ctr_reg_n_0_[23] ),
        .I1(\wait_ctr_reg_n_0_[24] ),
        .I2(\wait_ctr_reg_n_0_[21] ),
        .I3(\wait_ctr_reg_n_0_[22] ),
        .O(\wait_ctr[24]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_ctr[24]_i_16 
       (.I0(\wait_ctr_reg_n_0_[17] ),
        .I1(\wait_ctr_reg_n_0_[18] ),
        .I2(\wait_ctr_reg_n_0_[19] ),
        .I3(\wait_ctr_reg_n_0_[20] ),
        .O(\wait_ctr[24]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_ctr[24]_i_17 
       (.I0(\wait_ctr_reg_n_0_[6] ),
        .I1(\wait_ctr_reg_n_0_[5] ),
        .I2(\wait_ctr_reg_n_0_[11] ),
        .I3(\wait_ctr_reg_n_0_[10] ),
        .I4(\wait_ctr_reg_n_0_[3] ),
        .I5(\wait_ctr_reg_n_0_[4] ),
        .O(\wait_ctr[24]_i_17_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \wait_ctr[24]_i_18 
       (.I0(\wait_ctr_reg_n_0_[9] ),
        .I1(\wait_ctr_reg_n_0_[8] ),
        .O(\wait_ctr[24]_i_18_n_0 ));
  LUT5 #(
    .INIT(32'hFE000000)) 
    \wait_ctr[24]_i_19 
       (.I0(\wait_ctr_reg_n_0_[2] ),
        .I1(\wait_ctr_reg_n_0_[1] ),
        .I2(\wait_ctr_reg_n_0_[0] ),
        .I3(\wait_ctr_reg_n_0_[3] ),
        .I4(\wait_ctr_reg_n_0_[4] ),
        .O(\wait_ctr[24]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h5555550455555555)) 
    \wait_ctr[24]_i_2 
       (.I0(cal_on_tx_reset_in_sync),
        .I1(p_0_in),
        .I2(drp_done),
        .I3(\cpll_cal_state_reg_n_0_[0] ),
        .I4(\wait_ctr[24]_i_7_n_0 ),
        .I5(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[24]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_ctr[24]_i_20 
       (.I0(\wait_ctr_reg_n_0_[10] ),
        .I1(\wait_ctr_reg_n_0_[11] ),
        .I2(\wait_ctr_reg_n_0_[5] ),
        .I3(\wait_ctr_reg_n_0_[6] ),
        .O(\wait_ctr[24]_i_20_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[24]_i_3 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__1_n_8),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[24]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \wait_ctr[24]_i_4 
       (.I0(p_15_in),
        .I1(p_17_in),
        .I2(\wait_ctr[24]_i_9_n_0 ),
        .O(\wait_ctr[24]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0111011101111111)) 
    \wait_ctr[24]_i_5 
       (.I0(\wait_ctr[24]_i_10_n_0 ),
        .I1(\wait_ctr_reg_n_0_[16] ),
        .I2(\wait_ctr_reg_n_0_[15] ),
        .I3(\wait_ctr_reg_n_0_[14] ),
        .I4(\wait_ctr[24]_i_11_n_0 ),
        .I5(\wait_ctr[24]_i_12_n_0 ),
        .O(\wait_ctr[24]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \wait_ctr[24]_i_6 
       (.I0(\wait_ctr_reg_n_0_[13] ),
        .I1(\wait_ctr_reg_n_0_[14] ),
        .I2(\wait_ctr_reg_n_0_[15] ),
        .I3(\wait_ctr_reg_n_0_[16] ),
        .I4(\wait_ctr[24]_i_10_n_0 ),
        .I5(\wait_ctr[24]_i_13_n_0 ),
        .O(\wait_ctr[24]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \wait_ctr[24]_i_7 
       (.I0(p_17_in),
        .I1(p_15_in),
        .O(\wait_ctr[24]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \wait_ctr[24]_i_8 
       (.I0(p_14_in),
        .I1(p_16_in),
        .I2(\cpll_cal_state_reg_n_0_[28] ),
        .I3(p_13_in),
        .I4(p_18_in),
        .O(\wait_ctr[24]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0001010101010101)) 
    \wait_ctr[24]_i_9 
       (.I0(\wait_ctr[24]_i_14_n_0 ),
        .I1(\wait_ctr[24]_i_15_n_0 ),
        .I2(\wait_ctr[24]_i_16_n_0 ),
        .I3(\wait_ctr_reg_n_0_[12] ),
        .I4(\wait_ctr[24]_i_17_n_0 ),
        .I5(\wait_ctr[24]_i_11_n_0 ),
        .O(\wait_ctr[24]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[2]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry_n_14),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[3]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry_n_13),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[4]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry_n_12),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[5]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry_n_11),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[6]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry_n_10),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[7]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry_n_9),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[8]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry_n_8),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8880CCCC)) 
    \wait_ctr[9]_i_1 
       (.I0(\wait_ctr[24]_i_9_n_0 ),
        .I1(wait_ctr0_carry__0_n_15),
        .I2(p_15_in),
        .I3(p_17_in),
        .I4(\wait_ctr[24]_i_8_n_0 ),
        .O(\wait_ctr[9]_i_1_n_0 ));
  FDRE \wait_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[0]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[0] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[10] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[10]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[10] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[11] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[11]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[11] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[12] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[12]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[12] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[13] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[13]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[13] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[14] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[14]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[14] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[15] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[15]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[15] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[16] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[16]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[16] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[17] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[17]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[17] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[18] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[18]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[18] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[19] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[19]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[19] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[1]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[1] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[20] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[20]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[20] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[21] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[21]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[21] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[22] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[22]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[22] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[23] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[23]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[23] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[24] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[24]_i_3_n_0 ),
        .Q(\wait_ctr_reg_n_0_[24] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[2]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[2] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[3]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[3] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[4] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[4]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[4] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[5] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[5]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[5] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[6] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[6]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[6] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[7] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[7]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[7] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[8] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[8]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[8] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[9] 
       (.C(drpclk_in),
        .CE(\wait_ctr[24]_i_2_n_0 ),
        .D(\wait_ctr[9]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[9] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'h74)) 
    wr_i_1__0
       (.I0(drp_done),
        .I1(\di_msk[15]_i_3_n_0 ),
        .I2(wr),
        .O(wr_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    wr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(wr_i_1__0_n_0),
        .Q(wr),
        .R(cal_on_tx_reset_in_sync));
  LUT3 #(
    .INIT(8'h40)) 
    \x0e1_store[14]_i_1 
       (.I0(cal_on_tx_reset_in_sync),
        .I1(p_4_in),
        .I2(drp_done),
        .O(\x0e1_store[14]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[0] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[0]),
        .Q(\x0e1_store_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[12] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[12]),
        .Q(\x0e1_store_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[13] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[13]),
        .Q(\x0e1_store_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[14] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[14]),
        .Q(\x0e1_store_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[1] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[1]),
        .Q(\x0e1_store_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[2] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[2]),
        .Q(\x0e1_store_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[3] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[3]),
        .Q(\x0e1_store_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[4] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[4]),
        .Q(\x0e1_store_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[5] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[5]),
        .Q(\x0e1_store_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[6] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[6]),
        .Q(\x0e1_store_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[7] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[7]),
        .Q(\x0e1_store_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[8] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[8]),
        .Q(\x0e1_store_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[9] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[9]),
        .Q(\x0e1_store_reg_n_0_[9] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_gthe4_delay_powergood" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gthe4_delay_powergood
   (out,
    RXPD,
    RXRATE,
    rxoutclkpcs_out,
    \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ,
    rxpd_in);
  output out;
  output [0:0]RXPD;
  output [0:0]RXRATE;
  input [0:0]rxoutclkpcs_out;
  input \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;
  input [0:0]rxpd_in;

  wire [0:0]RXPD;
  wire [0:0]RXRATE;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.int_pwr_on_fsm ;
  wire \gen_powergood_delay.int_pwr_on_fsm_i_1_n_0 ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]\gen_powergood_delay.intclk_rrst_n_r ;
  wire \gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ;
  wire \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.pwr_on_fsm ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [8:0]\gen_powergood_delay.wait_cnt ;
  wire \gen_powergood_delay.wait_cnt[0]_i_1_n_0 ;
  wire \gen_powergood_delay.wait_cnt[8]_i_1_n_0 ;
  wire [0:0]rxoutclkpcs_out;
  wire [0:0]rxpd_in;

  assign out = \gen_powergood_delay.pwr_on_fsm ;
  LUT2 #(
    .INIT(4'hE)) 
    \gen_powergood_delay.int_pwr_on_fsm_i_1 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .I1(\gen_powergood_delay.wait_cnt [7]),
        .O(\gen_powergood_delay.int_pwr_on_fsm_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.int_pwr_on_fsm_reg 
       (.C(rxoutclkpcs_out),
        .CE(1'b1),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.int_pwr_on_fsm_i_1_n_0 ),
        .Q(\gen_powergood_delay.int_pwr_on_fsm ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_1 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[0] 
       (.C(rxoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(1'b1),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[1] 
       (.C(rxoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [0]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[2] 
       (.C(rxoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [1]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[3] 
       (.C(rxoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [2]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[4] 
       (.C(rxoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [3]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.pwr_on_fsm_reg 
       (.C(rxoutclkpcs_out),
        .CE(1'b1),
        .D(\gen_powergood_delay.int_pwr_on_fsm ),
        .Q(\gen_powergood_delay.pwr_on_fsm ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h7)) 
    \gen_powergood_delay.wait_cnt[0]_i_1 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .I1(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.wait_cnt[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.wait_cnt[8]_i_1 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .O(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[0] 
       (.C(rxoutclkpcs_out),
        .CE(\gen_powergood_delay.wait_cnt[0]_i_1_n_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .Q(\gen_powergood_delay.wait_cnt [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[1] 
       (.C(rxoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [0]),
        .Q(\gen_powergood_delay.wait_cnt [1]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[2] 
       (.C(rxoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [1]),
        .Q(\gen_powergood_delay.wait_cnt [2]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[3] 
       (.C(rxoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [2]),
        .Q(\gen_powergood_delay.wait_cnt [3]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[4] 
       (.C(rxoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [3]),
        .Q(\gen_powergood_delay.wait_cnt [4]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[5] 
       (.C(rxoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [4]),
        .Q(\gen_powergood_delay.wait_cnt [5]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[6] 
       (.C(rxoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [5]),
        .Q(\gen_powergood_delay.wait_cnt [6]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[7] 
       (.C(rxoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [6]),
        .Q(\gen_powergood_delay.wait_cnt [7]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[8] 
       (.C(rxoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [7]),
        .Q(\gen_powergood_delay.wait_cnt [8]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_i_2 
       (.I0(\gen_powergood_delay.pwr_on_fsm ),
        .O(RXRATE));
  LUT2 #(
    .INIT(4'hB)) 
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_i_3 
       (.I0(rxpd_in),
        .I1(\gen_powergood_delay.pwr_on_fsm ),
        .O(RXPD));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_gtwiz_buffbypass_rx" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gtwiz_buffbypass_rx
   (gtwiz_buffbypass_rx_done_out,
    \gen_gtwizard_gthe4.rxdlysreset_int ,
    rxsyncdone_out,
    rxphaligndone_out,
    rxusrclk_in,
    rst_in_sync2_reg,
    gtwiz_buffbypass_rx_reset_in,
    gtwiz_buffbypass_rx_start_user_in);
  output [0:0]gtwiz_buffbypass_rx_done_out;
  output \gen_gtwizard_gthe4.rxdlysreset_int ;
  input [0:0]rxsyncdone_out;
  input [0:0]rxphaligndone_out;
  input [0:0]rxusrclk_in;
  input rst_in_sync2_reg;
  input [0:0]gtwiz_buffbypass_rx_reset_in;
  input [0:0]gtwiz_buffbypass_rx_start_user_in;

  wire \FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg_n_0_[1] ;
  wire \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int ;
  wire \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg ;
  wire \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_reg ;
  wire \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_sync_int ;
  wire \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.reset_synchronizer_resetdone_inst_n_1 ;
  wire \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.reset_synchronizer_resetdone_inst_n_2 ;
  wire \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.reset_synchronizer_resetdone_inst_n_3 ;
  wire [0:0]\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx ;
  wire [1:0]\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx__0 ;
  wire \gen_gtwizard_gthe4.rxdlysreset_int ;
  wire [0:0]gtwiz_buffbypass_rx_done_out;
  wire [0:0]gtwiz_buffbypass_rx_reset_in;
  wire [0:0]gtwiz_buffbypass_rx_start_user_in;
  wire rst_in_sync2_reg;
  wire [0:0]rxphaligndone_out;
  wire [0:0]rxsyncdone_out;
  wire [0:0]rxusrclk_in;

  (* FSM_ENCODED_STATES = "ST_BUFFBYPASS_RX_DEASSERT_RXDLYSRESET:01,ST_BUFFBYPASS_RX_WAIT_RXSYNCDONE:10,iSTATE:00,ST_BUFFBYPASS_RX_DONE:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg[0] 
       (.C(rxusrclk_in),
        .CE(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.reset_synchronizer_resetdone_inst_n_3 ),
        .D(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx__0 [0]),
        .Q(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx ),
        .R(gtwiz_buffbypass_rx_reset_in));
  (* FSM_ENCODED_STATES = "ST_BUFFBYPASS_RX_DEASSERT_RXDLYSRESET:01,ST_BUFFBYPASS_RX_WAIT_RXSYNCDONE:10,iSTATE:00,ST_BUFFBYPASS_RX_DONE:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg[1] 
       (.C(rxusrclk_in),
        .CE(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.reset_synchronizer_resetdone_inst_n_3 ),
        .D(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx__0 [1]),
        .Q(\FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg_n_0_[1] ),
        .R(gtwiz_buffbypass_rx_reset_in));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_14 \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.bit_synchronizer_masterphaligndone_inst 
       (.rxphaligndone_out(rxphaligndone_out),
        .rxusrclk_in(rxusrclk_in));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_15 \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.bit_synchronizer_mastersyncdone_inst 
       (.D(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx__0 ),
        .Q({\FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg_n_0_[1] ,\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx }),
        .\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int (\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int ),
        .\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg (\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg ),
        .rxsyncdone_out(rxsyncdone_out),
        .rxusrclk_in(rxusrclk_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_done_out_reg 
       (.C(rxusrclk_in),
        .CE(1'b1),
        .D(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.reset_synchronizer_resetdone_inst_n_1 ),
        .Q(gtwiz_buffbypass_rx_done_out),
        .R(gtwiz_buffbypass_rx_reset_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg_reg 
       (.C(rxusrclk_in),
        .CE(1'b1),
        .D(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int ),
        .Q(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_reg_reg 
       (.C(rxusrclk_in),
        .CE(1'b1),
        .D(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_sync_int ),
        .Q(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_reg ),
        .R(gtwiz_buffbypass_rx_reset_in));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_inv_synchronizer \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.reset_synchronizer_resetdone_inst 
       (.E(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.reset_synchronizer_resetdone_inst_n_3 ),
        .\FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg[0] (\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.reset_synchronizer_resetdone_inst_n_1 ),
        .\FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg[1] (\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.reset_synchronizer_resetdone_inst_n_2 ),
        .Q({\FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg_n_0_[1] ,\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx }),
        .\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int (\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int ),
        .\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg (\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg ),
        .\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_reg (\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_reg ),
        .\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_sync_int (\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_sync_int ),
        .\gen_gtwizard_gthe4.rxdlysreset_int (\gen_gtwizard_gthe4.rxdlysreset_int ),
        .gtwiz_buffbypass_rx_done_out(gtwiz_buffbypass_rx_done_out),
        .gtwiz_buffbypass_rx_start_user_in(gtwiz_buffbypass_rx_start_user_in),
        .rst_in_sync2_reg_0(rst_in_sync2_reg),
        .rxusrclk_in(rxusrclk_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.rxdlysreset_out_reg[0] 
       (.C(rxusrclk_in),
        .CE(1'b1),
        .D(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.reset_synchronizer_resetdone_inst_n_2 ),
        .Q(\gen_gtwizard_gthe4.rxdlysreset_int ),
        .R(gtwiz_buffbypass_rx_reset_in));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_gtwiz_reset" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_gtwiz_reset
   (gtwiz_reset_rx_done_out,
    rst_in_out_reg,
    gtwiz_reset_tx_done_out,
    \gen_gtwizard_gthe4.gttxreset_int ,
    \gen_gtwizard_gthe4.txuserrdy_int ,
    \gen_gtwizard_gthe4.rxprogdivreset_int ,
    \gen_gtwizard_gthe4.rxuserrdy_int ,
    \gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int ,
    RESET_IN,
    rst_in_out_reg_0,
    gtpowergood_out,
    i_in_meta_reg,
    gtwiz_userclk_rx_active_out,
    rxcdrlock_out,
    drpclk_in,
    rxusrclk_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_datapath_in,
    rst_in0,
    txusrclk_in,
    \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    \gen_gtwizard_gthe4.gtpowergood_int ,
    gtwiz_reset_rx_datapath_in);
  output [0:0]gtwiz_reset_rx_done_out;
  output rst_in_out_reg;
  output [0:0]gtwiz_reset_tx_done_out;
  output \gen_gtwizard_gthe4.gttxreset_int ;
  output \gen_gtwizard_gthe4.txuserrdy_int ;
  output \gen_gtwizard_gthe4.rxprogdivreset_int ;
  output \gen_gtwizard_gthe4.rxuserrdy_int ;
  output \gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int ;
  output RESET_IN;
  output rst_in_out_reg_0;
  input [0:0]gtpowergood_out;
  input i_in_meta_reg;
  input [0:0]gtwiz_userclk_rx_active_out;
  input [0:0]rxcdrlock_out;
  input [0:0]drpclk_in;
  input [0:0]rxusrclk_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input rst_in0;
  input [0:0]txusrclk_in;
  input \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input \gen_gtwizard_gthe4.gtpowergood_int ;
  input [0:0]gtwiz_reset_rx_datapath_in;

  wire \FSM_sequential_sm_reset_all[2]_i_3_n_0 ;
  wire \FSM_sequential_sm_reset_all[2]_i_4_n_0 ;
  wire \FSM_sequential_sm_reset_rx[2]_i_2_n_0 ;
  wire RESET_IN;
  wire bit_synchronizer_gtpowergood_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_2;
  wire bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_1;
  wire bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_2;
  wire bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_1;
  wire bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2;
  wire bit_synchronizer_plllock_rx_inst_n_0;
  wire bit_synchronizer_plllock_rx_inst_n_1;
  wire bit_synchronizer_plllock_rx_inst_n_2;
  wire bit_synchronizer_plllock_rx_inst_n_3;
  wire bit_synchronizer_plllock_rx_inst_n_4;
  wire bit_synchronizer_plllock_tx_inst_n_0;
  wire bit_synchronizer_plllock_tx_inst_n_1;
  wire bit_synchronizer_plllock_tx_inst_n_2;
  wire bit_synchronizer_plllock_tx_inst_n_3;
  wire bit_synchronizer_rxcdrlock_inst_n_0;
  wire bit_synchronizer_rxcdrlock_inst_n_1;
  wire bit_synchronizer_rxcdrlock_inst_n_2;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int ;
  wire \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ;
  wire \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ;
  wire \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  wire \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  wire \gen_gtwizard_gthe4.gtpowergood_int ;
  wire \gen_gtwizard_gthe4.gtrxreset_int ;
  wire \gen_gtwizard_gthe4.gttxreset_int ;
  wire \gen_gtwizard_gthe4.rxprogdivreset_int ;
  wire \gen_gtwizard_gthe4.rxuserrdy_int ;
  wire \gen_gtwizard_gthe4.txuserrdy_int ;
  wire [0:0]gtpowergood_out;
  wire [0:0]gtwiz_reset_all_in;
  wire gtwiz_reset_all_sync;
  wire gtwiz_reset_rx_any_sync;
  wire gtwiz_reset_rx_datapath_dly;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire gtwiz_reset_rx_datapath_int_i_1_n_0;
  wire gtwiz_reset_rx_datapath_int_reg_n_0;
  wire gtwiz_reset_rx_datapath_sync;
  wire gtwiz_reset_rx_done_int_reg_n_0;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0;
  wire gtwiz_reset_rx_pll_and_datapath_int_reg_n_0;
  wire gtwiz_reset_rx_pll_and_datapath_sync;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_tx_datapath_dly;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire gtwiz_reset_tx_datapath_sync;
  wire gtwiz_reset_tx_done_int0__0;
  wire gtwiz_reset_tx_done_int_reg_n_0;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0;
  wire gtwiz_reset_tx_pll_and_datapath_int_reg_n_0;
  wire gtwiz_reset_tx_pll_and_datapath_sync;
  wire [0:0]gtwiz_userclk_rx_active_out;
  wire i_in_meta_reg;
  wire p_0_in;
  wire p_0_in11_out__0;
  wire [9:0]p_0_in__2;
  wire [9:0]p_0_in__3;
  wire reset_synchronizer_gtwiz_reset_rx_any_inst_n_1;
  wire reset_synchronizer_gtwiz_reset_tx_any_inst_n_1;
  wire rst_in0;
  wire rst_in_out_reg;
  wire rst_in_out_reg_0;
  wire [0:0]rxcdrlock_out;
  wire [0:0]rxusrclk_in;
  wire sel;
  wire [2:0]sm_reset_all;
  wire [2:0]sm_reset_all__0;
  wire sm_reset_all_timer_clr_i_1_n_0;
  wire sm_reset_all_timer_clr_i_2_n_0;
  wire sm_reset_all_timer_clr_reg_n_0;
  wire [2:0]sm_reset_all_timer_ctr;
  wire \sm_reset_all_timer_ctr0_inferred__0/i__n_0 ;
  wire \sm_reset_all_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_all_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_all_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_all_timer_sat;
  wire sm_reset_all_timer_sat_i_1_n_0;
  wire [2:0]sm_reset_rx;
  wire [1:0]sm_reset_rx__0;
  wire sm_reset_rx_cdr_to_clr;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_6_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_7_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_8_n_0 ;
  wire [25:0]sm_reset_rx_cdr_to_ctr_reg;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_4 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_4 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_4 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ;
  wire sm_reset_rx_cdr_to_sat;
  wire sm_reset_rx_cdr_to_sat_i_1_n_0;
  wire sm_reset_rx_pll_timer_clr_i_1_n_0;
  wire sm_reset_rx_pll_timer_clr_reg_n_0;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ;
  wire [9:0]sm_reset_rx_pll_timer_ctr_reg;
  wire sm_reset_rx_pll_timer_sat;
  wire sm_reset_rx_pll_timer_sat_i_1_n_0;
  wire sm_reset_rx_timer_clr_reg_n_0;
  wire [2:0]sm_reset_rx_timer_ctr;
  wire \sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ;
  wire \sm_reset_rx_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_rx_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_rx_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_rx_timer_sat;
  wire sm_reset_rx_timer_sat_i_1_n_0;
  wire [2:0]sm_reset_tx;
  wire [2:0]sm_reset_tx__0;
  wire sm_reset_tx_pll_timer_clr_i_1_n_0;
  wire sm_reset_tx_pll_timer_clr_reg_n_0;
  wire \sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ;
  wire \sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ;
  wire [9:0]sm_reset_tx_pll_timer_ctr_reg;
  wire sm_reset_tx_pll_timer_sat;
  wire sm_reset_tx_pll_timer_sat_i_1_n_0;
  wire sm_reset_tx_timer_clr013_out__0;
  wire sm_reset_tx_timer_clr0__0;
  wire sm_reset_tx_timer_clr_reg_n_0;
  wire [2:0]sm_reset_tx_timer_ctr;
  wire \sm_reset_tx_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_tx_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_tx_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_tx_timer_sat;
  wire sm_reset_tx_timer_sat_i_1_n_0;
  wire [0:0]txusrclk_in;
  wire [7:1]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h00FFF70000FFFFFF)) 
    \FSM_sequential_sm_reset_all[0]_i_1 
       (.I0(gtwiz_reset_rx_done_int_reg_n_0),
        .I1(sm_reset_all_timer_sat),
        .I2(sm_reset_all_timer_clr_reg_n_0),
        .I3(sm_reset_all[2]),
        .I4(sm_reset_all[1]),
        .I5(sm_reset_all[0]),
        .O(sm_reset_all__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'h34)) 
    \FSM_sequential_sm_reset_all[1]_i_1 
       (.I0(sm_reset_all[2]),
        .I1(sm_reset_all[1]),
        .I2(sm_reset_all[0]),
        .O(sm_reset_all__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'h4A)) 
    \FSM_sequential_sm_reset_all[2]_i_2 
       (.I0(sm_reset_all[2]),
        .I1(sm_reset_all[0]),
        .I2(sm_reset_all[1]),
        .O(sm_reset_all__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \FSM_sequential_sm_reset_all[2]_i_3 
       (.I0(sm_reset_all_timer_sat),
        .I1(gtwiz_reset_rx_done_int_reg_n_0),
        .I2(sm_reset_all_timer_clr_reg_n_0),
        .O(\FSM_sequential_sm_reset_all[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_all[2]_i_4 
       (.I0(sm_reset_all_timer_clr_reg_n_0),
        .I1(sm_reset_all_timer_sat),
        .I2(gtwiz_reset_tx_done_int_reg_n_0),
        .O(\FSM_sequential_sm_reset_all[2]_i_4_n_0 ));
  (* FSM_ENCODED_STATES = "ST_RESET_ALL_BRANCH:000,ST_RESET_ALL_TX_PLL_WAIT:010,ST_RESET_ALL_RX_WAIT:101,ST_RESET_ALL_TX_PLL:001,ST_RESET_ALL_RX_PLL:100,ST_RESET_ALL_RX_DP:011,ST_RESET_ALL_INIT:111,iSTATE:110" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[0] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtpowergood_inst_n_0),
        .D(sm_reset_all__0[0]),
        .Q(sm_reset_all[0]),
        .R(gtwiz_reset_all_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_ALL_BRANCH:000,ST_RESET_ALL_TX_PLL_WAIT:010,ST_RESET_ALL_RX_WAIT:101,ST_RESET_ALL_TX_PLL:001,ST_RESET_ALL_RX_PLL:100,ST_RESET_ALL_RX_DP:011,ST_RESET_ALL_INIT:111,iSTATE:110" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[1] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtpowergood_inst_n_0),
        .D(sm_reset_all__0[1]),
        .Q(sm_reset_all[1]),
        .R(gtwiz_reset_all_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_ALL_BRANCH:000,ST_RESET_ALL_TX_PLL_WAIT:010,ST_RESET_ALL_RX_WAIT:101,ST_RESET_ALL_TX_PLL:001,ST_RESET_ALL_RX_PLL:100,ST_RESET_ALL_RX_DP:011,ST_RESET_ALL_INIT:111,iSTATE:110" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[2] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtpowergood_inst_n_0),
        .D(sm_reset_all__0[2]),
        .Q(sm_reset_all[2]),
        .R(gtwiz_reset_all_sync));
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_rx[1]_i_2 
       (.I0(sm_reset_rx_timer_clr_reg_n_0),
        .I1(sm_reset_rx_timer_sat),
        .I2(\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .O(p_0_in11_out__0));
  LUT6 #(
    .INIT(64'hFFFFFF000800FF00)) 
    \FSM_sequential_sm_reset_rx[2]_i_2 
       (.I0(\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .I1(sm_reset_rx_timer_sat),
        .I2(sm_reset_rx_timer_clr_reg_n_0),
        .I3(sm_reset_rx[2]),
        .I4(sm_reset_rx[1]),
        .I5(sm_reset_rx[0]),
        .O(\FSM_sequential_sm_reset_rx[2]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "ST_RESET_RX_WAIT_LOCK:011,ST_RESET_RX_WAIT_CDR:100,ST_RESET_RX_WAIT_USERRDY:101,ST_RESET_RX_WAIT_RESETDONE:110,ST_RESET_RX_DATAPATH:010,ST_RESET_RX_PLL:001,ST_RESET_RX_BRANCH:000,ST_RESET_RX_IDLE:111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_rx_reg[0] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_plllock_rx_inst_n_0),
        .D(sm_reset_rx__0[0]),
        .Q(sm_reset_rx[0]),
        .R(gtwiz_reset_rx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_RX_WAIT_LOCK:011,ST_RESET_RX_WAIT_CDR:100,ST_RESET_RX_WAIT_USERRDY:101,ST_RESET_RX_WAIT_RESETDONE:110,ST_RESET_RX_DATAPATH:010,ST_RESET_RX_PLL:001,ST_RESET_RX_BRANCH:000,ST_RESET_RX_IDLE:111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_rx_reg[1] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_plllock_rx_inst_n_0),
        .D(sm_reset_rx__0[1]),
        .Q(sm_reset_rx[1]),
        .R(gtwiz_reset_rx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_RX_WAIT_LOCK:011,ST_RESET_RX_WAIT_CDR:100,ST_RESET_RX_WAIT_USERRDY:101,ST_RESET_RX_WAIT_RESETDONE:110,ST_RESET_RX_DATAPATH:010,ST_RESET_RX_PLL:001,ST_RESET_RX_BRANCH:000,ST_RESET_RX_IDLE:111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_rx_reg[2] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_plllock_rx_inst_n_0),
        .D(\FSM_sequential_sm_reset_rx[2]_i_2_n_0 ),
        .Q(sm_reset_rx[2]),
        .R(gtwiz_reset_rx_any_sync));
  LUT3 #(
    .INIT(8'h38)) 
    \FSM_sequential_sm_reset_tx[2]_i_2 
       (.I0(sm_reset_tx[0]),
        .I1(sm_reset_tx[1]),
        .I2(sm_reset_tx[2]),
        .O(sm_reset_tx__0[2]));
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_tx[2]_i_4 
       (.I0(sm_reset_tx_timer_clr_reg_n_0),
        .I1(sm_reset_tx_timer_sat),
        .I2(\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .O(gtwiz_reset_tx_done_int0__0));
  (* FSM_ENCODED_STATES = "ST_RESET_TX_BRANCH:000,ST_RESET_TX_WAIT_LOCK:011,ST_RESET_TX_WAIT_USERRDY:100,ST_RESET_TX_WAIT_RESETDONE:101,ST_RESET_TX_IDLE:110,ST_RESET_TX_DATAPATH:010,ST_RESET_TX_PLL:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_tx_reg[0] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_plllock_tx_inst_n_0),
        .D(sm_reset_tx__0[0]),
        .Q(sm_reset_tx[0]),
        .R(gtwiz_reset_tx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_TX_BRANCH:000,ST_RESET_TX_WAIT_LOCK:011,ST_RESET_TX_WAIT_USERRDY:100,ST_RESET_TX_WAIT_RESETDONE:101,ST_RESET_TX_IDLE:110,ST_RESET_TX_DATAPATH:010,ST_RESET_TX_PLL:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_tx_reg[1] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_plllock_tx_inst_n_0),
        .D(sm_reset_tx__0[1]),
        .Q(sm_reset_tx[1]),
        .R(gtwiz_reset_tx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_TX_BRANCH:000,ST_RESET_TX_WAIT_LOCK:011,ST_RESET_TX_WAIT_USERRDY:100,ST_RESET_TX_WAIT_RESETDONE:101,ST_RESET_TX_IDLE:110,ST_RESET_TX_DATAPATH:010,ST_RESET_TX_PLL:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_tx_reg[2] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_plllock_tx_inst_n_0),
        .D(sm_reset_tx__0[2]),
        .Q(sm_reset_tx[2]),
        .R(gtwiz_reset_tx_any_sync));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_16 bit_synchronizer_gtpowergood_inst
       (.E(bit_synchronizer_gtpowergood_inst_n_0),
        .\FSM_sequential_sm_reset_all_reg[0] (\FSM_sequential_sm_reset_all[2]_i_3_n_0 ),
        .\FSM_sequential_sm_reset_all_reg[0]_0 (\FSM_sequential_sm_reset_all[2]_i_4_n_0 ),
        .Q(sm_reset_all),
        .drpclk_in(drpclk_in),
        .gtpowergood_out(gtpowergood_out));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_17 bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_rx_datapath_dly(gtwiz_reset_rx_datapath_dly),
        .in0(gtwiz_reset_rx_datapath_sync));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_18 bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst
       (.D(sm_reset_rx__0),
        .\FSM_sequential_sm_reset_rx[2]_i_3 (sm_reset_rx_pll_timer_clr_reg_n_0),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_rx_datapath_dly(gtwiz_reset_rx_datapath_dly),
        .in0(gtwiz_reset_rx_pll_and_datapath_sync),
        .p_0_in11_out__0(p_0_in11_out__0),
        .sm_reset_rx_pll_timer_sat(sm_reset_rx_pll_timer_sat),
        .sm_reset_rx_pll_timer_sat_reg(bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_2));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_19 bit_synchronizer_gtwiz_reset_tx_datapath_dly_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_tx_datapath_dly(gtwiz_reset_tx_datapath_dly),
        .in0(gtwiz_reset_tx_datapath_sync));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_20 bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst
       (.D(sm_reset_tx__0[1:0]),
        .\FSM_sequential_sm_reset_tx[2]_i_3 (sm_reset_tx_pll_timer_clr_reg_n_0),
        .Q(sm_reset_tx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_tx_datapath_dly(gtwiz_reset_tx_datapath_dly),
        .in0(gtwiz_reset_tx_pll_and_datapath_sync),
        .sm_reset_tx_pll_timer_sat(sm_reset_tx_pll_timer_sat),
        .sm_reset_tx_pll_timer_sat_reg(bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_0));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_21 bit_synchronizer_gtwiz_reset_userclk_rx_active_inst
       (.\FSM_sequential_sm_reset_rx_reg[0] (bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_1),
        .\FSM_sequential_sm_reset_rx_reg[0]_0 (bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_2),
        .\FSM_sequential_sm_reset_rx_reg[0]_1 (bit_synchronizer_rxcdrlock_inst_n_0),
        .\FSM_sequential_sm_reset_rx_reg[1] (bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_0),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .\gen_gtwizard_gthe4.rxuserrdy_int (\gen_gtwizard_gthe4.rxuserrdy_int ),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_userclk_rx_active_out(gtwiz_userclk_rx_active_out),
        .p_0_in11_out__0(p_0_in11_out__0),
        .sm_reset_rx_cdr_to_sat(sm_reset_rx_cdr_to_sat),
        .sm_reset_rx_timer_clr_reg(sm_reset_rx_timer_clr_reg_n_0),
        .sm_reset_rx_timer_clr_reg_0(bit_synchronizer_plllock_rx_inst_n_1),
        .sm_reset_rx_timer_sat(sm_reset_rx_timer_sat));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_22 bit_synchronizer_gtwiz_reset_userclk_tx_active_inst
       (.\FSM_sequential_sm_reset_tx_reg[1] (bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_1),
        .\FSM_sequential_sm_reset_tx_reg[2] (bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .Q(sm_reset_tx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .\gen_gtwizard_gthe4.txuserrdy_int (\gen_gtwizard_gthe4.txuserrdy_int ),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .sm_reset_tx_timer_clr013_out__0(sm_reset_tx_timer_clr013_out__0),
        .sm_reset_tx_timer_clr0__0(sm_reset_tx_timer_clr0__0),
        .sm_reset_tx_timer_clr_reg(sm_reset_tx_timer_clr_reg_n_0),
        .sm_reset_tx_timer_clr_reg_0(bit_synchronizer_plllock_tx_inst_n_1),
        .sm_reset_tx_timer_sat(sm_reset_tx_timer_sat));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_23 bit_synchronizer_plllock_rx_inst
       (.E(bit_synchronizer_plllock_rx_inst_n_0),
        .\FSM_sequential_sm_reset_rx_reg[0] (bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_0),
        .\FSM_sequential_sm_reset_rx_reg[0]_0 (sm_reset_rx_timer_clr_reg_n_0),
        .\FSM_sequential_sm_reset_rx_reg[0]_1 (bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_2),
        .\FSM_sequential_sm_reset_rx_reg[1] (bit_synchronizer_plllock_rx_inst_n_2),
        .\FSM_sequential_sm_reset_rx_reg[1]_0 (bit_synchronizer_plllock_rx_inst_n_4),
        .\FSM_sequential_sm_reset_rx_reg[2] (bit_synchronizer_plllock_rx_inst_n_3),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gthe4.gtrxreset_int (\gen_gtwizard_gthe4.gtrxreset_int ),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_reset_rx_done_int_reg(gtwiz_reset_rx_done_int_reg_n_0),
        .i_in_meta_reg_0(i_in_meta_reg),
        .i_in_out_reg_0(bit_synchronizer_plllock_rx_inst_n_1),
        .p_0_in11_out__0(p_0_in11_out__0),
        .sm_reset_rx_timer_sat(sm_reset_rx_timer_sat));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_24 bit_synchronizer_plllock_tx_inst
       (.E(bit_synchronizer_plllock_tx_inst_n_0),
        .\FSM_sequential_sm_reset_tx_reg[0] (bit_synchronizer_plllock_tx_inst_n_2),
        .\FSM_sequential_sm_reset_tx_reg[0]_0 (sm_reset_tx_timer_clr_reg_n_0),
        .\FSM_sequential_sm_reset_tx_reg[0]_1 (bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_0),
        .\FSM_sequential_sm_reset_tx_reg[1] (bit_synchronizer_plllock_tx_inst_n_3),
        .Q(sm_reset_tx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gthe4.gttxreset_int (\gen_gtwizard_gthe4.gttxreset_int ),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .gtwiz_reset_tx_done_int0__0(gtwiz_reset_tx_done_int0__0),
        .gtwiz_reset_tx_done_int_reg(gtwiz_reset_tx_done_int_reg_n_0),
        .i_in_meta_reg_0(i_in_meta_reg),
        .i_in_out_reg_0(bit_synchronizer_plllock_tx_inst_n_1),
        .sm_reset_tx_timer_clr0__0(sm_reset_tx_timer_clr0__0),
        .sm_reset_tx_timer_sat(sm_reset_tx_timer_sat));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_bit_synchronizer_25 bit_synchronizer_rxcdrlock_inst
       (.\FSM_sequential_sm_reset_rx_reg[1] (bit_synchronizer_rxcdrlock_inst_n_1),
        .\FSM_sequential_sm_reset_rx_reg[2] (bit_synchronizer_rxcdrlock_inst_n_2),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gthe4.rxprogdivreset_int (\gen_gtwizard_gthe4.rxprogdivreset_int ),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .i_in_out_reg_0(bit_synchronizer_rxcdrlock_inst_n_0),
        .rxcdrlock_out(rxcdrlock_out),
        .sm_reset_rx_cdr_to_clr(sm_reset_rx_cdr_to_clr),
        .sm_reset_rx_cdr_to_clr_reg(bit_synchronizer_plllock_rx_inst_n_2),
        .sm_reset_rx_cdr_to_sat(sm_reset_rx_cdr_to_sat));
  LUT3 #(
    .INIT(8'h8B)) 
    \gthe4_channel_gen.gen_gthe4_channel_inst[0].GTHE4_CHANNEL_PRIM_INST_i_1 
       (.I0(\gen_gtwizard_gthe4.gtrxreset_int ),
        .I1(gtpowergood_out),
        .I2(\gen_gtwizard_gthe4.gtpowergood_int ),
        .O(\gen_gtwizard_gthe4.delay_pwrgood_gtrxreset_int ));
  FDRE #(
    .INIT(1'b1)) 
    gtrxreset_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_4),
        .Q(\gen_gtwizard_gthe4.gtrxreset_int ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    gttxreset_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_tx_inst_n_3),
        .Q(\gen_gtwizard_gthe4.gttxreset_int ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'hF740)) 
    gtwiz_reset_rx_datapath_int_i_1
       (.I0(sm_reset_all[2]),
        .I1(sm_reset_all[0]),
        .I2(sm_reset_all[1]),
        .I3(gtwiz_reset_rx_datapath_int_reg_n_0),
        .O(gtwiz_reset_rx_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_datapath_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_rx_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_rx_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_done_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_3),
        .Q(gtwiz_reset_rx_done_int_reg_n_0),
        .R(gtwiz_reset_rx_any_sync));
  LUT4 #(
    .INIT(16'hF704)) 
    gtwiz_reset_rx_pll_and_datapath_int_i_1
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[2]),
        .I2(sm_reset_all[1]),
        .I3(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .O(gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_pll_and_datapath_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_tx_done_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_tx_inst_n_2),
        .Q(gtwiz_reset_tx_done_int_reg_n_0),
        .R(gtwiz_reset_tx_any_sync));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'hFB02)) 
    gtwiz_reset_tx_pll_and_datapath_int_i_1
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[1]),
        .I2(sm_reset_all[2]),
        .I3(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .O(gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_tx_pll_and_datapath_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  FDRE #(
    .INIT(1'b0)) 
    pllreset_rx_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(reset_synchronizer_gtwiz_reset_rx_any_inst_n_1),
        .Q(\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    pllreset_tx_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(reset_synchronizer_gtwiz_reset_tx_any_inst_n_1),
        .Q(\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .R(1'b0));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer reset_synchronizer_gtwiz_reset_all_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_all_in(gtwiz_reset_all_in),
        .gtwiz_reset_all_sync(gtwiz_reset_all_sync));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_26 reset_synchronizer_gtwiz_reset_rx_any_inst
       (.\FSM_sequential_sm_reset_rx_reg[1] (reset_synchronizer_gtwiz_reset_rx_any_inst_n_1),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int (\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .rst_in_sync3_reg_0(gtwiz_reset_rx_datapath_int_reg_n_0),
        .rst_in_sync3_reg_1(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_27 reset_synchronizer_gtwiz_reset_rx_datapath_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .in0(gtwiz_reset_rx_datapath_sync),
        .rst_in_out_reg_0(gtwiz_reset_rx_datapath_int_reg_n_0));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_28 reset_synchronizer_gtwiz_reset_rx_pll_and_datapath_inst
       (.drpclk_in(drpclk_in),
        .in0(gtwiz_reset_rx_pll_and_datapath_sync),
        .rst_in_meta_reg_0(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_29 reset_synchronizer_gtwiz_reset_tx_any_inst
       (.\FSM_sequential_sm_reset_tx_reg[1] (reset_synchronizer_gtwiz_reset_tx_any_inst_n_1),
        .Q(sm_reset_tx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int (\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .rst_in_out_reg_0(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_30 reset_synchronizer_gtwiz_reset_tx_datapath_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .in0(gtwiz_reset_tx_datapath_sync));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_31 reset_synchronizer_gtwiz_reset_tx_pll_and_datapath_inst
       (.drpclk_in(drpclk_in),
        .in0(gtwiz_reset_tx_pll_and_datapath_sync),
        .rst_in_meta_reg_0(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_inv_synchronizer_32 reset_synchronizer_rx_done_inst
       (.gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .rst_in_out_reg_0(rst_in_out_reg_0),
        .rst_in_sync3_reg_0(gtwiz_reset_rx_done_int_reg_n_0),
        .rxusrclk_in(rxusrclk_in));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_inv_synchronizer_33 reset_synchronizer_tx_done_inst
       (.gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .rst_in_sync2_reg_0(gtwiz_reset_tx_done_int_reg_n_0),
        .txusrclk_in(txusrclk_in));
  bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_34 reset_synchronizer_txprogdivreset_inst
       (.drpclk_in(drpclk_in),
        .rst_in0(rst_in0),
        .rst_in_out_reg_0(rst_in_out_reg));
  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1__1
       (.I0(\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .I1(\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .O(RESET_IN));
  FDRE #(
    .INIT(1'b1)) 
    rxprogdivreset_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_rxcdrlock_inst_n_2),
        .Q(\gen_gtwizard_gthe4.rxprogdivreset_int ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rxuserrdy_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_2),
        .Q(\gen_gtwizard_gthe4.rxuserrdy_int ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFA200A)) 
    sm_reset_all_timer_clr_i_1
       (.I0(sm_reset_all_timer_clr_i_2_n_0),
        .I1(sm_reset_all[1]),
        .I2(sm_reset_all[2]),
        .I3(sm_reset_all[0]),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .O(sm_reset_all_timer_clr_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000B0003333BB33)) 
    sm_reset_all_timer_clr_i_2
       (.I0(gtwiz_reset_rx_done_int_reg_n_0),
        .I1(sm_reset_all[2]),
        .I2(gtwiz_reset_tx_done_int_reg_n_0),
        .I3(sm_reset_all_timer_sat),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .I5(sm_reset_all[1]),
        .O(sm_reset_all_timer_clr_i_2_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_all_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_all_timer_clr_i_1_n_0),
        .Q(sm_reset_all_timer_clr_reg_n_0),
        .S(gtwiz_reset_all_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_all_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_all_timer_ctr[2]),
        .I1(sm_reset_all_timer_ctr[0]),
        .I2(sm_reset_all_timer_ctr[1]),
        .O(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_all_timer_ctr[0]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .O(\sm_reset_all_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_all_timer_ctr[1]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .I1(sm_reset_all_timer_ctr[1]),
        .O(\sm_reset_all_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_all_timer_ctr[2]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .I1(sm_reset_all_timer_ctr[1]),
        .I2(sm_reset_all_timer_ctr[2]),
        .O(\sm_reset_all_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[0]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[1]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[2]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_all_timer_sat_i_1
       (.I0(sm_reset_all_timer_ctr[2]),
        .I1(sm_reset_all_timer_ctr[0]),
        .I2(sm_reset_all_timer_ctr[1]),
        .I3(sm_reset_all_timer_sat),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .O(sm_reset_all_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_all_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_all_timer_sat_i_1_n_0),
        .Q(sm_reset_all_timer_sat),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_cdr_to_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_rxcdrlock_inst_n_1),
        .Q(sm_reset_rx_cdr_to_clr),
        .S(gtwiz_reset_rx_any_sync));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_1 
       (.I0(\sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ),
        .I1(sm_reset_rx_cdr_to_ctr_reg[15]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[17]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[18]),
        .I4(\sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ),
        .I5(\sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_3 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[8]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[6]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[12]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[10]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_4 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[4]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[2]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[3]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[20]),
        .I4(sm_reset_rx_cdr_to_ctr_reg[0]),
        .I5(sm_reset_rx_cdr_to_ctr_reg[1]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00020000)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_5 
       (.I0(\sm_reset_rx_cdr_to_ctr[0]_i_7_n_0 ),
        .I1(sm_reset_rx_cdr_to_ctr_reg[14]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[13]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[16]),
        .I4(\sm_reset_rx_cdr_to_ctr[0]_i_8_n_0 ),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_6 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[0]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_7 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[24]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[23]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[25]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[19]),
        .I4(sm_reset_rx_cdr_to_ctr_reg[21]),
        .I5(sm_reset_rx_cdr_to_ctr_reg[22]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_8 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[11]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[9]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[7]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[5]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_8_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[0]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_3 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_4 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 }),
        .S({sm_reset_rx_cdr_to_ctr_reg[7:1],\sm_reset_rx_cdr_to_ctr[0]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[10] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[10]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[11] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[11]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[12] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[12]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[13] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[13]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[14] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[14]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[15] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[15]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[16] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[16]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[16]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_3 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_4 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 }),
        .S(sm_reset_rx_cdr_to_ctr_reg[23:16]));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[17] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[17]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[18] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[18]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[19] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[19]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[1]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[20] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[20]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[21] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[21]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[22] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[22]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[23] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[23]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[24] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[24]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[24]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_CO_UNCONNECTED [7:1],\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_O_UNCONNECTED [7:2],\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 }),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,sm_reset_rx_cdr_to_ctr_reg[25:24]}));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[25] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[25]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[2]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[3]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[4] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[4]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[5] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[5]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[6] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[6]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[7] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[7]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[8] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[8]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[8]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_3 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_4 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 }),
        .S(sm_reset_rx_cdr_to_ctr_reg[15:8]));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[9] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[9]),
        .R(sm_reset_rx_cdr_to_clr));
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_rx_cdr_to_sat_i_1
       (.I0(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .I1(sm_reset_rx_cdr_to_sat),
        .I2(sm_reset_rx_cdr_to_clr),
        .O(sm_reset_rx_cdr_to_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_cdr_to_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_cdr_to_sat_i_1_n_0),
        .Q(sm_reset_rx_cdr_to_sat),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFF3000B)) 
    sm_reset_rx_pll_timer_clr_i_1
       (.I0(sm_reset_rx_pll_timer_sat),
        .I1(sm_reset_rx[0]),
        .I2(sm_reset_rx[1]),
        .I3(sm_reset_rx[2]),
        .I4(sm_reset_rx_pll_timer_clr_reg_n_0),
        .O(sm_reset_rx_pll_timer_clr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_pll_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_pll_timer_clr_i_1_n_0),
        .Q(sm_reset_rx_pll_timer_clr_reg_n_0),
        .S(gtwiz_reset_rx_any_sync));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_pll_timer_ctr[0]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[0]),
        .O(p_0_in__3[0]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_pll_timer_ctr[1]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[1]),
        .O(p_0_in__3[1]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_pll_timer_ctr[2]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[2]),
        .O(p_0_in__3[2]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_rx_pll_timer_ctr[3]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[3]),
        .O(p_0_in__3[3]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_rx_pll_timer_ctr[4]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[4]),
        .O(p_0_in__3[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sm_reset_rx_pll_timer_ctr[5]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[4]),
        .I5(sm_reset_rx_pll_timer_ctr_reg[5]),
        .O(p_0_in__3[5]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_pll_timer_ctr[6]_i_1 
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_rx_pll_timer_ctr_reg[6]),
        .O(p_0_in__3[6]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_pll_timer_ctr[7]_i_1 
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[7]),
        .O(p_0_in__3[7]));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_rx_pll_timer_ctr[8]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I1(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_rx_pll_timer_ctr_reg[7]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[8]),
        .O(p_0_in__3[8]));
  LUT6 #(
    .INIT(64'hFFFF7FFFFFFFFFFF)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[5]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I5(\sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_2 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[7]),
        .I1(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[8]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[9]),
        .O(p_0_in__3[9]));
  LUT5 #(
    .INIT(32'h00000001)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_3 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[8]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[9]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[4]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[7]),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_4 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[5]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I5(sm_reset_rx_pll_timer_ctr_reg[4]),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[0]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[0]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[1]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[1]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[2]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[2]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[3]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[3]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[4] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[4]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[4]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[5] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[5]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[5]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[6] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[6]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[6]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[7] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[7]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[7]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[8] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[8]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[8]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[9] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[9]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[9]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_rx_pll_timer_sat_i_1
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .I1(sm_reset_rx_pll_timer_sat),
        .I2(sm_reset_rx_pll_timer_clr_reg_n_0),
        .O(sm_reset_rx_pll_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_pll_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_pll_timer_sat_i_1_n_0),
        .Q(sm_reset_rx_pll_timer_sat),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_1),
        .Q(sm_reset_rx_timer_clr_reg_n_0),
        .S(gtwiz_reset_rx_any_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_rx_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_rx_timer_ctr[2]),
        .I1(sm_reset_rx_timer_ctr[0]),
        .I2(sm_reset_rx_timer_ctr[1]),
        .O(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_timer_ctr[0]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .O(\sm_reset_rx_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_timer_ctr[1]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .I1(sm_reset_rx_timer_ctr[1]),
        .O(\sm_reset_rx_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_timer_ctr[2]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .I1(sm_reset_rx_timer_ctr[1]),
        .I2(sm_reset_rx_timer_ctr[2]),
        .O(\sm_reset_rx_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[0]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[1]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[2]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_rx_timer_sat_i_1
       (.I0(sm_reset_rx_timer_ctr[2]),
        .I1(sm_reset_rx_timer_ctr[0]),
        .I2(sm_reset_rx_timer_ctr[1]),
        .I3(sm_reset_rx_timer_sat),
        .I4(sm_reset_rx_timer_clr_reg_n_0),
        .O(sm_reset_rx_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_timer_sat_i_1_n_0),
        .Q(sm_reset_rx_timer_sat),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFF3000B)) 
    sm_reset_tx_pll_timer_clr_i_1
       (.I0(sm_reset_tx_pll_timer_sat),
        .I1(sm_reset_tx[0]),
        .I2(sm_reset_tx[1]),
        .I3(sm_reset_tx[2]),
        .I4(sm_reset_tx_pll_timer_clr_reg_n_0),
        .O(sm_reset_tx_pll_timer_clr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_tx_pll_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_tx_pll_timer_clr_i_1_n_0),
        .Q(sm_reset_tx_pll_timer_clr_reg_n_0),
        .S(gtwiz_reset_tx_any_sync));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_tx_pll_timer_ctr[0]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[0]),
        .O(p_0_in__2[0]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_pll_timer_ctr[1]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[1]),
        .O(p_0_in__2[1]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_pll_timer_ctr[2]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[2]),
        .O(p_0_in__2[2]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_tx_pll_timer_ctr[3]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[3]),
        .O(p_0_in__2[3]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_tx_pll_timer_ctr[4]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[4]),
        .O(p_0_in__2[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sm_reset_tx_pll_timer_ctr[5]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[4]),
        .I5(sm_reset_tx_pll_timer_ctr_reg[5]),
        .O(p_0_in__2[5]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_pll_timer_ctr[6]_i_1 
       (.I0(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_tx_pll_timer_ctr_reg[6]),
        .O(p_0_in__2[6]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_pll_timer_ctr[7]_i_1 
       (.I0(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[7]),
        .O(p_0_in__2[7]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_tx_pll_timer_ctr[8]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I1(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_tx_pll_timer_ctr_reg[7]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[8]),
        .O(p_0_in__2[8]));
  LUT6 #(
    .INIT(64'hFFFF7FFFFFFFFFFF)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[5]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I5(\sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_2 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[7]),
        .I1(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[8]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[9]),
        .O(p_0_in__2[9]));
  LUT5 #(
    .INIT(32'h00000001)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_3 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[8]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[9]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[4]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[7]),
        .O(\sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_4 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[5]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I5(sm_reset_tx_pll_timer_ctr_reg[4]),
        .O(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[0]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[0]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[1]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[1]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[2]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[2]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[3]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[3]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[4] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[4]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[4]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[5] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[5]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[5]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[6] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[6]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[6]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[7] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[7]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[7]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[8] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[8]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[8]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[9] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[9]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[9]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_tx_pll_timer_sat_i_1
       (.I0(sel),
        .I1(sm_reset_tx_pll_timer_sat),
        .I2(sm_reset_tx_pll_timer_clr_reg_n_0),
        .O(sm_reset_tx_pll_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_tx_pll_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_tx_pll_timer_sat_i_1_n_0),
        .Q(sm_reset_tx_pll_timer_sat),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT2 #(
    .INIT(4'h2)) 
    sm_reset_tx_timer_clr_i_4
       (.I0(sm_reset_tx_timer_sat),
        .I1(sm_reset_tx_timer_clr_reg_n_0),
        .O(sm_reset_tx_timer_clr013_out__0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_tx_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_1),
        .Q(sm_reset_tx_timer_clr_reg_n_0),
        .S(gtwiz_reset_tx_any_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_tx_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_tx_timer_ctr[2]),
        .I1(sm_reset_tx_timer_ctr[0]),
        .I2(sm_reset_tx_timer_ctr[1]),
        .O(p_0_in));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_tx_timer_ctr[0]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .O(\sm_reset_tx_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_timer_ctr[1]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .I1(sm_reset_tx_timer_ctr[1]),
        .O(\sm_reset_tx_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_timer_ctr[2]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .I1(sm_reset_tx_timer_ctr[1]),
        .I2(sm_reset_tx_timer_ctr[2]),
        .O(\sm_reset_tx_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(p_0_in),
        .D(\sm_reset_tx_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_tx_timer_ctr[0]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(p_0_in),
        .D(\sm_reset_tx_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_tx_timer_ctr[1]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(p_0_in),
        .D(\sm_reset_tx_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_tx_timer_ctr[2]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_tx_timer_sat_i_1
       (.I0(sm_reset_tx_timer_ctr[2]),
        .I1(sm_reset_tx_timer_ctr[0]),
        .I2(sm_reset_tx_timer_ctr[1]),
        .I3(sm_reset_tx_timer_sat),
        .I4(sm_reset_tx_timer_clr_reg_n_0),
        .O(sm_reset_tx_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_tx_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_tx_timer_sat_i_1_n_0),
        .Q(sm_reset_tx_timer_sat),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    txuserrdy_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .Q(\gen_gtwizard_gthe4.txuserrdy_int ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_reset_inv_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_inv_synchronizer
   (\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_sync_int ,
    \FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg[0] ,
    \FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg[1] ,
    E,
    rxusrclk_in,
    rst_in_sync2_reg_0,
    Q,
    gtwiz_buffbypass_rx_start_user_in,
    \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_reg ,
    gtwiz_buffbypass_rx_done_out,
    \gen_gtwizard_gthe4.rxdlysreset_int ,
    \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg ,
    \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int );
  output \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_sync_int ;
  output \FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg[0] ;
  output \FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg[1] ;
  output [0:0]E;
  input [0:0]rxusrclk_in;
  input rst_in_sync2_reg_0;
  input [1:0]Q;
  input [0:0]gtwiz_buffbypass_rx_start_user_in;
  input \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_reg ;
  input [0:0]gtwiz_buffbypass_rx_done_out;
  input \gen_gtwizard_gthe4.rxdlysreset_int ;
  input \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg ;
  input \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int ;

  wire [0:0]E;
  wire \FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg[0] ;
  wire \FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg[1] ;
  wire [1:0]Q;
  wire \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int ;
  wire \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg ;
  wire \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_reg ;
  wire \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_sync_int ;
  wire \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_start_int__1 ;
  wire \gen_gtwizard_gthe4.rxdlysreset_int ;
  wire [0:0]gtwiz_buffbypass_rx_done_out;
  wire [0:0]gtwiz_buffbypass_rx_start_user_in;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  wire rst_in_sync2_reg_0;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire [0:0]rxusrclk_in;

  LUT5 #(
    .INIT(32'hAEFEAEAE)) 
    \FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx[1]_i_1 
       (.I0(Q[0]),
        .I1(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_start_int__1 ),
        .I2(Q[1]),
        .I3(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_reg ),
        .I4(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_master_syncdone_sync_int ),
        .O(E));
  LUT3 #(
    .INIT(8'hF4)) 
    \FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx[1]_i_3 
       (.I0(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_reg ),
        .I1(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_sync_int ),
        .I2(gtwiz_buffbypass_rx_start_user_in),
        .O(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_start_int__1 ));
  LUT6 #(
    .INIT(64'hFFFFBBABAAAA0000)) 
    \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_done_out_i_1 
       (.I0(Q[0]),
        .I1(gtwiz_buffbypass_rx_start_user_in),
        .I2(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_sync_int ),
        .I3(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_reg ),
        .I4(Q[1]),
        .I5(gtwiz_buffbypass_rx_done_out),
        .O(\FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg[0] ));
  LUT6 #(
    .INIT(64'hAAAAFFFF00005510)) 
    \gen_gtwiz_buffbypass_rx_main.gen_auto_mode.rxdlysreset_out[0]_i_1 
       (.I0(Q[1]),
        .I1(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_reg ),
        .I2(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_sync_int ),
        .I3(gtwiz_buffbypass_rx_start_user_in),
        .I4(Q[0]),
        .I5(\gen_gtwizard_gthe4.rxdlysreset_int ),
        .O(\FSM_sequential_gen_gtwiz_buffbypass_rx_main.gen_auto_mode.sm_buffbypass_rx_reg[1] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_sync2_reg_0),
        .D(1'b1),
        .Q(rst_in_meta));
  FDCE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_sync2_reg_0),
        .D(rst_in_sync3),
        .Q(\gen_gtwiz_buffbypass_rx_main.gen_auto_mode.gtwiz_buffbypass_rx_resetdone_sync_int ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_sync2_reg_0),
        .D(rst_in_meta),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_sync2_reg_0),
        .D(rst_in_sync1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_sync2_reg_0),
        .D(rst_in_sync2),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_reset_inv_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_inv_synchronizer_32
   (gtwiz_reset_rx_done_out,
    rst_in_out_reg_0,
    rxusrclk_in,
    rst_in_sync3_reg_0);
  output [0:0]gtwiz_reset_rx_done_out;
  output rst_in_out_reg_0;
  input [0:0]rxusrclk_in;
  input rst_in_sync3_reg_0;

  wire [0:0]gtwiz_reset_rx_done_out;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_i_1__0_n_0;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire rst_in_sync3_reg_0;
  wire [0:0]rxusrclk_in;

  LUT1 #(
    .INIT(2'h1)) 
    rst_in_meta_i_1__3
       (.I0(gtwiz_reset_rx_done_out),
        .O(rst_in_out_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(1'b1),
        .Q(rst_in_meta));
  LUT1 #(
    .INIT(2'h1)) 
    rst_in_out_i_1__0
       (.I0(rst_in_sync3_reg_0),
        .O(rst_in_out_i_1__0_n_0));
  FDCE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync3),
        .Q(gtwiz_reset_rx_done_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_meta),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(rxusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync2),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_reset_inv_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_inv_synchronizer_33
   (gtwiz_reset_tx_done_out,
    txusrclk_in,
    rst_in_sync2_reg_0);
  output [0:0]gtwiz_reset_tx_done_out;
  input [0:0]txusrclk_in;
  input rst_in_sync2_reg_0;

  wire [0:0]gtwiz_reset_tx_done_out;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_i_1__1_n_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  wire rst_in_sync2_reg_0;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire [0:0]txusrclk_in;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(txusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__1_n_0),
        .D(1'b1),
        .Q(rst_in_meta));
  LUT1 #(
    .INIT(2'h1)) 
    rst_in_out_i_1__1
       (.I0(rst_in_sync2_reg_0),
        .O(rst_in_out_i_1__1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(txusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__1_n_0),
        .D(rst_in_sync3),
        .Q(gtwiz_reset_tx_done_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(txusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__1_n_0),
        .D(rst_in_meta),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(txusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__1_n_0),
        .D(rst_in_sync1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(txusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__1_n_0),
        .D(rst_in_sync2),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_reset_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer
   (gtwiz_reset_all_sync,
    drpclk_in,
    gtwiz_reset_all_in);
  output gtwiz_reset_all_sync;
  input [0:0]drpclk_in;
  input [0:0]gtwiz_reset_all_in;

  wire [0:0]drpclk_in;
  wire [0:0]gtwiz_reset_all_in;
  wire gtwiz_reset_all_sync;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_all_in),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_all_in),
        .Q(gtwiz_reset_all_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_all_in),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_all_in),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_all_in),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_reset_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_26
   (gtwiz_reset_rx_any_sync,
    \FSM_sequential_sm_reset_rx_reg[1] ,
    drpclk_in,
    Q,
    \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ,
    rst_in_sync3_reg_0,
    gtwiz_reset_rx_datapath_in,
    rst_in_sync3_reg_1);
  output gtwiz_reset_rx_any_sync;
  output \FSM_sequential_sm_reset_rx_reg[1] ;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ;
  input rst_in_sync3_reg_0;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input rst_in_sync3_reg_1;

  wire \FSM_sequential_sm_reset_rx_reg[1] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ;
  wire gtwiz_reset_rx_any;
  wire gtwiz_reset_rx_any_sync;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire rst_in_sync3_reg_0;
  wire rst_in_sync3_reg_1;

  LUT5 #(
    .INIT(32'hFFDF0010)) 
    pllreset_rx_out_i_1
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(gtwiz_reset_rx_any_sync),
        .I4(\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .O(\FSM_sequential_sm_reset_rx_reg[1] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_meta));
  LUT3 #(
    .INIT(8'hFE)) 
    rst_in_out_i_1
       (.I0(rst_in_sync3_reg_0),
        .I1(gtwiz_reset_rx_datapath_in),
        .I2(rst_in_sync3_reg_1),
        .O(gtwiz_reset_rx_any));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_rx_any),
        .Q(gtwiz_reset_rx_any_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_reset_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_27
   (in0,
    drpclk_in,
    gtwiz_reset_rx_datapath_in,
    rst_in_out_reg_0);
  output in0;
  input [0:0]drpclk_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input rst_in_out_reg_0;

  wire [0:0]drpclk_in;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire in0;
  wire rst_in0_0;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1
       (.I0(gtwiz_reset_rx_datapath_in),
        .I1(rst_in_out_reg_0),
        .O(rst_in0_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in0_0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in0_0),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in0_0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in0_0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in0_0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_reset_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_28
   (in0,
    drpclk_in,
    rst_in_meta_reg_0);
  output in0;
  input [0:0]drpclk_in;
  input rst_in_meta_reg_0;

  wire [0:0]drpclk_in;
  wire in0;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_meta_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in_meta_reg_0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in_meta_reg_0),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in_meta_reg_0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in_meta_reg_0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in_meta_reg_0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_reset_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_29
   (gtwiz_reset_tx_any_sync,
    \FSM_sequential_sm_reset_tx_reg[1] ,
    drpclk_in,
    gtwiz_reset_tx_datapath_in,
    rst_in_out_reg_0,
    Q,
    \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int );
  output gtwiz_reset_tx_any_sync;
  output \FSM_sequential_sm_reset_tx_reg[1] ;
  input [0:0]drpclk_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input rst_in_out_reg_0;
  input [2:0]Q;
  input \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ;

  wire \FSM_sequential_sm_reset_tx_reg[1] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ;
  wire gtwiz_reset_tx_any;
  wire gtwiz_reset_tx_any_sync;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT5 #(
    .INIT(32'hFFDF0010)) 
    pllreset_tx_out_i_1
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(gtwiz_reset_tx_any_sync),
        .I4(\gen_gtwizard_gthe4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .O(\FSM_sequential_sm_reset_tx_reg[1] ));
  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1__0
       (.I0(gtwiz_reset_tx_datapath_in),
        .I1(rst_in_out_reg_0),
        .O(gtwiz_reset_tx_any));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_tx_any),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_tx_any),
        .Q(gtwiz_reset_tx_any_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_tx_any),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_tx_any),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_tx_any),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_reset_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_30
   (in0,
    drpclk_in,
    gtwiz_reset_tx_datapath_in);
  output in0;
  input [0:0]drpclk_in;
  input [0:0]gtwiz_reset_tx_datapath_in;

  wire [0:0]drpclk_in;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire in0;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_tx_datapath_in),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_tx_datapath_in),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_tx_datapath_in),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_tx_datapath_in),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_tx_datapath_in),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_reset_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_31
   (in0,
    drpclk_in,
    rst_in_meta_reg_0);
  output in0;
  input [0:0]drpclk_in;
  input rst_in_meta_reg_0;

  wire [0:0]drpclk_in;
  wire in0;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_meta_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in_meta_reg_0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in_meta_reg_0),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in_meta_reg_0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in_meta_reg_0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in_meta_reg_0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_reset_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_34
   (rst_in_out_reg_0,
    drpclk_in,
    rst_in0);
  output rst_in_out_reg_0;
  input [0:0]drpclk_in;
  input rst_in0;

  wire [0:0]drpclk_in;
  wire rst_in0;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in0),
        .Q(rst_in_out_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_reset_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_36
   (drpclk_in);
  input [0:0]drpclk_in;

  wire [0:0]drpclk_in;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_in_meta));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(1'b1),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(1'b1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(1'b1),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_reset_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_37
   (cal_on_tx_reset_in_sync,
    drpclk_in,
    RESET_IN);
  output cal_on_tx_reset_in_sync;
  input [0:0]drpclk_in;
  input RESET_IN;

  wire RESET_IN;
  wire cal_on_tx_reset_in_sync;
  wire [0:0]drpclk_in;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(RESET_IN),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(RESET_IN),
        .Q(cal_on_tx_reset_in_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(RESET_IN),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(RESET_IN),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(RESET_IN),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_17_reset_synchronizer" *) 
module bd_fd73_pcs_pma_0_gtwizard_ultrascale_v1_7_17_reset_synchronizer_44
   (rst_in_out,
    txoutclkmon,
    out);
  output rst_in_out;
  input txoutclkmon;
  input out;

  wire out;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire txoutclkmon;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(1'b0),
        .PRE(out),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(out),
        .Q(rst_in_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(out),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(out),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(out),
        .Q(rst_in_sync3));
endmodule

module bd_fd73_pcs_pma_0_johnson_cntr
   (clk12_5,
    clk_en_12_5_fall0,
    clk_en0,
    speed_is_10_100_fall_reg,
    CLK,
    reset_out,
    clk12_5_reg,
    speed_is_10_100_fall,
    speed_is_100_fall,
    clk1_25,
    reset_fall);
  output clk12_5;
  output clk_en_12_5_fall0;
  output clk_en0;
  output speed_is_10_100_fall_reg;
  input CLK;
  input reset_out;
  input clk12_5_reg;
  input speed_is_10_100_fall;
  input speed_is_100_fall;
  input clk1_25;
  input reset_fall;

  wire CLK;
  wire clk12_5;
  wire clk12_5_reg;
  wire clk1_25;
  wire clk_en0;
  wire clk_en_12_5_fall0;
  wire reg1;
  wire reg1_i_1_n_0;
  wire reg2;
  wire reg4;
  wire reg5;
  wire reg5_reg_n_0;
  wire reset_fall;
  wire reset_out;
  wire speed_is_100_fall;
  wire speed_is_10_100_fall;
  wire speed_is_10_100_fall_reg;

  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h2)) 
    clk_en_12_5_fall_i_1
       (.I0(clk12_5_reg),
        .I1(clk12_5),
        .O(clk_en_12_5_fall0));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h2)) 
    clk_en_12_5_rise_i_1
       (.I0(clk12_5),
        .I1(clk12_5_reg),
        .O(clk_en0));
  LUT1 #(
    .INIT(2'h1)) 
    reg1_i_1
       (.I0(reg5_reg_n_0),
        .O(reg1_i_1_n_0));
  FDRE reg1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(reg1_i_1_n_0),
        .Q(reg1),
        .R(reg5));
  FDRE reg2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(reg1),
        .Q(reg2),
        .R(reg5));
  FDRE reg3_reg
       (.C(CLK),
        .CE(1'b1),
        .D(reg2),
        .Q(clk12_5),
        .R(reg5));
  FDRE reg4_reg
       (.C(CLK),
        .CE(1'b1),
        .D(clk12_5),
        .Q(reg4),
        .R(reg5));
  LUT3 #(
    .INIT(8'hF4)) 
    reg5_i_1
       (.I0(reg4),
        .I1(reg5_reg_n_0),
        .I2(reset_out),
        .O(reg5));
  FDRE reg5_reg
       (.C(CLK),
        .CE(1'b1),
        .D(reg4),
        .Q(reg5_reg_n_0),
        .R(reg5));
  LUT5 #(
    .INIT(32'h0000DFD5)) 
    sgmii_clk_f_i_1
       (.I0(speed_is_10_100_fall),
        .I1(clk12_5),
        .I2(speed_is_100_fall),
        .I3(clk1_25),
        .I4(reset_fall),
        .O(speed_is_10_100_fall_reg));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_johnson_cntr" *) 
module bd_fd73_pcs_pma_0_johnson_cntr_48
   (clk1_25,
    sgmii_clk_r0_out,
    clk_en_1_25_fall0,
    clk_en,
    CLK,
    reset_out,
    sgmii_clk_r_reg,
    data_out,
    clk12_5,
    clk1_25_reg);
  output clk1_25;
  output sgmii_clk_r0_out;
  output clk_en_1_25_fall0;
  input clk_en;
  input CLK;
  input reset_out;
  input sgmii_clk_r_reg;
  input data_out;
  input clk12_5;
  input clk1_25_reg;

  wire CLK;
  wire clk12_5;
  wire clk1_25;
  wire clk1_25_reg;
  wire clk_en;
  wire clk_en_1_25_fall0;
  wire data_out;
  wire reg1_i_1__0_n_0;
  wire reg1_reg_n_0;
  wire reg2_reg_n_0;
  wire reg4;
  wire reg5;
  wire reg5_reg_n_0;
  wire reset_out;
  wire sgmii_clk_r0_out;
  wire sgmii_clk_r_reg;

  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h2)) 
    clk_en_1_25_fall_i_1
       (.I0(clk1_25_reg),
        .I1(clk1_25),
        .O(clk_en_1_25_fall0));
  LUT1 #(
    .INIT(2'h1)) 
    reg1_i_1__0
       (.I0(reg5_reg_n_0),
        .O(reg1_i_1__0_n_0));
  FDRE reg1_reg
       (.C(CLK),
        .CE(clk_en),
        .D(reg1_i_1__0_n_0),
        .Q(reg1_reg_n_0),
        .R(reg5));
  FDRE reg2_reg
       (.C(CLK),
        .CE(clk_en),
        .D(reg1_reg_n_0),
        .Q(reg2_reg_n_0),
        .R(reg5));
  FDRE reg3_reg
       (.C(CLK),
        .CE(clk_en),
        .D(reg2_reg_n_0),
        .Q(clk1_25),
        .R(reg5));
  FDRE reg4_reg
       (.C(CLK),
        .CE(clk_en),
        .D(clk1_25),
        .Q(reg4),
        .R(reg5));
  LUT4 #(
    .INIT(16'hFF40)) 
    reg5_i_1__0
       (.I0(reg4),
        .I1(clk_en),
        .I2(reg5_reg_n_0),
        .I3(reset_out),
        .O(reg5));
  FDRE reg5_reg
       (.C(CLK),
        .CE(clk_en),
        .D(reg4),
        .Q(reg5_reg_n_0),
        .R(reg5));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    sgmii_clk_r_i_1
       (.I0(sgmii_clk_r_reg),
        .I1(clk1_25),
        .I2(data_out),
        .I3(clk12_5),
        .O(sgmii_clk_r0_out));
endmodule

module bd_fd73_pcs_pma_0_reset_sync
   (reset_out,
    rxuserclk2,
    enablealign);
  output reset_out;
  input rxuserclk2;
  input enablealign;

  wire enablealign;
  wire reset_out;
  wire reset_sync_reg1;
  wire reset_sync_reg2;
  wire reset_sync_reg3;
  wire reset_sync_reg4;
  wire reset_sync_reg5;
  wire rxuserclk2;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(1'b0),
        .PRE(enablealign),
        .Q(reset_sync_reg1));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_sync_reg1),
        .PRE(enablealign),
        .Q(reset_sync_reg2));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_sync_reg2),
        .PRE(enablealign),
        .Q(reset_sync_reg3));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_sync_reg3),
        .PRE(enablealign),
        .Q(reset_sync_reg4));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_sync_reg4),
        .PRE(enablealign),
        .Q(reset_sync_reg5));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_sync_reg5),
        .PRE(1'b0),
        .Q(reset_out));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_reset_sync" *) 
module bd_fd73_pcs_pma_0_reset_sync_0
   (SR,
    reset_out,
    reset_sync6_0,
    initialize_ram_complete,
    initialize_ram_complete_pulse,
    rxuserclk2,
    reset_in);
  output [0:0]SR;
  output reset_out;
  output [0:0]reset_sync6_0;
  input initialize_ram_complete;
  input initialize_ram_complete_pulse;
  input rxuserclk2;
  input reset_in;

  wire [0:0]SR;
  wire initialize_ram_complete;
  wire initialize_ram_complete_pulse;
  wire reset_in;
  wire reset_out;
  wire [0:0]reset_sync6_0;
  wire reset_sync_reg1;
  wire reset_sync_reg2;
  wire reset_sync_reg3;
  wire reset_sync_reg4;
  wire reset_sync_reg5;
  wire rxuserclk2;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(1'b0),
        .PRE(reset_in),
        .Q(reset_sync_reg1));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_sync_reg1),
        .PRE(reset_in),
        .Q(reset_sync_reg2));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_sync_reg2),
        .PRE(reset_in),
        .Q(reset_sync_reg3));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_sync_reg3),
        .PRE(reset_in),
        .Q(reset_sync_reg4));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_sync_reg4),
        .PRE(reset_in),
        .Q(reset_sync_reg5));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(reset_sync_reg5),
        .PRE(1'b0),
        .Q(reset_out));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \wr_addr[4]_i_1 
       (.I0(reset_out),
        .I1(initialize_ram_complete_pulse),
        .O(reset_sync6_0));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \wr_data_reg[28]_i_1 
       (.I0(reset_out),
        .I1(initialize_ram_complete),
        .O(SR));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_reset_sync" *) 
module bd_fd73_pcs_pma_0_reset_sync_45
   (reset_out,
    CLK,
    SR);
  output reset_out;
  input CLK;
  input [0:0]SR;

  wire CLK;
  wire [0:0]SR;
  wire reset_out;
  wire reset_sync_reg1;
  wire reset_sync_reg2;
  wire reset_sync_reg3;
  wire reset_sync_reg4;
  wire reset_sync_reg5;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync1
       (.C(CLK),
        .CE(1'b1),
        .D(1'b0),
        .PRE(SR),
        .Q(reset_sync_reg1));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync2
       (.C(CLK),
        .CE(1'b1),
        .D(reset_sync_reg1),
        .PRE(SR),
        .Q(reset_sync_reg2));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync3
       (.C(CLK),
        .CE(1'b1),
        .D(reset_sync_reg2),
        .PRE(SR),
        .Q(reset_sync_reg3));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync4
       (.C(CLK),
        .CE(1'b1),
        .D(reset_sync_reg3),
        .PRE(SR),
        .Q(reset_sync_reg4));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync5
       (.C(CLK),
        .CE(1'b1),
        .D(reset_sync_reg4),
        .PRE(SR),
        .Q(reset_sync_reg5));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FDP" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDPE #(
    .INIT(1'b1)) 
    reset_sync6
       (.C(CLK),
        .CE(1'b1),
        .D(reset_sync_reg5),
        .PRE(1'b0),
        .Q(reset_out));
endmodule

module bd_fd73_pcs_pma_0_resets
   (pma_reset_out,
    independent_clock_bufg,
    reset);
  output pma_reset_out;
  input independent_clock_bufg;
  input reset;

  wire independent_clock_bufg;
  (* async_reg = "true" *) wire [3:0]pma_reset_pipe;
  wire reset;

  assign pma_reset_out = pma_reset_pipe[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE \pma_reset_pipe_reg[0] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(1'b0),
        .PRE(reset),
        .Q(pma_reset_pipe[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE \pma_reset_pipe_reg[1] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(pma_reset_pipe[0]),
        .PRE(reset),
        .Q(pma_reset_pipe[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE \pma_reset_pipe_reg[2] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(pma_reset_pipe[1]),
        .PRE(reset),
        .Q(pma_reset_pipe[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE \pma_reset_pipe_reg[3] 
       (.C(independent_clock_bufg),
        .CE(1'b1),
        .D(pma_reset_pipe[2]),
        .PRE(reset),
        .Q(pma_reset_pipe[3]));
endmodule

module bd_fd73_pcs_pma_0_rx_elastic_buffer
   (initialize_ram_complete,
    initialize_ram_complete_pulse,
    rxchariscomma,
    rxcharisk,
    rxdisperr,
    rxnotintable,
    rxclkcorcnt,
    rxbufstatus,
    Q,
    CLK,
    rxuserclk2,
    SR,
    reset_in,
    \wr_data_reg_reg[0]_0 ,
    D);
  output initialize_ram_complete;
  output initialize_ram_complete_pulse;
  output [0:0]rxchariscomma;
  output [0:0]rxcharisk;
  output [0:0]rxdisperr;
  output [0:0]rxnotintable;
  output [1:0]rxclkcorcnt;
  output [0:0]rxbufstatus;
  output [7:0]Q;
  input CLK;
  input rxuserclk2;
  input [1:0]SR;
  input reset_in;
  input [0:0]\wr_data_reg_reg[0]_0 ;
  input [23:0]D;

  wire CLK;
  wire [23:0]D;
  wire [7:0]Q;
  wire [1:0]SR;
  wire [4:1]bin_to_gray;
  wire d16p2_wr_reg;
  wire d21p5_wr_reg;
  wire d21p5_wr_reg2;
  wire d21p5_wr_reg_i_2_n_0;
  wire d2p2_wr_reg;
  wire d2p2_wr_reg2;
  wire d2p2_wr_reg_i_2_n_0;
  wire data_in;
  wire data_out;
  wire [28:0]dpo;
  wire even;
  wire even_i_1_n_0;
  wire [4:0]gray_to_bin;
  wire initialize_counter0;
  wire [4:0]initialize_counter_reg;
  wire initialize_ram;
  wire initialize_ram0;
  wire initialize_ram_complete;
  wire initialize_ram_complete_i_2_n_0;
  wire initialize_ram_complete_pulse;
  wire initialize_ram_complete_pulse0;
  wire initialize_ram_complete_reg__0;
  wire initialize_ram_complete_sync;
  wire initialize_ram_complete_sync_reg1;
  wire initialize_ram_complete_sync_ris_edg;
  wire initialize_ram_complete_sync_ris_edg0;
  wire initialize_ram_i_1_n_0;
  wire insert_idle;
  wire insert_idle_i_1_n_0;
  wire insert_idle_reg__0;
  wire k28p5_wr_reg;
  wire k28p5_wr_reg2;
  wire k28p5_wr_reg_i_2_n_0;
  wire p_10_in;
  wire p_13_in;
  wire p_14_in;
  wire p_17_in;
  wire p_18_in;
  wire p_1_in;
  wire p_1_in15_in;
  wire p_1_in30_in;
  wire p_1_in4_in;
  wire p_25_in;
  wire p_2_in;
  wire p_2_in18_in;
  wire p_2_in33_in;
  wire p_2_in6_in;
  wire p_3_in;
  wire p_3_in21_in;
  wire p_3_in36_in;
  wire p_3_in8_in;
  wire p_4_in;
  wire p_4_in10_in;
  wire p_4_in_0;
  wire [4:0]plusOp;
  wire [5:0]plusOp__0;
  wire [4:0]plusOp__1;
  wire [5:0]rd_addr;
  wire [5:0]rd_addr_gray;
  wire \rd_addr_gray[0]_i_1_n_0 ;
  wire \rd_addr_gray[1]_i_1_n_0 ;
  wire \rd_addr_gray[2]_i_1_n_0 ;
  wire \rd_addr_gray[3]_i_1_n_0 ;
  wire \rd_addr_gray[4]_i_1_n_0 ;
  wire [5:0]rd_addr_plus1;
  wire \rd_addr_plus2_reg_n_0_[0] ;
  wire \rd_addr_plus2_reg_n_0_[5] ;
  wire [27:0]rd_data;
  wire [28:0]rd_data_reg;
  wire \rd_data_reg_n_0_[28] ;
  wire rd_enable;
  wire rd_enable_i_10_n_0;
  wire rd_enable_i_11_n_0;
  wire rd_enable_i_12_n_0;
  wire rd_enable_i_1_n_0;
  wire rd_enable_i_2_n_0;
  wire rd_enable_i_4_n_0;
  wire rd_enable_i_5_n_0;
  wire rd_enable_i_6_n_0;
  wire rd_enable_i_7_n_0;
  wire rd_enable_i_8_n_0;
  wire rd_enable_i_9_n_0;
  wire [5:0]rd_occupancy;
  wire [5:0]rd_occupancy01_out;
  wire rd_occupancy0_carry_n_3;
  wire rd_occupancy0_carry_n_4;
  wire rd_occupancy0_carry_n_5;
  wire rd_occupancy0_carry_n_6;
  wire rd_occupancy0_carry_n_7;
  wire \reclock_rd_addrgray[0].sync_rd_addrgray_n_0 ;
  wire \reclock_rd_addrgray[1].sync_rd_addrgray_n_0 ;
  wire \reclock_rd_addrgray[2].sync_rd_addrgray_n_0 ;
  wire \reclock_rd_addrgray[3].sync_rd_addrgray_n_0 ;
  wire \reclock_rd_addrgray[4].sync_rd_addrgray_n_0 ;
  wire \reclock_rd_addrgray[4].sync_rd_addrgray_n_1 ;
  wire \reclock_rd_addrgray[5].sync_rd_addrgray_n_0 ;
  wire \reclock_rd_addrgray[5].sync_rd_addrgray_n_1 ;
  wire \reclock_wr_addrgray[0].sync_wr_addrgray_n_0 ;
  wire \reclock_wr_addrgray[1].sync_wr_addrgray_n_0 ;
  wire \reclock_wr_addrgray[2].sync_wr_addrgray_n_0 ;
  wire \reclock_wr_addrgray[3].sync_wr_addrgray_n_0 ;
  wire \reclock_wr_addrgray[4].sync_wr_addrgray_n_0 ;
  wire \reclock_wr_addrgray[4].sync_wr_addrgray_n_1 ;
  wire \reclock_wr_addrgray[5].sync_wr_addrgray_n_0 ;
  wire \reclock_wr_addrgray[5].sync_wr_addrgray_n_1 ;
  wire remove_idle;
  wire remove_idle_i_1_n_0;
  wire remove_idle_i_2_n_0;
  wire remove_idle_i_3_n_0;
  wire remove_idle_i_4_n_0;
  wire remove_idle_reg1;
  wire remove_idle_reg2;
  wire reset_in;
  wire reset_modified;
  wire reset_modified_i_1_n_0;
  wire rxbuferr0;
  wire rxbuferr_i_1_n_0;
  wire [0:0]rxbufstatus;
  wire [0:0]rxchariscomma;
  wire rxchariscomma_usr_i_1_n_0;
  wire [0:0]rxcharisk;
  wire rxcharisk_usr_i_1_n_0;
  wire [1:0]rxclkcorcnt;
  wire \rxclkcorcnt[0]_i_1_n_0 ;
  wire \rxclkcorcnt[2]_i_1_n_0 ;
  wire \rxdata_usr[0]_i_1_n_0 ;
  wire \rxdata_usr[1]_i_1_n_0 ;
  wire \rxdata_usr[2]_i_1_n_0 ;
  wire \rxdata_usr[3]_i_1_n_0 ;
  wire \rxdata_usr[4]_i_1_n_0 ;
  wire \rxdata_usr[5]_i_1_n_0 ;
  wire \rxdata_usr[6]_i_1_n_0 ;
  wire \rxdata_usr[7]_i_1_n_0 ;
  wire [0:0]rxdisperr;
  wire rxdisperr_usr_i_1_n_0;
  wire [0:0]rxnotintable;
  wire rxnotintable_usr_i_1_n_0;
  wire rxuserclk2;
  wire start;
  wire [5:0]wr_addr;
  wire \wr_addr[5]_i_1_n_0 ;
  wire \wr_addr[5]_i_2_n_0 ;
  wire \wr_addr_gray_reg_n_0_[0] ;
  wire \wr_addr_gray_reg_n_0_[1] ;
  wire \wr_addr_gray_reg_n_0_[2] ;
  wire \wr_addr_gray_reg_n_0_[3] ;
  wire \wr_addr_gray_reg_n_0_[4] ;
  wire [5:0]wr_addr_plus1;
  wire \wr_addr_plus1[5]_i_1_n_0 ;
  wire \wr_addr_plus2[5]_i_1_n_0 ;
  wire \wr_addr_plus2[5]_i_2_n_0 ;
  wire \wr_addr_plus2_reg_n_0_[0] ;
  wire \wr_addr_plus2_reg_n_0_[5] ;
  wire [28:0]wr_data;
  wire [28:0]wr_data_reg;
  wire [0:0]\wr_data_reg_reg[0]_0 ;
  wire wr_enable;
  wire wr_enable_i_1_n_0;
  wire wr_enable_i_2_n_0;
  wire wr_enable_i_3_n_0;
  wire wr_enable_i_4_n_0;
  wire wr_enable_i_5_n_0;
  wire wr_enable_i_6_n_0;
  wire wr_enable_i_7_n_0;
  wire wr_enable_i_8_n_0;
  wire [5:0]wr_occupancy;
  wire [5:0]wr_occupancy00_out;
  wire wr_occupancy0_carry_n_3;
  wire wr_occupancy0_carry_n_4;
  wire wr_occupancy0_carry_n_5;
  wire wr_occupancy0_carry_n_6;
  wire wr_occupancy0_carry_n_7;
  wire NLW_ram_reg_0_63_0_6_DOH_UNCONNECTED;
  wire NLW_ram_reg_0_63_14_20_DOF_UNCONNECTED;
  wire NLW_ram_reg_0_63_14_20_DOG_UNCONNECTED;
  wire NLW_ram_reg_0_63_14_20_DOH_UNCONNECTED;
  wire NLW_ram_reg_0_63_28_34_DOH_UNCONNECTED;
  wire NLW_ram_reg_0_63_7_13_DOG_UNCONNECTED;
  wire NLW_ram_reg_0_63_7_13_DOH_UNCONNECTED;
  wire [7:5]NLW_rd_occupancy0_carry_CO_UNCONNECTED;
  wire [7:6]NLW_rd_occupancy0_carry_O_UNCONNECTED;
  wire [7:5]NLW_wr_occupancy0_carry_CO_UNCONNECTED;
  wire [7:6]NLW_wr_occupancy0_carry_O_UNCONNECTED;

  LUT5 #(
    .INIT(32'h96696996)) 
    \/i_ 
       (.I0(p_3_in21_in),
        .I1(p_1_in15_in),
        .I2(p_14_in),
        .I3(\reclock_rd_addrgray[4].sync_rd_addrgray_n_1 ),
        .I4(p_2_in18_in),
        .O(p_25_in));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    d16p2_wr_reg_i_1
       (.I0(d2p2_wr_reg_i_2_n_0),
        .I1(wr_data[1]),
        .I2(wr_data[0]),
        .I3(wr_data[2]),
        .I4(wr_data[3]),
        .I5(wr_data[4]),
        .O(p_17_in));
  FDRE d16p2_wr_reg_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(p_17_in),
        .Q(d16p2_wr_reg),
        .R(SR[1]));
  FDRE d21p5_wr_reg2_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(d21p5_wr_reg),
        .Q(d21p5_wr_reg2),
        .R(SR[1]));
  LUT4 #(
    .INIT(16'h0004)) 
    d21p5_wr_reg_i_1
       (.I0(wr_data[11]),
        .I1(wr_data[2]),
        .I2(wr_data[6]),
        .I3(d21p5_wr_reg_i_2_n_0),
        .O(p_13_in));
  LUT6 #(
    .INIT(64'hFFFFDFFFFFFFFFFF)) 
    d21p5_wr_reg_i_2
       (.I0(wr_data[4]),
        .I1(wr_data[3]),
        .I2(wr_data[0]),
        .I3(wr_data[7]),
        .I4(wr_data[1]),
        .I5(wr_data[5]),
        .O(d21p5_wr_reg_i_2_n_0));
  FDRE d21p5_wr_reg_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(p_13_in),
        .Q(d21p5_wr_reg),
        .R(SR[1]));
  FDRE d2p2_wr_reg2_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(d2p2_wr_reg),
        .Q(d2p2_wr_reg2),
        .R(SR[1]));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    d2p2_wr_reg_i_1
       (.I0(d2p2_wr_reg_i_2_n_0),
        .I1(wr_data[1]),
        .I2(wr_data[4]),
        .I3(wr_data[3]),
        .I4(wr_data[2]),
        .I5(wr_data[0]),
        .O(p_10_in));
  LUT4 #(
    .INIT(16'h0010)) 
    d2p2_wr_reg_i_2
       (.I0(wr_data[7]),
        .I1(wr_data[11]),
        .I2(wr_data[6]),
        .I3(wr_data[5]),
        .O(d2p2_wr_reg_i_2_n_0));
  FDRE d2p2_wr_reg_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(p_10_in),
        .Q(d2p2_wr_reg),
        .R(SR[1]));
  LUT1 #(
    .INIT(2'h1)) 
    even_i_1
       (.I0(even),
        .O(even_i_1_n_0));
  FDSE even_reg
       (.C(CLK),
        .CE(1'b1),
        .D(even_i_1_n_0),
        .Q(even),
        .S(reset_modified));
  LUT1 #(
    .INIT(2'h1)) 
    \initialize_counter[0]_i_1 
       (.I0(initialize_counter_reg[0]),
        .O(plusOp__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \initialize_counter[1]_i_1 
       (.I0(initialize_counter_reg[0]),
        .I1(initialize_counter_reg[1]),
        .O(plusOp__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \initialize_counter[2]_i_1 
       (.I0(initialize_counter_reg[2]),
        .I1(initialize_counter_reg[0]),
        .I2(initialize_counter_reg[1]),
        .O(plusOp__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \initialize_counter[3]_i_1 
       (.I0(initialize_counter_reg[1]),
        .I1(initialize_counter_reg[0]),
        .I2(initialize_counter_reg[2]),
        .I3(initialize_counter_reg[3]),
        .O(plusOp__1[3]));
  LUT6 #(
    .INIT(64'h2AAAAAAAAAAAAAAA)) 
    \initialize_counter[4]_i_1 
       (.I0(initialize_ram),
        .I1(initialize_counter_reg[3]),
        .I2(initialize_counter_reg[2]),
        .I3(initialize_counter_reg[0]),
        .I4(initialize_counter_reg[1]),
        .I5(initialize_counter_reg[4]),
        .O(initialize_counter0));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \initialize_counter[4]_i_2 
       (.I0(initialize_counter_reg[4]),
        .I1(initialize_counter_reg[1]),
        .I2(initialize_counter_reg[0]),
        .I3(initialize_counter_reg[2]),
        .I4(initialize_counter_reg[3]),
        .O(plusOp__1[4]));
  FDRE \initialize_counter_reg[0] 
       (.C(rxuserclk2),
        .CE(initialize_counter0),
        .D(plusOp__1[0]),
        .Q(initialize_counter_reg[0]),
        .R(initialize_ram0));
  FDRE \initialize_counter_reg[1] 
       (.C(rxuserclk2),
        .CE(initialize_counter0),
        .D(plusOp__1[1]),
        .Q(initialize_counter_reg[1]),
        .R(initialize_ram0));
  FDRE \initialize_counter_reg[2] 
       (.C(rxuserclk2),
        .CE(initialize_counter0),
        .D(plusOp__1[2]),
        .Q(initialize_counter_reg[2]),
        .R(initialize_ram0));
  FDRE \initialize_counter_reg[3] 
       (.C(rxuserclk2),
        .CE(initialize_counter0),
        .D(plusOp__1[3]),
        .Q(initialize_counter_reg[3]),
        .R(initialize_ram0));
  FDRE \initialize_counter_reg[4] 
       (.C(rxuserclk2),
        .CE(initialize_counter0),
        .D(plusOp__1[4]),
        .Q(initialize_counter_reg[4]),
        .R(initialize_ram0));
  LUT2 #(
    .INIT(4'hE)) 
    initialize_ram_complete_i_1
       (.I0(start),
        .I1(SR[1]),
        .O(initialize_ram0));
  LUT6 #(
    .INIT(64'hFFFFFFFF80000000)) 
    initialize_ram_complete_i_2
       (.I0(initialize_counter_reg[3]),
        .I1(initialize_counter_reg[2]),
        .I2(initialize_counter_reg[0]),
        .I3(initialize_counter_reg[1]),
        .I4(initialize_counter_reg[4]),
        .I5(initialize_ram_complete),
        .O(initialize_ram_complete_i_2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    initialize_ram_complete_pulse_i_1
       (.I0(initialize_ram_complete),
        .I1(initialize_ram_complete_reg__0),
        .O(initialize_ram_complete_pulse0));
  FDRE initialize_ram_complete_pulse_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(initialize_ram_complete_pulse0),
        .Q(initialize_ram_complete_pulse),
        .R(initialize_ram0));
  FDRE initialize_ram_complete_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(initialize_ram_complete_i_2_n_0),
        .Q(initialize_ram_complete),
        .R(initialize_ram0));
  FDRE initialize_ram_complete_reg_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(initialize_ram_complete),
        .Q(initialize_ram_complete_reg__0),
        .R(initialize_ram0));
  FDRE initialize_ram_complete_sync_reg1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(initialize_ram_complete_sync),
        .Q(initialize_ram_complete_sync_reg1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    initialize_ram_complete_sync_ris_edg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(initialize_ram_complete_sync_ris_edg0),
        .Q(initialize_ram_complete_sync_ris_edg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h4)) 
    initialize_ram_i_1
       (.I0(initialize_ram_complete),
        .I1(initialize_ram),
        .O(initialize_ram_i_1_n_0));
  FDSE initialize_ram_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(initialize_ram_i_1_n_0),
        .Q(initialize_ram),
        .S(initialize_ram0));
  LUT6 #(
    .INIT(64'h4400400040004000)) 
    insert_idle_i_1
       (.I0(reset_modified),
        .I1(even),
        .I2(rd_enable_i_2_n_0),
        .I3(p_4_in),
        .I4(rd_enable_i_4_n_0),
        .I5(rd_enable_i_5_n_0),
        .O(insert_idle_i_1_n_0));
  FDRE insert_idle_reg
       (.C(CLK),
        .CE(1'b1),
        .D(insert_idle_i_1_n_0),
        .Q(insert_idle),
        .R(1'b0));
  FDRE insert_idle_reg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(insert_idle),
        .Q(insert_idle_reg__0),
        .R(reset_modified));
  FDRE k28p5_wr_reg2_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(k28p5_wr_reg),
        .Q(k28p5_wr_reg2),
        .R(SR[1]));
  LUT4 #(
    .INIT(16'h0040)) 
    k28p5_wr_reg_i_1
       (.I0(wr_data[16]),
        .I1(wr_data[19]),
        .I2(wr_data[23]),
        .I3(k28p5_wr_reg_i_2_n_0),
        .O(p_18_in));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7FFF)) 
    k28p5_wr_reg_i_2
       (.I0(wr_data[21]),
        .I1(wr_data[27]),
        .I2(wr_data[18]),
        .I3(wr_data[20]),
        .I4(wr_data[17]),
        .I5(wr_data[22]),
        .O(k28p5_wr_reg_i_2_n_0));
  FDRE k28p5_wr_reg_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(p_18_in),
        .Q(k28p5_wr_reg),
        .R(SR[1]));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2304" *) 
  (* RTL_RAM_NAME = "pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/ram_reg_0_63_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 ram_reg_0_63_0_6
       (.ADDRA(rd_addr),
        .ADDRB(rd_addr),
        .ADDRC(rd_addr),
        .ADDRD(rd_addr),
        .ADDRE(rd_addr),
        .ADDRF(rd_addr),
        .ADDRG(rd_addr),
        .ADDRH(wr_addr),
        .DIA(wr_data_reg[0]),
        .DIB(wr_data_reg[1]),
        .DIC(wr_data_reg[2]),
        .DID(wr_data_reg[3]),
        .DIE(wr_data_reg[4]),
        .DIF(wr_data_reg[5]),
        .DIG(wr_data_reg[6]),
        .DIH(1'b0),
        .DOA(dpo[0]),
        .DOB(dpo[1]),
        .DOC(dpo[2]),
        .DOD(dpo[3]),
        .DOE(dpo[4]),
        .DOF(dpo[5]),
        .DOG(dpo[6]),
        .DOH(NLW_ram_reg_0_63_0_6_DOH_UNCONNECTED),
        .WCLK(rxuserclk2),
        .WE(wr_enable));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2304" *) 
  (* RTL_RAM_NAME = "pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/ram_reg_0_63_14_20" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "20" *) 
  RAM64M8 ram_reg_0_63_14_20
       (.ADDRA(rd_addr),
        .ADDRB(rd_addr),
        .ADDRC(rd_addr),
        .ADDRD(rd_addr),
        .ADDRE(rd_addr),
        .ADDRF(rd_addr),
        .ADDRG(rd_addr),
        .ADDRH(wr_addr),
        .DIA(wr_data_reg[16]),
        .DIB(wr_data_reg[17]),
        .DIC(wr_data_reg[18]),
        .DID(wr_data_reg[19]),
        .DIE(wr_data_reg[20]),
        .DIF(1'b0),
        .DIG(1'b0),
        .DIH(1'b0),
        .DOA(dpo[16]),
        .DOB(dpo[17]),
        .DOC(dpo[18]),
        .DOD(dpo[19]),
        .DOE(dpo[20]),
        .DOF(NLW_ram_reg_0_63_14_20_DOF_UNCONNECTED),
        .DOG(NLW_ram_reg_0_63_14_20_DOG_UNCONNECTED),
        .DOH(NLW_ram_reg_0_63_14_20_DOH_UNCONNECTED),
        .WCLK(rxuserclk2),
        .WE(wr_enable));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2304" *) 
  (* RTL_RAM_NAME = "pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/ram_reg_0_63_28_34" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "28" *) 
  (* ram_slice_end = "34" *) 
  RAM64M8 ram_reg_0_63_28_34
       (.ADDRA(rd_addr),
        .ADDRB(rd_addr),
        .ADDRC(rd_addr),
        .ADDRD(rd_addr),
        .ADDRE(rd_addr),
        .ADDRF(rd_addr),
        .ADDRG(rd_addr),
        .ADDRH(wr_addr),
        .DIA(wr_data_reg[28]),
        .DIB(wr_data_reg[21]),
        .DIC(wr_data_reg[22]),
        .DID(wr_data_reg[23]),
        .DIE(wr_data_reg[25]),
        .DIF(wr_data_reg[26]),
        .DIG(wr_data_reg[27]),
        .DIH(1'b0),
        .DOA(dpo[28]),
        .DOB(dpo[21]),
        .DOC(dpo[22]),
        .DOD(dpo[23]),
        .DOE(dpo[25]),
        .DOF(dpo[26]),
        .DOG(dpo[27]),
        .DOH(NLW_ram_reg_0_63_28_34_DOH_UNCONNECTED),
        .WCLK(rxuserclk2),
        .WE(wr_enable));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2304" *) 
  (* RTL_RAM_NAME = "pcs_pma_block_i/transceiver_inst/rx_elastic_buffer_inst/ram_reg_0_63_7_13" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "13" *) 
  RAM64M8 ram_reg_0_63_7_13
       (.ADDRA(rd_addr),
        .ADDRB(rd_addr),
        .ADDRC(rd_addr),
        .ADDRD(rd_addr),
        .ADDRE(rd_addr),
        .ADDRF(rd_addr),
        .ADDRG(rd_addr),
        .ADDRH(wr_addr),
        .DIA(wr_data_reg[7]),
        .DIB(wr_data_reg[9]),
        .DIC(wr_data_reg[10]),
        .DID(wr_data_reg[11]),
        .DIE(wr_data_reg[12]),
        .DIF(wr_data_reg[13]),
        .DIG(1'b0),
        .DIH(1'b0),
        .DOA(dpo[7]),
        .DOB(dpo[9]),
        .DOC(dpo[10]),
        .DOD(dpo[11]),
        .DOE(dpo[12]),
        .DOF(dpo[13]),
        .DOG(NLW_ram_reg_0_63_7_13_DOG_UNCONNECTED),
        .DOH(NLW_ram_reg_0_63_7_13_DOH_UNCONNECTED),
        .WCLK(rxuserclk2),
        .WE(wr_enable));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr_gray[0]_i_1 
       (.I0(\rd_addr_plus2_reg_n_0_[0] ),
        .I1(p_1_in),
        .O(\rd_addr_gray[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr_gray[1]_i_1 
       (.I0(p_1_in),
        .I1(p_2_in),
        .O(\rd_addr_gray[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr_gray[2]_i_1 
       (.I0(p_2_in),
        .I1(p_3_in),
        .O(\rd_addr_gray[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr_gray[3]_i_1 
       (.I0(p_3_in),
        .I1(p_4_in_0),
        .O(\rd_addr_gray[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr_gray[4]_i_1 
       (.I0(p_4_in_0),
        .I1(\rd_addr_plus2_reg_n_0_[5] ),
        .O(\rd_addr_gray[4]_i_1_n_0 ));
  FDRE \rd_addr_gray_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_addr_gray[0]_i_1_n_0 ),
        .Q(rd_addr_gray[0]),
        .R(reset_modified));
  FDRE \rd_addr_gray_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_addr_gray[1]_i_1_n_0 ),
        .Q(rd_addr_gray[1]),
        .R(reset_modified));
  FDRE \rd_addr_gray_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_addr_gray[2]_i_1_n_0 ),
        .Q(rd_addr_gray[2]),
        .R(reset_modified));
  FDRE \rd_addr_gray_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_addr_gray[3]_i_1_n_0 ),
        .Q(rd_addr_gray[3]),
        .R(reset_modified));
  FDRE \rd_addr_gray_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_addr_gray[4]_i_1_n_0 ),
        .Q(rd_addr_gray[4]),
        .R(reset_modified));
  FDRE \rd_addr_gray_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rd_addr_plus2_reg_n_0_[5] ),
        .Q(rd_addr_gray[5]),
        .R(reset_modified));
  FDSE \rd_addr_plus1_reg[0] 
       (.C(CLK),
        .CE(rd_enable),
        .D(\rd_addr_plus2_reg_n_0_[0] ),
        .Q(rd_addr_plus1[0]),
        .S(reset_modified));
  FDRE \rd_addr_plus1_reg[1] 
       (.C(CLK),
        .CE(rd_enable),
        .D(p_1_in),
        .Q(rd_addr_plus1[1]),
        .R(reset_modified));
  FDRE \rd_addr_plus1_reg[2] 
       (.C(CLK),
        .CE(rd_enable),
        .D(p_2_in),
        .Q(rd_addr_plus1[2]),
        .R(reset_modified));
  FDRE \rd_addr_plus1_reg[3] 
       (.C(CLK),
        .CE(rd_enable),
        .D(p_3_in),
        .Q(rd_addr_plus1[3]),
        .R(reset_modified));
  FDRE \rd_addr_plus1_reg[4] 
       (.C(CLK),
        .CE(rd_enable),
        .D(p_4_in_0),
        .Q(rd_addr_plus1[4]),
        .R(reset_modified));
  FDRE \rd_addr_plus1_reg[5] 
       (.C(CLK),
        .CE(rd_enable),
        .D(\rd_addr_plus2_reg_n_0_[5] ),
        .Q(rd_addr_plus1[5]),
        .R(reset_modified));
  LUT1 #(
    .INIT(2'h1)) 
    \rd_addr_plus2[0]_i_1 
       (.I0(\rd_addr_plus2_reg_n_0_[0] ),
        .O(plusOp__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rd_addr_plus2[2]_i_1 
       (.I0(\rd_addr_plus2_reg_n_0_[0] ),
        .I1(p_1_in),
        .I2(p_2_in),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \rd_addr_plus2[3]_i_1 
       (.I0(p_1_in),
        .I1(\rd_addr_plus2_reg_n_0_[0] ),
        .I2(p_2_in),
        .I3(p_3_in),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rd_addr_plus2[4]_i_1 
       (.I0(p_2_in),
        .I1(\rd_addr_plus2_reg_n_0_[0] ),
        .I2(p_1_in),
        .I3(p_3_in),
        .I4(p_4_in_0),
        .O(plusOp__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \rd_addr_plus2[5]_i_1 
       (.I0(p_4_in_0),
        .I1(p_3_in),
        .I2(p_1_in),
        .I3(\rd_addr_plus2_reg_n_0_[0] ),
        .I4(p_2_in),
        .I5(\rd_addr_plus2_reg_n_0_[5] ),
        .O(plusOp__0[5]));
  FDRE \rd_addr_plus2_reg[0] 
       (.C(CLK),
        .CE(rd_enable),
        .D(plusOp__0[0]),
        .Q(\rd_addr_plus2_reg_n_0_[0] ),
        .R(reset_modified));
  FDSE \rd_addr_plus2_reg[1] 
       (.C(CLK),
        .CE(rd_enable),
        .D(\rd_addr_gray[0]_i_1_n_0 ),
        .Q(p_1_in),
        .S(reset_modified));
  FDRE \rd_addr_plus2_reg[2] 
       (.C(CLK),
        .CE(rd_enable),
        .D(plusOp__0[2]),
        .Q(p_2_in),
        .R(reset_modified));
  FDRE \rd_addr_plus2_reg[3] 
       (.C(CLK),
        .CE(rd_enable),
        .D(plusOp__0[3]),
        .Q(p_3_in),
        .R(reset_modified));
  FDRE \rd_addr_plus2_reg[4] 
       (.C(CLK),
        .CE(rd_enable),
        .D(plusOp__0[4]),
        .Q(p_4_in_0),
        .R(reset_modified));
  FDRE \rd_addr_plus2_reg[5] 
       (.C(CLK),
        .CE(rd_enable),
        .D(plusOp__0[5]),
        .Q(\rd_addr_plus2_reg_n_0_[5] ),
        .R(reset_modified));
  FDRE \rd_addr_reg[0] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_addr_plus1[0]),
        .Q(rd_addr[0]),
        .R(reset_modified));
  FDRE \rd_addr_reg[1] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_addr_plus1[1]),
        .Q(rd_addr[1]),
        .R(reset_modified));
  FDRE \rd_addr_reg[2] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_addr_plus1[2]),
        .Q(rd_addr[2]),
        .R(reset_modified));
  FDRE \rd_addr_reg[3] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_addr_plus1[3]),
        .Q(rd_addr[3]),
        .R(reset_modified));
  FDRE \rd_addr_reg[4] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_addr_plus1[4]),
        .Q(rd_addr[4]),
        .R(reset_modified));
  FDRE \rd_addr_reg[5] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_addr_plus1[5]),
        .Q(rd_addr[5]),
        .R(reset_modified));
  FDRE \rd_data_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[0]),
        .Q(rd_data[0]),
        .R(reset_modified));
  FDRE \rd_data_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[10]),
        .Q(rd_data[10]),
        .R(reset_modified));
  FDRE \rd_data_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[11]),
        .Q(rd_data[11]),
        .R(reset_modified));
  FDRE \rd_data_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[12]),
        .Q(rd_data[12]),
        .R(reset_modified));
  FDRE \rd_data_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[13]),
        .Q(rd_data[13]),
        .R(reset_modified));
  FDRE \rd_data_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[16]),
        .Q(rd_data[16]),
        .R(reset_modified));
  FDRE \rd_data_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[17]),
        .Q(rd_data[17]),
        .R(reset_modified));
  FDRE \rd_data_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[18]),
        .Q(rd_data[18]),
        .R(reset_modified));
  FDRE \rd_data_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[19]),
        .Q(rd_data[19]),
        .R(reset_modified));
  FDRE \rd_data_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[1]),
        .Q(rd_data[1]),
        .R(reset_modified));
  FDRE \rd_data_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[20]),
        .Q(rd_data[20]),
        .R(reset_modified));
  FDRE \rd_data_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[21]),
        .Q(rd_data[21]),
        .R(reset_modified));
  FDRE \rd_data_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[22]),
        .Q(rd_data[22]),
        .R(reset_modified));
  FDRE \rd_data_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[23]),
        .Q(rd_data[23]),
        .R(reset_modified));
  FDRE \rd_data_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[25]),
        .Q(rd_data[25]),
        .R(reset_modified));
  FDRE \rd_data_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[26]),
        .Q(rd_data[26]),
        .R(reset_modified));
  FDRE \rd_data_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[27]),
        .Q(rd_data[27]),
        .R(reset_modified));
  FDRE \rd_data_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[28]),
        .Q(\rd_data_reg_n_0_[28] ),
        .R(reset_modified));
  FDRE \rd_data_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[2]),
        .Q(rd_data[2]),
        .R(reset_modified));
  FDRE \rd_data_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[3]),
        .Q(rd_data[3]),
        .R(reset_modified));
  FDRE \rd_data_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[4]),
        .Q(rd_data[4]),
        .R(reset_modified));
  FDRE \rd_data_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[5]),
        .Q(rd_data[5]),
        .R(reset_modified));
  FDRE \rd_data_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[6]),
        .Q(rd_data[6]),
        .R(reset_modified));
  FDRE \rd_data_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[7]),
        .Q(rd_data[7]),
        .R(reset_modified));
  FDRE \rd_data_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(dpo[9]),
        .Q(rd_data[9]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[0] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[0]),
        .Q(rd_data_reg[0]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[10] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[10]),
        .Q(rd_data_reg[10]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[11] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[11]),
        .Q(rd_data_reg[11]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[12] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[12]),
        .Q(rd_data_reg[12]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[13] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[13]),
        .Q(rd_data_reg[13]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[16] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[16]),
        .Q(rd_data_reg[16]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[17] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[17]),
        .Q(rd_data_reg[17]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[18] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[18]),
        .Q(rd_data_reg[18]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[19] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[19]),
        .Q(rd_data_reg[19]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[1] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[1]),
        .Q(rd_data_reg[1]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[20] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[20]),
        .Q(rd_data_reg[20]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[21] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[21]),
        .Q(rd_data_reg[21]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[22] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[22]),
        .Q(rd_data_reg[22]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[23] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[23]),
        .Q(rd_data_reg[23]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[25] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[25]),
        .Q(rd_data_reg[25]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[26] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[26]),
        .Q(rd_data_reg[26]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[27] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[27]),
        .Q(rd_data_reg[27]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[28] 
       (.C(CLK),
        .CE(rd_enable),
        .D(\rd_data_reg_n_0_[28] ),
        .Q(rd_data_reg[28]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[2] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[2]),
        .Q(rd_data_reg[2]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[3] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[3]),
        .Q(rd_data_reg[3]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[4] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[4]),
        .Q(rd_data_reg[4]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[5] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[5]),
        .Q(rd_data_reg[5]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[6] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[6]),
        .Q(rd_data_reg[6]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[7] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[7]),
        .Q(rd_data_reg[7]),
        .R(reset_modified));
  FDRE \rd_data_reg_reg[9] 
       (.C(CLK),
        .CE(rd_enable),
        .D(rd_data[9]),
        .Q(rd_data_reg[9]),
        .R(reset_modified));
  LUT6 #(
    .INIT(64'h0044044404440444)) 
    rd_enable_i_1
       (.I0(reset_modified),
        .I1(even),
        .I2(rd_enable_i_2_n_0),
        .I3(p_4_in),
        .I4(rd_enable_i_4_n_0),
        .I5(rd_enable_i_5_n_0),
        .O(rd_enable_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT2 #(
    .INIT(4'h7)) 
    rd_enable_i_10
       (.I0(rd_occupancy[2]),
        .I1(rd_occupancy[3]),
        .O(rd_enable_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    rd_enable_i_11
       (.I0(rd_data[6]),
        .I1(rd_data[7]),
        .I2(rd_data[5]),
        .I3(rd_data[4]),
        .O(rd_enable_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    rd_enable_i_12
       (.I0(rd_data[7]),
        .I1(rd_data[6]),
        .I2(rd_data[5]),
        .I3(rd_data[4]),
        .O(rd_enable_i_12_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    rd_enable_i_2
       (.I0(rd_data[1]),
        .I1(rd_data[0]),
        .I2(rd_data[3]),
        .I3(rd_data[2]),
        .I4(rd_enable_i_6_n_0),
        .I5(rd_enable_i_7_n_0),
        .O(rd_enable_i_2_n_0));
  LUT4 #(
    .INIT(16'h0020)) 
    rd_enable_i_3
       (.I0(rd_enable_i_8_n_0),
        .I1(rd_data[16]),
        .I2(rd_data[18]),
        .I3(rd_data[17]),
        .O(p_4_in));
  LUT6 #(
    .INIT(64'h0001000100010000)) 
    rd_enable_i_4
       (.I0(rd_occupancy[4]),
        .I1(rd_occupancy[5]),
        .I2(rd_data[3]),
        .I3(rd_data[11]),
        .I4(rd_enable_i_9_n_0),
        .I5(rd_enable_i_10_n_0),
        .O(rd_enable_i_4_n_0));
  LUT5 #(
    .INIT(32'h08300800)) 
    rd_enable_i_5
       (.I0(rd_enable_i_11_n_0),
        .I1(rd_data[2]),
        .I2(rd_data[1]),
        .I3(rd_data[0]),
        .I4(rd_enable_i_12_n_0),
        .O(rd_enable_i_5_n_0));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    rd_enable_i_6
       (.I0(rd_data[4]),
        .I1(rd_data[5]),
        .I2(rd_data[6]),
        .I3(rd_data[7]),
        .I4(rd_occupancy[5]),
        .I5(rd_data[11]),
        .O(rd_enable_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    rd_enable_i_7
       (.I0(rd_occupancy[2]),
        .I1(rd_occupancy[3]),
        .I2(rd_occupancy[0]),
        .I3(rd_occupancy[1]),
        .I4(rd_occupancy[4]),
        .O(rd_enable_i_7_n_0));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    rd_enable_i_8
       (.I0(rd_data[19]),
        .I1(rd_data[20]),
        .I2(rd_data[21]),
        .I3(rd_data[22]),
        .I4(rd_data[27]),
        .I5(rd_data[23]),
        .O(rd_enable_i_8_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    rd_enable_i_9
       (.I0(rd_occupancy[0]),
        .I1(rd_occupancy[1]),
        .O(rd_enable_i_9_n_0));
  FDRE rd_enable_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rd_enable_i_1_n_0),
        .Q(rd_enable),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 rd_occupancy0_carry
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({NLW_rd_occupancy0_carry_CO_UNCONNECTED[7:5],rd_occupancy0_carry_n_3,rd_occupancy0_carry_n_4,rd_occupancy0_carry_n_5,rd_occupancy0_carry_n_6,rd_occupancy0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,gray_to_bin}),
        .O({NLW_rd_occupancy0_carry_O_UNCONNECTED[7:6],rd_occupancy01_out}),
        .S({1'b0,1'b0,\reclock_wr_addrgray[5].sync_wr_addrgray_n_0 ,\reclock_wr_addrgray[5].sync_wr_addrgray_n_1 ,\reclock_wr_addrgray[4].sync_wr_addrgray_n_0 ,\reclock_wr_addrgray[3].sync_wr_addrgray_n_0 ,\reclock_wr_addrgray[2].sync_wr_addrgray_n_0 ,\reclock_wr_addrgray[1].sync_wr_addrgray_n_0 }));
  LUT2 #(
    .INIT(4'h6)) 
    rd_occupancy0_carry_i_1
       (.I0(\reclock_wr_addrgray[4].sync_wr_addrgray_n_1 ),
        .I1(data_out),
        .O(gray_to_bin[4]));
  LUT3 #(
    .INIT(8'h96)) 
    rd_occupancy0_carry_i_2
       (.I0(p_1_in30_in),
        .I1(data_out),
        .I2(\reclock_wr_addrgray[4].sync_wr_addrgray_n_1 ),
        .O(gray_to_bin[3]));
  LUT4 #(
    .INIT(16'h6996)) 
    rd_occupancy0_carry_i_3
       (.I0(p_2_in33_in),
        .I1(\reclock_wr_addrgray[4].sync_wr_addrgray_n_1 ),
        .I2(data_out),
        .I3(p_1_in30_in),
        .O(gray_to_bin[2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    rd_occupancy0_carry_i_4
       (.I0(p_3_in36_in),
        .I1(p_1_in30_in),
        .I2(data_out),
        .I3(\reclock_wr_addrgray[4].sync_wr_addrgray_n_1 ),
        .I4(p_2_in33_in),
        .O(gray_to_bin[1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    rd_occupancy0_carry_i_5
       (.I0(\reclock_wr_addrgray[0].sync_wr_addrgray_n_0 ),
        .I1(p_2_in33_in),
        .I2(\reclock_wr_addrgray[4].sync_wr_addrgray_n_1 ),
        .I3(data_out),
        .I4(p_1_in30_in),
        .I5(p_3_in36_in),
        .O(gray_to_bin[0]));
  FDRE \rd_occupancy_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rd_occupancy01_out[0]),
        .Q(rd_occupancy[0]),
        .R(reset_modified));
  FDRE \rd_occupancy_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rd_occupancy01_out[1]),
        .Q(rd_occupancy[1]),
        .R(reset_modified));
  FDRE \rd_occupancy_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(rd_occupancy01_out[2]),
        .Q(rd_occupancy[2]),
        .R(reset_modified));
  FDRE \rd_occupancy_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(rd_occupancy01_out[3]),
        .Q(rd_occupancy[3]),
        .R(reset_modified));
  FDRE \rd_occupancy_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(rd_occupancy01_out[4]),
        .Q(rd_occupancy[4]),
        .R(reset_modified));
  FDSE \rd_occupancy_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(rd_occupancy01_out[5]),
        .Q(rd_occupancy[5]),
        .S(reset_modified));
  bd_fd73_pcs_pma_0_sync_block \reclock_rd_addrgray[0].sync_rd_addrgray 
       (.Q(rd_addr_gray[0]),
        .data_out(\reclock_rd_addrgray[0].sync_rd_addrgray_n_0 ),
        .rxuserclk2(rxuserclk2));
  bd_fd73_pcs_pma_0_sync_block_1 \reclock_rd_addrgray[1].sync_rd_addrgray 
       (.Q(wr_addr[0]),
        .S(\reclock_rd_addrgray[1].sync_rd_addrgray_n_0 ),
        .data_out(\reclock_rd_addrgray[0].sync_rd_addrgray_n_0 ),
        .data_sync_reg1_0(rd_addr_gray[1]),
        .data_sync_reg6_0(p_3_in21_in),
        .p_25_in(p_25_in),
        .rxuserclk2(rxuserclk2));
  bd_fd73_pcs_pma_0_sync_block_2 \reclock_rd_addrgray[2].sync_rd_addrgray 
       (.Q(wr_addr[1]),
        .S(\reclock_rd_addrgray[2].sync_rd_addrgray_n_0 ),
        .data_out(p_2_in18_in),
        .data_sync_reg1_0(rd_addr_gray[2]),
        .rxuserclk2(rxuserclk2),
        .\wr_occupancy_reg[5] (\reclock_rd_addrgray[4].sync_rd_addrgray_n_1 ),
        .\wr_occupancy_reg[5]_0 (p_14_in),
        .\wr_occupancy_reg[5]_1 (p_1_in15_in),
        .\wr_occupancy_reg[5]_2 (p_3_in21_in));
  bd_fd73_pcs_pma_0_sync_block_3 \reclock_rd_addrgray[3].sync_rd_addrgray 
       (.Q(wr_addr[2]),
        .S(\reclock_rd_addrgray[3].sync_rd_addrgray_n_0 ),
        .data_out(p_1_in15_in),
        .data_sync_reg1_0(rd_addr_gray[3]),
        .rxuserclk2(rxuserclk2),
        .\wr_occupancy_reg[5] (p_14_in),
        .\wr_occupancy_reg[5]_0 (\reclock_rd_addrgray[4].sync_rd_addrgray_n_1 ),
        .\wr_occupancy_reg[5]_1 (p_2_in18_in));
  bd_fd73_pcs_pma_0_sync_block_4 \reclock_rd_addrgray[4].sync_rd_addrgray 
       (.Q(wr_addr[3]),
        .S(\reclock_rd_addrgray[4].sync_rd_addrgray_n_0 ),
        .data_out(\reclock_rd_addrgray[4].sync_rd_addrgray_n_1 ),
        .data_sync_reg1_0(rd_addr_gray[4]),
        .rxuserclk2(rxuserclk2),
        .\wr_occupancy_reg[5] (p_14_in),
        .\wr_occupancy_reg[5]_0 (p_1_in15_in));
  bd_fd73_pcs_pma_0_sync_block_5 \reclock_rd_addrgray[5].sync_rd_addrgray 
       (.Q(wr_addr[5:4]),
        .S({\reclock_rd_addrgray[5].sync_rd_addrgray_n_0 ,\reclock_rd_addrgray[5].sync_rd_addrgray_n_1 }),
        .data_out(p_14_in),
        .data_sync_reg1_0(rd_addr_gray[5]),
        .rxuserclk2(rxuserclk2),
        .\wr_occupancy_reg[5] (\reclock_rd_addrgray[4].sync_rd_addrgray_n_1 ));
  bd_fd73_pcs_pma_0_sync_block_6 \reclock_wr_addrgray[0].sync_wr_addrgray 
       (.CLK(CLK),
        .Q(\wr_addr_gray_reg_n_0_[0] ),
        .data_out(\reclock_wr_addrgray[0].sync_wr_addrgray_n_0 ));
  bd_fd73_pcs_pma_0_sync_block_7 \reclock_wr_addrgray[1].sync_wr_addrgray 
       (.CLK(CLK),
        .DI(gray_to_bin[1]),
        .Q(rd_addr[0]),
        .S(\reclock_wr_addrgray[1].sync_wr_addrgray_n_0 ),
        .data_out(\reclock_wr_addrgray[0].sync_wr_addrgray_n_0 ),
        .data_sync_reg1_0(\wr_addr_gray_reg_n_0_[1] ),
        .data_sync_reg6_0(p_3_in36_in));
  bd_fd73_pcs_pma_0_sync_block_8 \reclock_wr_addrgray[2].sync_wr_addrgray 
       (.CLK(CLK),
        .Q(rd_addr[1]),
        .S(\reclock_wr_addrgray[2].sync_wr_addrgray_n_0 ),
        .data_out(p_2_in33_in),
        .data_sync_reg1_0(\wr_addr_gray_reg_n_0_[2] ),
        .\rd_occupancy_reg[5] (\reclock_wr_addrgray[4].sync_wr_addrgray_n_1 ),
        .\rd_occupancy_reg[5]_0 (data_out),
        .\rd_occupancy_reg[5]_1 (p_1_in30_in),
        .\rd_occupancy_reg[5]_2 (p_3_in36_in));
  bd_fd73_pcs_pma_0_sync_block_9 \reclock_wr_addrgray[3].sync_wr_addrgray 
       (.CLK(CLK),
        .Q(rd_addr[2]),
        .S(\reclock_wr_addrgray[3].sync_wr_addrgray_n_0 ),
        .data_out(p_1_in30_in),
        .data_sync_reg1_0(\wr_addr_gray_reg_n_0_[3] ),
        .\rd_occupancy_reg[5] (data_out),
        .\rd_occupancy_reg[5]_0 (\reclock_wr_addrgray[4].sync_wr_addrgray_n_1 ),
        .\rd_occupancy_reg[5]_1 (p_2_in33_in));
  bd_fd73_pcs_pma_0_sync_block_10 \reclock_wr_addrgray[4].sync_wr_addrgray 
       (.CLK(CLK),
        .Q(rd_addr[3]),
        .S(\reclock_wr_addrgray[4].sync_wr_addrgray_n_0 ),
        .data_out(\reclock_wr_addrgray[4].sync_wr_addrgray_n_1 ),
        .data_sync_reg1_0(\wr_addr_gray_reg_n_0_[4] ),
        .\rd_occupancy_reg[5] (data_out),
        .\rd_occupancy_reg[5]_0 (p_1_in30_in));
  bd_fd73_pcs_pma_0_sync_block_11 \reclock_wr_addrgray[5].sync_wr_addrgray 
       (.CLK(CLK),
        .Q(rd_addr[5:4]),
        .S({\reclock_wr_addrgray[5].sync_wr_addrgray_n_0 ,\reclock_wr_addrgray[5].sync_wr_addrgray_n_1 }),
        .data_out(data_out),
        .data_sync_reg1_0(data_in),
        .\rd_occupancy_reg[5] (\reclock_wr_addrgray[4].sync_wr_addrgray_n_1 ));
  LUT6 #(
    .INIT(64'h5D00FFFF5D000000)) 
    remove_idle_i_1
       (.I0(remove_idle_i_2_n_0),
        .I1(wr_enable_i_3_n_0),
        .I2(wr_enable_i_2_n_0),
        .I3(p_18_in),
        .I4(initialize_ram_complete),
        .I5(remove_idle),
        .O(remove_idle_i_1_n_0));
  LUT5 #(
    .INIT(32'hFBFBFBFF)) 
    remove_idle_i_2
       (.I0(remove_idle_i_3_n_0),
        .I1(d2p2_wr_reg_i_2_n_0),
        .I2(remove_idle_i_4_n_0),
        .I3(wr_occupancy[4]),
        .I4(wr_enable_i_8_n_0),
        .O(remove_idle_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    remove_idle_i_3
       (.I0(wr_data[4]),
        .I1(wr_data[3]),
        .I2(wr_data[2]),
        .I3(wr_data[0]),
        .I4(wr_data[1]),
        .O(remove_idle_i_3_n_0));
  LUT4 #(
    .INIT(16'hDFFF)) 
    remove_idle_i_4
       (.I0(k28p5_wr_reg),
        .I1(remove_idle),
        .I2(d16p2_wr_reg),
        .I3(wr_occupancy[5]),
        .O(remove_idle_i_4_n_0));
  FDRE remove_idle_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(remove_idle_i_1_n_0),
        .Q(remove_idle),
        .R(SR[1]));
  FDRE remove_idle_reg1_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(remove_idle),
        .Q(remove_idle_reg1),
        .R(SR[1]));
  FDRE remove_idle_reg2_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(remove_idle_reg1),
        .Q(remove_idle_reg2),
        .R(SR[1]));
  LUT3 #(
    .INIT(8'h3A)) 
    reset_modified_i_1
       (.I0(reset_in),
        .I1(initialize_ram_complete_sync_ris_edg),
        .I2(reset_modified),
        .O(reset_modified_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    reset_modified_reg
       (.C(CLK),
        .CE(1'b1),
        .D(reset_modified_i_1_n_0),
        .Q(reset_modified),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    rxbuferr_i_1
       (.I0(rxbuferr0),
        .I1(rxbufstatus),
        .O(rxbuferr_i_1_n_0));
  LUT6 #(
    .INIT(64'hE000000000000007)) 
    rxbuferr_i_2
       (.I0(rd_occupancy[0]),
        .I1(rd_occupancy[1]),
        .I2(rd_occupancy[5]),
        .I3(rd_occupancy[4]),
        .I4(rd_occupancy[3]),
        .I5(rd_occupancy[2]),
        .O(rxbuferr0));
  FDRE rxbuferr_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rxbuferr_i_1_n_0),
        .Q(rxbufstatus),
        .R(reset_modified));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    rxchariscomma_usr_i_1
       (.I0(rd_data_reg[28]),
        .I1(even),
        .I2(rd_data_reg[12]),
        .O(rxchariscomma_usr_i_1_n_0));
  FDRE rxchariscomma_usr_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rxchariscomma_usr_i_1_n_0),
        .Q(rxchariscomma),
        .R(reset_modified));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    rxcharisk_usr_i_1
       (.I0(rd_data_reg[27]),
        .I1(even),
        .I2(rd_data_reg[11]),
        .O(rxcharisk_usr_i_1_n_0));
  FDRE rxcharisk_usr_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rxcharisk_usr_i_1_n_0),
        .Q(rxcharisk),
        .R(reset_modified));
  LUT3 #(
    .INIT(8'hAE)) 
    \rxclkcorcnt[0]_i_1 
       (.I0(insert_idle_reg__0),
        .I1(rd_data_reg[13]),
        .I2(rxclkcorcnt[0]),
        .O(\rxclkcorcnt[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h4404)) 
    \rxclkcorcnt[2]_i_1 
       (.I0(reset_modified),
        .I1(insert_idle_reg__0),
        .I2(rd_data_reg[13]),
        .I3(rxclkcorcnt[0]),
        .O(\rxclkcorcnt[2]_i_1_n_0 ));
  FDRE \rxclkcorcnt_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxclkcorcnt[0]_i_1_n_0 ),
        .Q(rxclkcorcnt[0]),
        .R(reset_modified));
  FDRE \rxclkcorcnt_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxclkcorcnt[2]_i_1_n_0 ),
        .Q(rxclkcorcnt[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[0]_i_1 
       (.I0(rd_data_reg[16]),
        .I1(even),
        .I2(rd_data_reg[0]),
        .O(\rxdata_usr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[1]_i_1 
       (.I0(rd_data_reg[17]),
        .I1(even),
        .I2(rd_data_reg[1]),
        .O(\rxdata_usr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[2]_i_1 
       (.I0(rd_data_reg[18]),
        .I1(even),
        .I2(rd_data_reg[2]),
        .O(\rxdata_usr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[3]_i_1 
       (.I0(rd_data_reg[19]),
        .I1(even),
        .I2(rd_data_reg[3]),
        .O(\rxdata_usr[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[4]_i_1 
       (.I0(rd_data_reg[20]),
        .I1(even),
        .I2(rd_data_reg[4]),
        .O(\rxdata_usr[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[5]_i_1 
       (.I0(rd_data_reg[21]),
        .I1(even),
        .I2(rd_data_reg[5]),
        .O(\rxdata_usr[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[6]_i_1 
       (.I0(rd_data_reg[22]),
        .I1(even),
        .I2(rd_data_reg[6]),
        .O(\rxdata_usr[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxdata_usr[7]_i_1 
       (.I0(rd_data_reg[23]),
        .I1(even),
        .I2(rd_data_reg[7]),
        .O(\rxdata_usr[7]_i_1_n_0 ));
  FDRE \rxdata_usr_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(reset_modified));
  FDRE \rxdata_usr_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(reset_modified));
  FDRE \rxdata_usr_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(reset_modified));
  FDRE \rxdata_usr_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(reset_modified));
  FDRE \rxdata_usr_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(reset_modified));
  FDRE \rxdata_usr_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(reset_modified));
  FDRE \rxdata_usr_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(reset_modified));
  FDRE \rxdata_usr_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\rxdata_usr[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(reset_modified));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    rxdisperr_usr_i_1
       (.I0(rd_data_reg[26]),
        .I1(even),
        .I2(rd_data_reg[10]),
        .O(rxdisperr_usr_i_1_n_0));
  FDRE rxdisperr_usr_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rxdisperr_usr_i_1_n_0),
        .Q(rxdisperr),
        .R(reset_modified));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    rxnotintable_usr_i_1
       (.I0(rd_data_reg[25]),
        .I1(even),
        .I2(rd_data_reg[9]),
        .O(rxnotintable_usr_i_1_n_0));
  FDRE rxnotintable_usr_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rxnotintable_usr_i_1_n_0),
        .Q(rxnotintable),
        .R(reset_modified));
  FDRE #(
    .INIT(1'b1)) 
    start_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(1'b0),
        .Q(start),
        .R(1'b0));
  bd_fd73_pcs_pma_0_sync_block_12 sync_initialize_ram_comp
       (.CLK(CLK),
        .data_in(initialize_ram_complete),
        .data_out(initialize_ram_complete_sync),
        .initialize_ram_complete_sync_reg1(initialize_ram_complete_sync_reg1),
        .initialize_ram_complete_sync_ris_edg0(initialize_ram_complete_sync_ris_edg0));
  LUT2 #(
    .INIT(4'hE)) 
    \wr_addr[5]_i_1 
       (.I0(wr_enable),
        .I1(initialize_ram_complete_pulse),
        .O(\wr_addr[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \wr_addr[5]_i_2 
       (.I0(wr_addr_plus1[5]),
        .I1(initialize_ram_complete_pulse),
        .O(\wr_addr[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr_gray[1]_i_1 
       (.I0(p_1_in4_in),
        .I1(p_2_in6_in),
        .O(bin_to_gray[1]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr_gray[2]_i_1 
       (.I0(p_2_in6_in),
        .I1(p_3_in8_in),
        .O(bin_to_gray[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr_gray[3]_i_1 
       (.I0(p_3_in8_in),
        .I1(p_4_in10_in),
        .O(bin_to_gray[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr_gray[4]_i_1 
       (.I0(p_4_in10_in),
        .I1(\wr_addr_plus2_reg_n_0_[5] ),
        .O(bin_to_gray[4]));
  FDSE \wr_addr_gray_reg[0] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(plusOp[1]),
        .Q(\wr_addr_gray_reg_n_0_[0] ),
        .S(SR[1]));
  FDRE \wr_addr_gray_reg[1] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(bin_to_gray[1]),
        .Q(\wr_addr_gray_reg_n_0_[1] ),
        .R(SR[1]));
  FDRE \wr_addr_gray_reg[2] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(bin_to_gray[2]),
        .Q(\wr_addr_gray_reg_n_0_[2] ),
        .R(SR[1]));
  FDRE \wr_addr_gray_reg[3] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(bin_to_gray[3]),
        .Q(\wr_addr_gray_reg_n_0_[3] ),
        .R(SR[1]));
  FDSE \wr_addr_gray_reg[4] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(bin_to_gray[4]),
        .Q(\wr_addr_gray_reg_n_0_[4] ),
        .S(SR[1]));
  FDSE \wr_addr_gray_reg[5] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(\wr_addr_plus2_reg_n_0_[5] ),
        .Q(data_in),
        .S(SR[1]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \wr_addr_plus1[5]_i_1 
       (.I0(\wr_addr_plus2_reg_n_0_[5] ),
        .I1(initialize_ram_complete_pulse),
        .O(\wr_addr_plus1[5]_i_1_n_0 ));
  FDSE \wr_addr_plus1_reg[0] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(\wr_addr_plus2_reg_n_0_[0] ),
        .Q(wr_addr_plus1[0]),
        .S(SR[0]));
  FDRE \wr_addr_plus1_reg[1] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(p_1_in4_in),
        .Q(wr_addr_plus1[1]),
        .R(SR[0]));
  FDRE \wr_addr_plus1_reg[2] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(p_2_in6_in),
        .Q(wr_addr_plus1[2]),
        .R(SR[0]));
  FDRE \wr_addr_plus1_reg[3] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(p_3_in8_in),
        .Q(wr_addr_plus1[3]),
        .R(SR[0]));
  FDRE \wr_addr_plus1_reg[4] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(p_4_in10_in),
        .Q(wr_addr_plus1[4]),
        .R(SR[0]));
  FDRE \wr_addr_plus1_reg[5] 
       (.C(rxuserclk2),
        .CE(\wr_addr[5]_i_1_n_0 ),
        .D(\wr_addr_plus1[5]_i_1_n_0 ),
        .Q(wr_addr_plus1[5]),
        .R(SR[1]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wr_addr_plus2[0]_i_1 
       (.I0(\wr_addr_plus2_reg_n_0_[0] ),
        .O(plusOp[0]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr_plus2[1]_i_1 
       (.I0(\wr_addr_plus2_reg_n_0_[0] ),
        .I1(p_1_in4_in),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_addr_plus2[2]_i_1 
       (.I0(\wr_addr_plus2_reg_n_0_[0] ),
        .I1(p_1_in4_in),
        .I2(p_2_in6_in),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_addr_plus2[3]_i_1 
       (.I0(p_1_in4_in),
        .I1(\wr_addr_plus2_reg_n_0_[0] ),
        .I2(p_2_in6_in),
        .I3(p_3_in8_in),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_addr_plus2[4]_i_1 
       (.I0(p_2_in6_in),
        .I1(\wr_addr_plus2_reg_n_0_[0] ),
        .I2(p_1_in4_in),
        .I3(p_3_in8_in),
        .I4(p_4_in10_in),
        .O(plusOp[4]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT4 #(
    .INIT(16'hFF6A)) 
    \wr_addr_plus2[5]_i_1 
       (.I0(\wr_addr_plus2_reg_n_0_[5] ),
        .I1(p_4_in10_in),
        .I2(\wr_addr_plus2[5]_i_2_n_0 ),
        .I3(initialize_ram_complete_pulse),
        .O(\wr_addr_plus2[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \wr_addr_plus2[5]_i_2 
       (.I0(p_3_in8_in),
        .I1(p_1_in4_in),
        .I2(\wr_addr_plus2_reg_n_0_[0] ),
        .I3(p_2_in6_in),
        .O(\wr_addr_plus2[5]_i_2_n_0 ));
  FDRE \wr_addr_plus2_reg[0] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(plusOp[0]),
        .Q(\wr_addr_plus2_reg_n_0_[0] ),
        .R(SR[0]));
  FDSE \wr_addr_plus2_reg[1] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(plusOp[1]),
        .Q(p_1_in4_in),
        .S(SR[0]));
  FDRE \wr_addr_plus2_reg[2] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(plusOp[2]),
        .Q(p_2_in6_in),
        .R(SR[0]));
  FDRE \wr_addr_plus2_reg[3] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(plusOp[3]),
        .Q(p_3_in8_in),
        .R(SR[0]));
  FDRE \wr_addr_plus2_reg[4] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(plusOp[4]),
        .Q(p_4_in10_in),
        .R(SR[0]));
  FDRE \wr_addr_plus2_reg[5] 
       (.C(rxuserclk2),
        .CE(\wr_addr[5]_i_1_n_0 ),
        .D(\wr_addr_plus2[5]_i_1_n_0 ),
        .Q(\wr_addr_plus2_reg_n_0_[5] ),
        .R(SR[1]));
  FDRE \wr_addr_reg[0] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(wr_addr_plus1[0]),
        .Q(wr_addr[0]),
        .R(SR[0]));
  FDRE \wr_addr_reg[1] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(wr_addr_plus1[1]),
        .Q(wr_addr[1]),
        .R(SR[0]));
  FDRE \wr_addr_reg[2] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(wr_addr_plus1[2]),
        .Q(wr_addr[2]),
        .R(SR[0]));
  FDRE \wr_addr_reg[3] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(wr_addr_plus1[3]),
        .Q(wr_addr[3]),
        .R(SR[0]));
  FDRE \wr_addr_reg[4] 
       (.C(rxuserclk2),
        .CE(wr_enable),
        .D(wr_addr_plus1[4]),
        .Q(wr_addr[4]),
        .R(SR[0]));
  FDRE \wr_addr_reg[5] 
       (.C(rxuserclk2),
        .CE(\wr_addr[5]_i_1_n_0 ),
        .D(\wr_addr[5]_i_2_n_0 ),
        .Q(wr_addr[5]),
        .R(SR[1]));
  FDRE \wr_data_reg[0] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[0]),
        .Q(wr_data[0]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[10] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[9]),
        .Q(wr_data[10]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[11] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[10]),
        .Q(wr_data[11]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[12] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[11]),
        .Q(wr_data[12]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[16] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[12]),
        .Q(wr_data[16]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[17] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[13]),
        .Q(wr_data[17]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[18] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[14]),
        .Q(wr_data[18]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[19] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[15]),
        .Q(wr_data[19]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[1] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[1]),
        .Q(wr_data[1]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[20] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[16]),
        .Q(wr_data[20]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[21] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[17]),
        .Q(wr_data[21]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[22] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[18]),
        .Q(wr_data[22]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[23] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[19]),
        .Q(wr_data[23]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[25] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[20]),
        .Q(wr_data[25]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[26] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[21]),
        .Q(wr_data[26]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[27] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[22]),
        .Q(wr_data[27]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[28] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[23]),
        .Q(wr_data[28]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[2] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[2]),
        .Q(wr_data[2]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[3] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[3]),
        .Q(wr_data[3]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[4] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[4]),
        .Q(wr_data[4]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[5] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[5]),
        .Q(wr_data[5]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[6] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[6]),
        .Q(wr_data[6]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[7] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[7]),
        .Q(wr_data[7]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg[9] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(D[8]),
        .Q(wr_data[9]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[0] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[0]),
        .Q(wr_data_reg[0]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[10] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[10]),
        .Q(wr_data_reg[10]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[11] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[11]),
        .Q(wr_data_reg[11]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[12] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[12]),
        .Q(wr_data_reg[12]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[13] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(remove_idle),
        .Q(wr_data_reg[13]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[16] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[16]),
        .Q(wr_data_reg[16]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[17] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[17]),
        .Q(wr_data_reg[17]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[18] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[18]),
        .Q(wr_data_reg[18]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[19] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[19]),
        .Q(wr_data_reg[19]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[1] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[1]),
        .Q(wr_data_reg[1]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[20] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[20]),
        .Q(wr_data_reg[20]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[21] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[21]),
        .Q(wr_data_reg[21]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[22] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[22]),
        .Q(wr_data_reg[22]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[23] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[23]),
        .Q(wr_data_reg[23]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[25] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[25]),
        .Q(wr_data_reg[25]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[26] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[26]),
        .Q(wr_data_reg[26]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[27] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[27]),
        .Q(wr_data_reg[27]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[28] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[28]),
        .Q(wr_data_reg[28]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[2] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[2]),
        .Q(wr_data_reg[2]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[3] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[3]),
        .Q(wr_data_reg[3]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[4] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[4]),
        .Q(wr_data_reg[4]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[5] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[5]),
        .Q(wr_data_reg[5]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[6] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[6]),
        .Q(wr_data_reg[6]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[7] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[7]),
        .Q(wr_data_reg[7]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_data_reg_reg[9] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_data[9]),
        .Q(wr_data_reg[9]),
        .R(\wr_data_reg_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h7777F7FFF7FFF7FF)) 
    wr_enable_i_1
       (.I0(initialize_ram_complete),
        .I1(p_18_in),
        .I2(wr_enable_i_2_n_0),
        .I3(wr_enable_i_3_n_0),
        .I4(wr_enable_i_4_n_0),
        .I5(p_17_in),
        .O(wr_enable_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0001)) 
    wr_enable_i_2
       (.I0(wr_occupancy[1]),
        .I1(wr_occupancy[3]),
        .I2(wr_occupancy[2]),
        .I3(wr_occupancy[0]),
        .I4(wr_enable_i_5_n_0),
        .I5(wr_enable_i_6_n_0),
        .O(wr_enable_i_2_n_0));
  LUT6 #(
    .INIT(64'h44444444444F4444)) 
    wr_enable_i_3
       (.I0(wr_enable_i_7_n_0),
        .I1(d2p2_wr_reg_i_2_n_0),
        .I2(d21p5_wr_reg_i_2_n_0),
        .I3(wr_data[6]),
        .I4(wr_data[2]),
        .I5(wr_data[11]),
        .O(wr_enable_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000E00000000000)) 
    wr_enable_i_4
       (.I0(wr_enable_i_8_n_0),
        .I1(wr_occupancy[4]),
        .I2(wr_occupancy[5]),
        .I3(d16p2_wr_reg),
        .I4(remove_idle),
        .I5(k28p5_wr_reg),
        .O(wr_enable_i_4_n_0));
  LUT4 #(
    .INIT(16'hFF1F)) 
    wr_enable_i_5
       (.I0(d21p5_wr_reg2),
        .I1(d2p2_wr_reg2),
        .I2(wr_occupancy[5]),
        .I3(remove_idle_reg1),
        .O(wr_enable_i_5_n_0));
  LUT4 #(
    .INIT(16'hFFF7)) 
    wr_enable_i_6
       (.I0(wr_occupancy[4]),
        .I1(k28p5_wr_reg2),
        .I2(remove_idle_reg2),
        .I3(remove_idle),
        .O(wr_enable_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    wr_enable_i_7
       (.I0(wr_data[0]),
        .I1(wr_data[2]),
        .I2(wr_data[3]),
        .I3(wr_data[4]),
        .I4(wr_data[1]),
        .O(wr_enable_i_7_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    wr_enable_i_8
       (.I0(wr_occupancy[1]),
        .I1(wr_occupancy[3]),
        .I2(wr_occupancy[2]),
        .O(wr_enable_i_8_n_0));
  FDRE wr_enable_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_enable_i_1_n_0),
        .Q(wr_enable),
        .R(SR[1]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 wr_occupancy0_carry
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({NLW_wr_occupancy0_carry_CO_UNCONNECTED[7:5],wr_occupancy0_carry_n_3,wr_occupancy0_carry_n_4,wr_occupancy0_carry_n_5,wr_occupancy0_carry_n_6,wr_occupancy0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,wr_addr[4:0]}),
        .O({NLW_wr_occupancy0_carry_O_UNCONNECTED[7:6],wr_occupancy00_out}),
        .S({1'b0,1'b0,\reclock_rd_addrgray[5].sync_rd_addrgray_n_0 ,\reclock_rd_addrgray[5].sync_rd_addrgray_n_1 ,\reclock_rd_addrgray[4].sync_rd_addrgray_n_0 ,\reclock_rd_addrgray[3].sync_rd_addrgray_n_0 ,\reclock_rd_addrgray[2].sync_rd_addrgray_n_0 ,\reclock_rd_addrgray[1].sync_rd_addrgray_n_0 }));
  FDRE \wr_occupancy_reg[0] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_occupancy00_out[0]),
        .Q(wr_occupancy[0]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_occupancy_reg[1] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_occupancy00_out[1]),
        .Q(wr_occupancy[1]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_occupancy_reg[2] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_occupancy00_out[2]),
        .Q(wr_occupancy[2]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_occupancy_reg[3] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_occupancy00_out[3]),
        .Q(wr_occupancy[3]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDRE \wr_occupancy_reg[4] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_occupancy00_out[4]),
        .Q(wr_occupancy[4]),
        .R(\wr_data_reg_reg[0]_0 ));
  FDSE \wr_occupancy_reg[5] 
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(wr_occupancy00_out[5]),
        .Q(wr_occupancy[5]),
        .S(\wr_data_reg_reg[0]_0 ));
endmodule

module bd_fd73_pcs_pma_0_rx_rate_adapt
   (gmii_rx_dv_out_reg_0,
    gmii_rx_er_out_reg_0,
    gmii_rxd,
    reset_out,
    gmii_rx_er_out_reg_1,
    gmii_rx_dv,
    CLK,
    gmii_rx_er,
    D);
  output gmii_rx_dv_out_reg_0;
  output gmii_rx_er_out_reg_0;
  output [7:0]gmii_rxd;
  input reset_out;
  input gmii_rx_er_out_reg_1;
  input gmii_rx_dv;
  input CLK;
  input gmii_rx_er;
  input [7:0]D;

  wire CLK;
  wire [7:0]D;
  wire gmii_rx_dv;
  wire gmii_rx_dv_out_reg_0;
  wire gmii_rx_er;
  wire gmii_rx_er_out_reg_0;
  wire gmii_rx_er_out_reg_1;
  wire [7:0]gmii_rxd;
  wire muxsel;
  wire muxsel_i_1_n_0;
  wire [3:0]p_0_in;
  wire reset_out;
  wire rx_dv_aligned;
  wire rx_dv_aligned_i_1_n_0;
  wire rx_dv_reg1;
  wire rx_dv_reg2;
  wire rx_er_aligned;
  wire rx_er_aligned_0;
  wire rx_er_reg1;
  wire rx_er_reg2;
  wire [7:0]rxd_aligned;
  wire \rxd_aligned[0]_i_1_n_0 ;
  wire \rxd_aligned[1]_i_1_n_0 ;
  wire \rxd_aligned[2]_i_1_n_0 ;
  wire \rxd_aligned[3]_i_1_n_0 ;
  wire \rxd_aligned[4]_i_1_n_0 ;
  wire \rxd_aligned[5]_i_1_n_0 ;
  wire \rxd_aligned[6]_i_1_n_0 ;
  wire \rxd_aligned[7]_i_1_n_0 ;
  wire \rxd_reg1_reg_n_0_[0] ;
  wire \rxd_reg1_reg_n_0_[1] ;
  wire \rxd_reg1_reg_n_0_[2] ;
  wire \rxd_reg1_reg_n_0_[3] ;
  wire [7:0]rxd_reg2;
  wire sfd_enable;
  wire sfd_enable0;
  wire sfd_enable_i_1_n_0;
  wire sfd_enable_i_2_n_0;
  wire sfd_enable_i_4_n_0;
  wire sfd_enable_i_5_n_0;

  FDRE #(
    .INIT(1'b0)) 
    gmii_rx_dv_out_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rx_dv_aligned),
        .Q(gmii_rx_dv_out_reg_0),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    gmii_rx_er_out_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rx_er_aligned),
        .Q(gmii_rx_er_out_reg_0),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[0] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[0]),
        .Q(gmii_rxd[0]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[1] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[1]),
        .Q(gmii_rxd[1]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[2] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[2]),
        .Q(gmii_rxd[2]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[3] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[3]),
        .Q(gmii_rxd[3]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[4] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[4]),
        .Q(gmii_rxd[4]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[5] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[5]),
        .Q(gmii_rxd[5]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[6] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[6]),
        .Q(gmii_rxd[6]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_rxd_out_reg[7] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rxd_aligned[7]),
        .Q(gmii_rxd[7]),
        .R(reset_out));
  LUT6 #(
    .INIT(64'h00000000CCCCA8CC)) 
    muxsel_i_1
       (.I0(sfd_enable_i_5_n_0),
        .I1(muxsel),
        .I2(sfd_enable_i_2_n_0),
        .I3(sfd_enable),
        .I4(sfd_enable_i_4_n_0),
        .I5(reset_out),
        .O(muxsel_i_1_n_0));
  FDRE muxsel_reg
       (.C(CLK),
        .CE(1'b1),
        .D(muxsel_i_1_n_0),
        .Q(muxsel),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hB0)) 
    rx_dv_aligned_i_1
       (.I0(rx_dv_reg1),
        .I1(muxsel),
        .I2(rx_dv_reg2),
        .O(rx_dv_aligned_i_1_n_0));
  FDRE rx_dv_aligned_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rx_dv_aligned_i_1_n_0),
        .Q(rx_dv_aligned),
        .R(reset_out));
  FDRE rx_dv_reg1_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(gmii_rx_dv),
        .Q(rx_dv_reg1),
        .R(reset_out));
  FDRE rx_dv_reg2_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rx_dv_reg1),
        .Q(rx_dv_reg2),
        .R(reset_out));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    rx_er_aligned_i_1
       (.I0(muxsel),
        .I1(rx_er_reg1),
        .I2(rx_er_reg2),
        .O(rx_er_aligned_0));
  FDRE rx_er_aligned_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rx_er_aligned_0),
        .Q(rx_er_aligned),
        .R(reset_out));
  FDRE rx_er_reg1_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(gmii_rx_er),
        .Q(rx_er_reg1),
        .R(reset_out));
  FDRE rx_er_reg2_reg
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(rx_er_reg1),
        .Q(rx_er_reg2),
        .R(reset_out));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[0]_i_1 
       (.I0(rxd_reg2[4]),
        .I1(muxsel),
        .I2(rxd_reg2[0]),
        .O(\rxd_aligned[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[1]_i_1 
       (.I0(rxd_reg2[5]),
        .I1(muxsel),
        .I2(rxd_reg2[1]),
        .O(\rxd_aligned[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[2]_i_1 
       (.I0(rxd_reg2[6]),
        .I1(muxsel),
        .I2(rxd_reg2[2]),
        .O(\rxd_aligned[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[3]_i_1 
       (.I0(rxd_reg2[7]),
        .I1(muxsel),
        .I2(rxd_reg2[3]),
        .O(\rxd_aligned[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[4]_i_1 
       (.I0(\rxd_reg1_reg_n_0_[0] ),
        .I1(muxsel),
        .I2(rxd_reg2[4]),
        .O(\rxd_aligned[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[5]_i_1 
       (.I0(\rxd_reg1_reg_n_0_[1] ),
        .I1(muxsel),
        .I2(rxd_reg2[5]),
        .O(\rxd_aligned[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[6]_i_1 
       (.I0(\rxd_reg1_reg_n_0_[2] ),
        .I1(muxsel),
        .I2(rxd_reg2[6]),
        .O(\rxd_aligned[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rxd_aligned[7]_i_1 
       (.I0(\rxd_reg1_reg_n_0_[3] ),
        .I1(muxsel),
        .I2(rxd_reg2[7]),
        .O(\rxd_aligned[7]_i_1_n_0 ));
  FDRE \rxd_aligned_reg[0] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[0]_i_1_n_0 ),
        .Q(rxd_aligned[0]),
        .R(reset_out));
  FDRE \rxd_aligned_reg[1] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[1]_i_1_n_0 ),
        .Q(rxd_aligned[1]),
        .R(reset_out));
  FDRE \rxd_aligned_reg[2] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[2]_i_1_n_0 ),
        .Q(rxd_aligned[2]),
        .R(reset_out));
  FDRE \rxd_aligned_reg[3] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[3]_i_1_n_0 ),
        .Q(rxd_aligned[3]),
        .R(reset_out));
  FDRE \rxd_aligned_reg[4] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[4]_i_1_n_0 ),
        .Q(rxd_aligned[4]),
        .R(reset_out));
  FDRE \rxd_aligned_reg[5] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[5]_i_1_n_0 ),
        .Q(rxd_aligned[5]),
        .R(reset_out));
  FDRE \rxd_aligned_reg[6] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[6]_i_1_n_0 ),
        .Q(rxd_aligned[6]),
        .R(reset_out));
  FDRE \rxd_aligned_reg[7] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_aligned[7]_i_1_n_0 ),
        .Q(rxd_aligned[7]),
        .R(reset_out));
  FDRE \rxd_reg1_reg[0] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[0]),
        .Q(\rxd_reg1_reg_n_0_[0] ),
        .R(reset_out));
  FDRE \rxd_reg1_reg[1] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[1]),
        .Q(\rxd_reg1_reg_n_0_[1] ),
        .R(reset_out));
  FDRE \rxd_reg1_reg[2] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[2]),
        .Q(\rxd_reg1_reg_n_0_[2] ),
        .R(reset_out));
  FDRE \rxd_reg1_reg[3] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[3]),
        .Q(\rxd_reg1_reg_n_0_[3] ),
        .R(reset_out));
  FDRE \rxd_reg1_reg[4] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[4]),
        .Q(p_0_in[0]),
        .R(reset_out));
  FDRE \rxd_reg1_reg[5] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[5]),
        .Q(p_0_in[1]),
        .R(reset_out));
  FDRE \rxd_reg1_reg[6] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[6]),
        .Q(p_0_in[2]),
        .R(reset_out));
  FDRE \rxd_reg1_reg[7] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(D[7]),
        .Q(p_0_in[3]),
        .R(reset_out));
  FDRE \rxd_reg2_reg[0] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_reg1_reg_n_0_[0] ),
        .Q(rxd_reg2[0]),
        .R(reset_out));
  FDRE \rxd_reg2_reg[1] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_reg1_reg_n_0_[1] ),
        .Q(rxd_reg2[1]),
        .R(reset_out));
  FDRE \rxd_reg2_reg[2] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_reg1_reg_n_0_[2] ),
        .Q(rxd_reg2[2]),
        .R(reset_out));
  FDRE \rxd_reg2_reg[3] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(\rxd_reg1_reg_n_0_[3] ),
        .Q(rxd_reg2[3]),
        .R(reset_out));
  FDRE \rxd_reg2_reg[4] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(p_0_in[0]),
        .Q(rxd_reg2[4]),
        .R(reset_out));
  FDRE \rxd_reg2_reg[5] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(p_0_in[1]),
        .Q(rxd_reg2[5]),
        .R(reset_out));
  FDRE \rxd_reg2_reg[6] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(p_0_in[2]),
        .Q(rxd_reg2[6]),
        .R(reset_out));
  FDRE \rxd_reg2_reg[7] 
       (.C(CLK),
        .CE(gmii_rx_er_out_reg_1),
        .D(p_0_in[3]),
        .Q(rxd_reg2[7]),
        .R(reset_out));
  LUT6 #(
    .INIT(64'hFFDDFFCCC0C8C0CC)) 
    sfd_enable_i_1
       (.I0(sfd_enable_i_2_n_0),
        .I1(sfd_enable0),
        .I2(gmii_rx_er_out_reg_1),
        .I3(sfd_enable_i_4_n_0),
        .I4(sfd_enable_i_5_n_0),
        .I5(sfd_enable),
        .O(sfd_enable_i_1_n_0));
  LUT5 #(
    .INIT(32'h04000000)) 
    sfd_enable_i_2
       (.I0(p_0_in[3]),
        .I1(D[0]),
        .I2(D[1]),
        .I3(D[3]),
        .I4(D[2]),
        .O(sfd_enable_i_2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    sfd_enable_i_3
       (.I0(gmii_rx_dv),
        .I1(rx_dv_reg1),
        .O(sfd_enable0));
  LUT4 #(
    .INIT(16'hDFFF)) 
    sfd_enable_i_4
       (.I0(p_0_in[0]),
        .I1(p_0_in[1]),
        .I2(gmii_rx_er_out_reg_1),
        .I3(p_0_in[2]),
        .O(sfd_enable_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFFDFFF)) 
    sfd_enable_i_5
       (.I0(\rxd_reg1_reg_n_0_[0] ),
        .I1(\rxd_reg1_reg_n_0_[3] ),
        .I2(p_0_in[3]),
        .I3(\rxd_reg1_reg_n_0_[2] ),
        .I4(\rxd_reg1_reg_n_0_[1] ),
        .O(sfd_enable_i_5_n_0));
  FDRE sfd_enable_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sfd_enable_i_1_n_0),
        .Q(sfd_enable),
        .R(reset_out));
endmodule

module bd_fd73_pcs_pma_0_sgmii_adapt
   (sgmii_clk_r,
    sgmii_clk_en_reg,
    gmii_rx_dv_out_reg,
    gmii_rx_er_out_reg,
    gmii_tx_en,
    gmii_tx_er,
    sgmii_clk_f,
    gmii_rxd,
    Q,
    CLK,
    gmii_rx_dv,
    gmii_rx_er,
    gmii_tx_en_out_reg,
    gmii_tx_er_out_reg,
    SR,
    speed_is_10_100,
    speed_is_100,
    D,
    gmii_txd);
  output sgmii_clk_r;
  output sgmii_clk_en_reg;
  output gmii_rx_dv_out_reg;
  output gmii_rx_er_out_reg;
  output gmii_tx_en;
  output gmii_tx_er;
  output sgmii_clk_f;
  output [7:0]gmii_rxd;
  output [7:0]Q;
  input CLK;
  input gmii_rx_dv;
  input gmii_rx_er;
  input gmii_tx_en_out_reg;
  input gmii_tx_er_out_reg;
  input [0:0]SR;
  input speed_is_10_100;
  input speed_is_100;
  input [7:0]D;
  input [7:0]gmii_txd;

  wire CLK;
  wire [7:0]D;
  wire [7:0]Q;
  wire [0:0]SR;
  wire gmii_rx_dv;
  wire gmii_rx_dv_out_reg;
  wire gmii_rx_er;
  wire gmii_rx_er_out_reg;
  wire [7:0]gmii_rxd;
  wire gmii_tx_en;
  wire gmii_tx_en_out_reg;
  wire gmii_tx_er;
  wire gmii_tx_er_out_reg;
  wire [7:0]gmii_txd;
  wire sgmii_clk_en_reg;
  wire sgmii_clk_f;
  wire sgmii_clk_r;
  wire speed_is_100;
  wire speed_is_100_resync;
  wire speed_is_10_100;
  wire speed_is_10_100_resync;
  wire sync_reset;

  bd_fd73_pcs_pma_0_clk_gen clock_generation
       (.CLK(CLK),
        .data_out(speed_is_100_resync),
        .reset_out(sync_reset),
        .sgmii_clk_en_reg_0(sgmii_clk_en_reg),
        .sgmii_clk_f(sgmii_clk_f),
        .sgmii_clk_r(sgmii_clk_r),
        .speed_is_10_100_fall_reg_0(speed_is_10_100_resync));
  bd_fd73_pcs_pma_0_reset_sync_45 gen_sync_reset
       (.CLK(CLK),
        .SR(SR),
        .reset_out(sync_reset));
  bd_fd73_pcs_pma_0_rx_rate_adapt receiver
       (.CLK(CLK),
        .D(D),
        .gmii_rx_dv(gmii_rx_dv),
        .gmii_rx_dv_out_reg_0(gmii_rx_dv_out_reg),
        .gmii_rx_er(gmii_rx_er),
        .gmii_rx_er_out_reg_0(gmii_rx_er_out_reg),
        .gmii_rx_er_out_reg_1(sgmii_clk_en_reg),
        .gmii_rxd(gmii_rxd),
        .reset_out(sync_reset));
  bd_fd73_pcs_pma_0_sync_block_46 resync_speed_100
       (.CLK(CLK),
        .data_out(speed_is_100_resync),
        .speed_is_100(speed_is_100));
  bd_fd73_pcs_pma_0_sync_block_47 resync_speed_10_100
       (.CLK(CLK),
        .data_out(speed_is_10_100_resync),
        .speed_is_10_100(speed_is_10_100));
  bd_fd73_pcs_pma_0_tx_rate_adapt transmitter
       (.CLK(CLK),
        .E(sgmii_clk_en_reg),
        .Q(Q),
        .gmii_tx_en(gmii_tx_en),
        .gmii_tx_en_out_reg_0(gmii_tx_en_out_reg),
        .gmii_tx_er(gmii_tx_er),
        .gmii_tx_er_out_reg_0(gmii_tx_er_out_reg),
        .gmii_txd(gmii_txd),
        .reset_out(sync_reset));
endmodule

(* EXAMPLE_SIMULATION = "0" *) (* downgradeipidentifiedwarnings = "yes" *) 
module bd_fd73_pcs_pma_0_support
   (gtrefclk_p,
    gtrefclk_n,
    gtrefclk_out,
    txp,
    txn,
    rxp,
    rxn,
    userclk_out,
    userclk2_out,
    rxuserclk_out,
    rxuserclk2_out,
    pma_reset_out,
    mmcm_locked_out,
    resetdone,
    independent_clock_bufg,
    sgmii_clk_r,
    sgmii_clk_f,
    sgmii_clk_en,
    gmii_txd,
    gmii_tx_en,
    gmii_tx_er,
    gmii_rxd,
    gmii_rx_dv,
    gmii_rx_er,
    gmii_isolate,
    ext_mdc,
    ext_mdio_i,
    ext_mdio_o,
    ext_mdio_t,
    mdio_t_in,
    mdc,
    mdio_i,
    mdio_o,
    mdio_t,
    phyaddr,
    configuration_vector,
    configuration_valid,
    an_interrupt,
    an_adv_config_vector,
    an_adv_config_val,
    an_restart_config,
    speed_is_10_100,
    speed_is_100,
    status_vector,
    reset,
    gtpowergood,
    signal_detect);
  input gtrefclk_p;
  input gtrefclk_n;
  output gtrefclk_out;
  output txp;
  output txn;
  input rxp;
  input rxn;
  output userclk_out;
  output userclk2_out;
  output rxuserclk_out;
  output rxuserclk2_out;
  output pma_reset_out;
  output mmcm_locked_out;
  output resetdone;
  input independent_clock_bufg;
  output sgmii_clk_r;
  output sgmii_clk_f;
  output sgmii_clk_en;
  input [7:0]gmii_txd;
  input gmii_tx_en;
  input gmii_tx_er;
  output [7:0]gmii_rxd;
  output gmii_rx_dv;
  output gmii_rx_er;
  output gmii_isolate;
  output ext_mdc;
  input ext_mdio_i;
  output ext_mdio_o;
  output ext_mdio_t;
  input mdio_t_in;
  input mdc;
  input mdio_i;
  output mdio_o;
  output mdio_t;
  input [4:0]phyaddr;
  input [4:0]configuration_vector;
  input configuration_valid;
  output an_interrupt;
  input [15:0]an_adv_config_vector;
  input an_adv_config_val;
  input an_restart_config;
  input speed_is_10_100;
  input speed_is_100;
  output [15:0]status_vector;
  input reset;
  output gtpowergood;
  input signal_detect;

  wire \<const0> ;
  wire an_interrupt;
  wire an_restart_config;
  wire configuration_valid;
  wire [4:0]configuration_vector;
  wire ext_mdio_i;
  wire gmii_isolate;
  wire gmii_rx_dv;
  wire gmii_rx_er;
  wire [7:0]gmii_rxd;
  wire gmii_tx_en;
  wire gmii_tx_er;
  wire [7:0]gmii_txd;
  wire gtpowergood;
  wire gtrefclk_n;
  wire gtrefclk_out;
  wire gtrefclk_p;
  wire independent_clock_bufg;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire mdc;
  wire mdio_i;
  wire mdio_o;
  wire mdio_t;
  wire mdio_t_in;
  wire [4:0]phyaddr;
  wire pma_reset_out;
  wire reset;
  wire resetdone;
  wire rxn;
  wire rxoutclk;
  wire rxp;
  wire rxuserclk2_out;
  wire sgmii_clk_en;
  wire sgmii_clk_f;
  wire sgmii_clk_r;
  wire signal_detect;
  wire speed_is_100;
  wire speed_is_10_100;
  wire [13:0]\^status_vector ;
  wire txn;
  wire txoutclk;
  wire txp;
  wire userclk2_out;
  wire userclk_out;

  assign ext_mdc = mdc;
  assign ext_mdio_o = mdio_i;
  assign ext_mdio_t = mdio_t_in;
  assign mmcm_locked_out = \<const0> ;
  assign rxuserclk_out = rxuserclk2_out;
  assign status_vector[15] = \<const0> ;
  assign status_vector[14] = \<const0> ;
  assign status_vector[13:9] = \^status_vector [13:9];
  assign status_vector[8] = \<const0> ;
  assign status_vector[7:0] = \^status_vector [7:0];
  GND GND
       (.G(\<const0> ));
  bd_fd73_pcs_pma_0_clocking core_clocking_i
       (.gtrefclk_n(gtrefclk_n),
        .gtrefclk_out(gtrefclk_out),
        .gtrefclk_p(gtrefclk_p),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .rxoutclk(rxoutclk),
        .rxuserclk2(rxuserclk2_out),
        .txoutclk(txoutclk),
        .userclk(userclk_out),
        .userclk2(userclk2_out));
  bd_fd73_pcs_pma_0_resets core_resets_i
       (.independent_clock_bufg(independent_clock_bufg),
        .pma_reset_out(pma_reset_out),
        .reset(reset));
  bd_fd73_pcs_pma_0_block pcs_pma_block_i
       (.CLK(userclk2_out),
        .an_interrupt(an_interrupt),
        .an_restart_config(an_restart_config),
        .configuration_valid(configuration_valid),
        .configuration_vector(configuration_vector),
        .ext_mdio_i(ext_mdio_i),
        .gmii_isolate(gmii_isolate),
        .gmii_rx_dv(gmii_rx_dv),
        .gmii_rx_er(gmii_rx_er),
        .gmii_rxd(gmii_rxd),
        .gmii_tx_en(gmii_tx_en),
        .gmii_tx_er(gmii_tx_er),
        .gmii_txd(gmii_txd),
        .gtpowergood(gtpowergood),
        .gtrefclk_out(gtrefclk_out),
        .independent_clock_bufg(independent_clock_bufg),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .mdc(mdc),
        .mdio_i(mdio_i),
        .mdio_o(mdio_o),
        .mdio_t(mdio_t),
        .phyaddr(phyaddr),
        .pma_reset_out(pma_reset_out),
        .resetdone(resetdone),
        .rxn(rxn),
        .rxoutclk_out(rxoutclk),
        .rxp(rxp),
        .rxuserclk2(rxuserclk2_out),
        .sgmii_clk_en_reg(sgmii_clk_en),
        .sgmii_clk_f(sgmii_clk_f),
        .sgmii_clk_r(sgmii_clk_r),
        .signal_detect(signal_detect),
        .speed_is_100(speed_is_100),
        .speed_is_10_100(speed_is_10_100),
        .status_vector({\^status_vector [13:9],\^status_vector [7:0]}),
        .\txcharisk_int_reg[1] (userclk_out),
        .txn(txn),
        .txoutclk_out(txoutclk),
        .txp(txp));
endmodule

module bd_fd73_pcs_pma_0_sync_block
   (data_out,
    Q,
    rxuserclk2);
  output data_out;
  input [0:0]Q;
  input rxuserclk2;

  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire rxuserclk2;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_sync_block" *) 
module bd_fd73_pcs_pma_0_sync_block_1
   (S,
    data_sync_reg6_0,
    Q,
    p_25_in,
    data_out,
    data_sync_reg1_0,
    rxuserclk2);
  output [0:0]S;
  output data_sync_reg6_0;
  input [0:0]Q;
  input p_25_in;
  input data_out;
  input [0:0]data_sync_reg1_0;
  input rxuserclk2;

  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire data_sync_reg6_0;
  wire p_25_in;
  wire rxuserclk2;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_sync_reg6_0),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h69)) 
    wr_occupancy0_carry_i_6
       (.I0(Q),
        .I1(p_25_in),
        .I2(data_out),
        .O(S));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_sync_block" *) 
module bd_fd73_pcs_pma_0_sync_block_10
   (S,
    data_out,
    \rd_occupancy_reg[5] ,
    \rd_occupancy_reg[5]_0 ,
    Q,
    data_sync_reg1_0,
    CLK);
  output [0:0]S;
  output data_out;
  input \rd_occupancy_reg[5] ;
  input \rd_occupancy_reg[5]_0 ;
  input [0:0]Q;
  input [0:0]data_sync_reg1_0;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire \rd_occupancy_reg[5] ;
  wire \rd_occupancy_reg[5]_0 ;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h9669)) 
    rd_occupancy0_carry_i_8
       (.I0(data_out),
        .I1(\rd_occupancy_reg[5] ),
        .I2(\rd_occupancy_reg[5]_0 ),
        .I3(Q),
        .O(S));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_sync_block" *) 
module bd_fd73_pcs_pma_0_sync_block_11
   (S,
    data_out,
    \rd_occupancy_reg[5] ,
    Q,
    data_sync_reg1_0,
    CLK);
  output [1:0]S;
  output data_out;
  input \rd_occupancy_reg[5] ;
  input [1:0]Q;
  input [0:0]data_sync_reg1_0;
  input CLK;

  wire CLK;
  wire [1:0]Q;
  wire [1:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire \rd_occupancy_reg[5] ;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h9)) 
    rd_occupancy0_carry_i_6
       (.I0(data_out),
        .I1(Q[1]),
        .O(S[1]));
  LUT3 #(
    .INIT(8'h69)) 
    rd_occupancy0_carry_i_7
       (.I0(data_out),
        .I1(\rd_occupancy_reg[5] ),
        .I2(Q[0]),
        .O(S[0]));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_sync_block" *) 
module bd_fd73_pcs_pma_0_sync_block_12
   (initialize_ram_complete_sync_ris_edg0,
    data_out,
    initialize_ram_complete_sync_reg1,
    data_in,
    CLK);
  output initialize_ram_complete_sync_ris_edg0;
  output data_out;
  input initialize_ram_complete_sync_reg1;
  input data_in;
  input CLK;

  wire CLK;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire initialize_ram_complete_sync_reg1;
  wire initialize_ram_complete_sync_ris_edg0;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    initialize_ram_complete_sync_ris_edg_i_1
       (.I0(data_out),
        .I1(initialize_ram_complete_sync_reg1),
        .O(initialize_ram_complete_sync_ris_edg0));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_sync_block" *) 
module bd_fd73_pcs_pma_0_sync_block_2
   (S,
    data_out,
    Q,
    \wr_occupancy_reg[5] ,
    \wr_occupancy_reg[5]_0 ,
    \wr_occupancy_reg[5]_1 ,
    \wr_occupancy_reg[5]_2 ,
    data_sync_reg1_0,
    rxuserclk2);
  output [0:0]S;
  output data_out;
  input [0:0]Q;
  input \wr_occupancy_reg[5] ;
  input \wr_occupancy_reg[5]_0 ;
  input \wr_occupancy_reg[5]_1 ;
  input \wr_occupancy_reg[5]_2 ;
  input [0:0]data_sync_reg1_0;
  input rxuserclk2;

  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire rxuserclk2;
  wire \wr_occupancy_reg[5] ;
  wire \wr_occupancy_reg[5]_0 ;
  wire \wr_occupancy_reg[5]_1 ;
  wire \wr_occupancy_reg[5]_2 ;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h9669699669969669)) 
    wr_occupancy0_carry_i_5
       (.I0(Q),
        .I1(data_out),
        .I2(\wr_occupancy_reg[5] ),
        .I3(\wr_occupancy_reg[5]_0 ),
        .I4(\wr_occupancy_reg[5]_1 ),
        .I5(\wr_occupancy_reg[5]_2 ),
        .O(S));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_sync_block" *) 
module bd_fd73_pcs_pma_0_sync_block_3
   (S,
    data_out,
    Q,
    \wr_occupancy_reg[5] ,
    \wr_occupancy_reg[5]_0 ,
    \wr_occupancy_reg[5]_1 ,
    data_sync_reg1_0,
    rxuserclk2);
  output [0:0]S;
  output data_out;
  input [0:0]Q;
  input \wr_occupancy_reg[5] ;
  input \wr_occupancy_reg[5]_0 ;
  input \wr_occupancy_reg[5]_1 ;
  input [0:0]data_sync_reg1_0;
  input rxuserclk2;

  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire rxuserclk2;
  wire \wr_occupancy_reg[5] ;
  wire \wr_occupancy_reg[5]_0 ;
  wire \wr_occupancy_reg[5]_1 ;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h69969669)) 
    wr_occupancy0_carry_i_4
       (.I0(Q),
        .I1(data_out),
        .I2(\wr_occupancy_reg[5] ),
        .I3(\wr_occupancy_reg[5]_0 ),
        .I4(\wr_occupancy_reg[5]_1 ),
        .O(S));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_sync_block" *) 
module bd_fd73_pcs_pma_0_sync_block_4
   (S,
    data_out,
    Q,
    \wr_occupancy_reg[5] ,
    \wr_occupancy_reg[5]_0 ,
    data_sync_reg1_0,
    rxuserclk2);
  output [0:0]S;
  output data_out;
  input [0:0]Q;
  input \wr_occupancy_reg[5] ;
  input \wr_occupancy_reg[5]_0 ;
  input [0:0]data_sync_reg1_0;
  input rxuserclk2;

  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire rxuserclk2;
  wire \wr_occupancy_reg[5] ;
  wire \wr_occupancy_reg[5]_0 ;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h9669)) 
    wr_occupancy0_carry_i_3
       (.I0(Q),
        .I1(data_out),
        .I2(\wr_occupancy_reg[5] ),
        .I3(\wr_occupancy_reg[5]_0 ),
        .O(S));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_sync_block" *) 
module bd_fd73_pcs_pma_0_sync_block_46
   (data_out,
    speed_is_100,
    CLK);
  output data_out;
  input speed_is_100;
  input CLK;

  wire CLK;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire speed_is_100;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(speed_is_100),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_sync_block" *) 
module bd_fd73_pcs_pma_0_sync_block_47
   (data_out,
    speed_is_10_100,
    CLK);
  output data_out;
  input speed_is_10_100;
  input CLK;

  wire CLK;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire speed_is_10_100;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(speed_is_10_100),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_sync_block" *) 
module bd_fd73_pcs_pma_0_sync_block_5
   (S,
    data_out,
    Q,
    \wr_occupancy_reg[5] ,
    data_sync_reg1_0,
    rxuserclk2);
  output [1:0]S;
  output data_out;
  input [1:0]Q;
  input \wr_occupancy_reg[5] ;
  input [0:0]data_sync_reg1_0;
  input rxuserclk2;

  wire [1:0]Q;
  wire [1:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire rxuserclk2;
  wire \wr_occupancy_reg[5] ;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h9)) 
    wr_occupancy0_carry_i_1
       (.I0(Q[1]),
        .I1(data_out),
        .O(S[1]));
  LUT3 #(
    .INIT(8'h69)) 
    wr_occupancy0_carry_i_2
       (.I0(Q[0]),
        .I1(data_out),
        .I2(\wr_occupancy_reg[5] ),
        .O(S[0]));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_sync_block" *) 
module bd_fd73_pcs_pma_0_sync_block_6
   (data_out,
    Q,
    CLK);
  output data_out;
  input [0:0]Q;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_sync_block" *) 
module bd_fd73_pcs_pma_0_sync_block_7
   (S,
    data_sync_reg6_0,
    DI,
    data_out,
    Q,
    data_sync_reg1_0,
    CLK);
  output [0:0]S;
  output data_sync_reg6_0;
  input [0:0]DI;
  input data_out;
  input [0:0]Q;
  input [0:0]data_sync_reg1_0;
  input CLK;

  wire CLK;
  wire [0:0]DI;
  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire data_sync_reg6_0;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_sync_reg6_0),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h69)) 
    rd_occupancy0_carry_i_11
       (.I0(DI),
        .I1(data_out),
        .I2(Q),
        .O(S));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_sync_block" *) 
module bd_fd73_pcs_pma_0_sync_block_8
   (S,
    data_out,
    \rd_occupancy_reg[5] ,
    \rd_occupancy_reg[5]_0 ,
    \rd_occupancy_reg[5]_1 ,
    \rd_occupancy_reg[5]_2 ,
    Q,
    data_sync_reg1_0,
    CLK);
  output [0:0]S;
  output data_out;
  input \rd_occupancy_reg[5] ;
  input \rd_occupancy_reg[5]_0 ;
  input \rd_occupancy_reg[5]_1 ;
  input \rd_occupancy_reg[5]_2 ;
  input [0:0]Q;
  input [0:0]data_sync_reg1_0;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire \rd_occupancy_reg[5] ;
  wire \rd_occupancy_reg[5]_0 ;
  wire \rd_occupancy_reg[5]_1 ;
  wire \rd_occupancy_reg[5]_2 ;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h9669699669969669)) 
    rd_occupancy0_carry_i_10
       (.I0(data_out),
        .I1(\rd_occupancy_reg[5] ),
        .I2(\rd_occupancy_reg[5]_0 ),
        .I3(\rd_occupancy_reg[5]_1 ),
        .I4(\rd_occupancy_reg[5]_2 ),
        .I5(Q),
        .O(S));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_sync_block" *) 
module bd_fd73_pcs_pma_0_sync_block_9
   (S,
    data_out,
    \rd_occupancy_reg[5] ,
    \rd_occupancy_reg[5]_0 ,
    \rd_occupancy_reg[5]_1 ,
    Q,
    data_sync_reg1_0,
    CLK);
  output [0:0]S;
  output data_out;
  input \rd_occupancy_reg[5] ;
  input \rd_occupancy_reg[5]_0 ;
  input \rd_occupancy_reg[5]_1 ;
  input [0:0]Q;
  input [0:0]data_sync_reg1_0;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire [0:0]S;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire [0:0]data_sync_reg1_0;
  wire \rd_occupancy_reg[5] ;
  wire \rd_occupancy_reg[5]_0 ;
  wire \rd_occupancy_reg[5]_1 ;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync_reg1_0),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h69969669)) 
    rd_occupancy0_carry_i_9
       (.I0(data_out),
        .I1(\rd_occupancy_reg[5] ),
        .I2(\rd_occupancy_reg[5]_0 ),
        .I3(\rd_occupancy_reg[5]_1 ),
        .I4(Q),
        .O(S));
endmodule

(* ORIG_REF_NAME = "bd_fd73_pcs_pma_0_sync_block" *) 
module bd_fd73_pcs_pma_0_sync_block__parameterized1
   (resetdone,
    data_in,
    CLK);
  output resetdone;
  input data_in;
  input CLK;

  wire CLK;
  wire data_in;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire resetdone;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(resetdone),
        .R(1'b0));
endmodule

module bd_fd73_pcs_pma_0_transceiver
   (txn,
    txp,
    gtpowergood,
    rxoutclk_out,
    txoutclk_out,
    rxchariscomma,
    rxcharisk,
    rxdisperr,
    rxnotintable,
    rxclkcorcnt,
    txbuferr,
    rxbufstatus,
    Q,
    data_in,
    pma_reset_out,
    independent_clock_bufg,
    rxn,
    rxp,
    gtrefclk_out,
    rxuserclk2,
    \txcharisk_int_reg[1]_0 ,
    CLK,
    mgt_tx_reset,
    powerdown,
    D,
    txchardispmode_reg_reg_0,
    txcharisk_reg_reg_0,
    enablealign,
    reset_in,
    \txdata_reg_reg[7]_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5);
  output txn;
  output txp;
  output gtpowergood;
  output [0:0]rxoutclk_out;
  output [0:0]txoutclk_out;
  output [0:0]rxchariscomma;
  output [0:0]rxcharisk;
  output [0:0]rxdisperr;
  output [0:0]rxnotintable;
  output [1:0]rxclkcorcnt;
  output txbuferr;
  output [0:0]rxbufstatus;
  output [7:0]Q;
  output data_in;
  input pma_reset_out;
  input independent_clock_bufg;
  input rxn;
  input rxp;
  input gtrefclk_out;
  input rxuserclk2;
  input \txcharisk_int_reg[1]_0 ;
  input CLK;
  input mgt_tx_reset;
  input powerdown;
  input [0:0]D;
  input [0:0]txchardispmode_reg_reg_0;
  input [0:0]txcharisk_reg_reg_0;
  input enablealign;
  input reset_in;
  input [7:0]\txdata_reg_reg[7]_0 ;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  output lopt_4;
  output lopt_5;

  wire CLK;
  wire [0:0]D;
  wire [7:0]Q;
  wire bd_fd73_pcs_pma_0_gt_i_n_113;
  wire bd_fd73_pcs_pma_0_gt_i_n_114;
  wire data_in;
  wire enablealign;
  wire encommaalign_rec;
  wire gtpowergood;
  wire gtrefclk_out;
  wire gtwiz_buffbypass_rx_done_out;
  wire gtwiz_buffbypass_rx_reset_in;
  wire gtwiz_buffbypass_rx_start_user_in;
  wire gtwiz_buffbypass_rx_start_user_in_d5_reg_srl5_i_1_n_0;
  wire gtwiz_buffbypass_rx_start_user_in_d5_reg_srl5_n_0;
  wire gtwiz_reset_rx_datapath_in;
  wire gtwiz_reset_rx_done_out_int;
  wire gtwiz_reset_tx_datapath_in;
  wire gtwiz_reset_tx_done_out_int;
  wire independent_clock_bufg;
  wire initialize_ram_complete;
  wire initialize_ram_complete_pulse;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire mgt_tx_reset;
  wire pma_reset_out;
  wire powerdown;
  wire reclock_rxreset_n_2;
  wire reset_in;
  wire [0:0]rxbufstatus;
  wire [0:0]rxchariscomma;
  wire [0:0]rxcharisk;
  wire [1:0]rxclkcorcnt;
  wire [1:0]rxctrl0_out;
  wire [1:0]rxctrl1_out;
  wire [1:0]rxctrl2_out;
  wire [1:0]rxctrl3_out;
  wire [15:0]rxdata_rec;
  wire [0:0]rxdisperr;
  wire rxn;
  wire [0:0]rxnotintable;
  wire [0:0]rxoutclk_out;
  wire rxp;
  wire rxreset_rec;
  wire rxresetdone_out_d1;
  wire rxuserclk2;
  wire toggle;
  wire toggle_i_1_n_0;
  wire txbuferr;
  wire [1:1]txbufstatus_reg;
  wire [1:0]txchardispmode_double;
  wire [1:0]txchardispmode_int;
  wire txchardispmode_reg;
  wire [0:0]txchardispmode_reg_reg_0;
  wire [1:0]txchardispval_double;
  wire [1:0]txchardispval_int;
  wire txchardispval_reg;
  wire [1:0]txcharisk_double;
  wire [1:0]txcharisk_int;
  wire \txcharisk_int_reg[1]_0 ;
  wire txcharisk_reg;
  wire [0:0]txcharisk_reg_reg_0;
  wire [15:0]txdata_double;
  wire [15:0]txdata_int;
  wire [7:0]txdata_reg;
  wire [7:0]\txdata_reg_reg[7]_0 ;
  wire txn;
  wire [0:0]txoutclk_out;
  wire txp;
  wire txpowerdown;
  wire txpowerdown_double;
  wire txpowerdown_reg__0;
  wire wr_data1;
  wire [0:0]NLW_bd_fd73_pcs_pma_0_gt_i_cplllock_out_UNCONNECTED;
  wire [15:0]NLW_bd_fd73_pcs_pma_0_gt_i_dmonitorout_out_UNCONNECTED;
  wire [15:0]NLW_bd_fd73_pcs_pma_0_gt_i_drpdo_out_UNCONNECTED;
  wire [0:0]NLW_bd_fd73_pcs_pma_0_gt_i_drprdy_out_UNCONNECTED;
  wire [0:0]NLW_bd_fd73_pcs_pma_0_gt_i_eyescandataerror_out_UNCONNECTED;
  wire [0:0]NLW_bd_fd73_pcs_pma_0_gt_i_gtwiz_buffbypass_rx_error_out_UNCONNECTED;
  wire [0:0]NLW_bd_fd73_pcs_pma_0_gt_i_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED;
  wire [0:0]NLW_bd_fd73_pcs_pma_0_gt_i_rxbyteisaligned_out_UNCONNECTED;
  wire [0:0]NLW_bd_fd73_pcs_pma_0_gt_i_rxbyterealign_out_UNCONNECTED;
  wire [0:0]NLW_bd_fd73_pcs_pma_0_gt_i_rxcommadet_out_UNCONNECTED;
  wire [15:2]NLW_bd_fd73_pcs_pma_0_gt_i_rxctrl0_out_UNCONNECTED;
  wire [15:2]NLW_bd_fd73_pcs_pma_0_gt_i_rxctrl1_out_UNCONNECTED;
  wire [7:2]NLW_bd_fd73_pcs_pma_0_gt_i_rxctrl2_out_UNCONNECTED;
  wire [7:2]NLW_bd_fd73_pcs_pma_0_gt_i_rxctrl3_out_UNCONNECTED;
  wire [0:0]NLW_bd_fd73_pcs_pma_0_gt_i_rxpmaresetdone_out_UNCONNECTED;
  wire [0:0]NLW_bd_fd73_pcs_pma_0_gt_i_rxprbserr_out_UNCONNECTED;
  wire [0:0]NLW_bd_fd73_pcs_pma_0_gt_i_txbufstatus_out_UNCONNECTED;
  wire [0:0]NLW_bd_fd73_pcs_pma_0_gt_i_txpmaresetdone_out_UNCONNECTED;
  wire [0:0]NLW_bd_fd73_pcs_pma_0_gt_i_txprgdivresetdone_out_UNCONNECTED;
  wire [0:0]NLW_bd_fd73_pcs_pma_0_gt_i_txresetdone_out_UNCONNECTED;

  (* CHECK_LICENSE_TYPE = "bd_fd73_pcs_pma_0_gt,bd_fd73_pcs_pma_0_gt_gtwizard_top,{}" *) 
  (* X_CORE_INFO = "bd_fd73_pcs_pma_0_gt_gtwizard_top,Vivado 2023.2" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  bd_fd73_pcs_pma_0_gt bd_fd73_pcs_pma_0_gt_i
       (.cplllock_out(NLW_bd_fd73_pcs_pma_0_gt_i_cplllock_out_UNCONNECTED[0]),
        .cpllrefclksel_in({1'b0,1'b0,1'b1}),
        .dmonitorout_out(NLW_bd_fd73_pcs_pma_0_gt_i_dmonitorout_out_UNCONNECTED[15:0]),
        .drpaddr_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpclk_in(independent_clock_bufg),
        .drpdi_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpdo_out(NLW_bd_fd73_pcs_pma_0_gt_i_drpdo_out_UNCONNECTED[15:0]),
        .drpen_in(1'b0),
        .drprdy_out(NLW_bd_fd73_pcs_pma_0_gt_i_drprdy_out_UNCONNECTED[0]),
        .drpwe_in(1'b0),
        .eyescandataerror_out(NLW_bd_fd73_pcs_pma_0_gt_i_eyescandataerror_out_UNCONNECTED[0]),
        .eyescanreset_in(1'b0),
        .eyescantrigger_in(1'b0),
        .gthrxn_in(rxn),
        .gthrxp_in(rxp),
        .gthtxn_out(txn),
        .gthtxp_out(txp),
        .gtpowergood_out(gtpowergood),
        .gtrefclk0_in(gtrefclk_out),
        .gtrefclk1_in(1'b0),
        .gtwiz_buffbypass_rx_done_out(gtwiz_buffbypass_rx_done_out),
        .gtwiz_buffbypass_rx_error_out(NLW_bd_fd73_pcs_pma_0_gt_i_gtwiz_buffbypass_rx_error_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_rx_reset_in(gtwiz_buffbypass_rx_reset_in),
        .gtwiz_buffbypass_rx_start_user_in(gtwiz_buffbypass_rx_start_user_in),
        .gtwiz_reset_all_in(pma_reset_out),
        .gtwiz_reset_clk_freerun_in(1'b0),
        .gtwiz_reset_rx_cdr_stable_out(NLW_bd_fd73_pcs_pma_0_gt_i_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out_int),
        .gtwiz_reset_rx_pll_and_datapath_in(1'b0),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out_int),
        .gtwiz_reset_tx_pll_and_datapath_in(1'b0),
        .gtwiz_userclk_rx_active_in(1'b0),
        .gtwiz_userclk_tx_active_in(1'b1),
        .gtwiz_userclk_tx_reset_in(1'b0),
        .gtwiz_userdata_rx_out(rxdata_rec),
        .gtwiz_userdata_tx_in(txdata_int),
        .loopback_in({1'b0,1'b0,1'b0}),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .pcsrsvdin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx8b10ben_in(1'b1),
        .rxbyteisaligned_out(NLW_bd_fd73_pcs_pma_0_gt_i_rxbyteisaligned_out_UNCONNECTED[0]),
        .rxbyterealign_out(NLW_bd_fd73_pcs_pma_0_gt_i_rxbyterealign_out_UNCONNECTED[0]),
        .rxcdrhold_in(1'b0),
        .rxcommadet_out(NLW_bd_fd73_pcs_pma_0_gt_i_rxcommadet_out_UNCONNECTED[0]),
        .rxcommadeten_in(1'b1),
        .rxctrl0_out({NLW_bd_fd73_pcs_pma_0_gt_i_rxctrl0_out_UNCONNECTED[15:2],rxctrl0_out}),
        .rxctrl1_out({NLW_bd_fd73_pcs_pma_0_gt_i_rxctrl1_out_UNCONNECTED[15:2],rxctrl1_out}),
        .rxctrl2_out({NLW_bd_fd73_pcs_pma_0_gt_i_rxctrl2_out_UNCONNECTED[7:2],rxctrl2_out}),
        .rxctrl3_out({NLW_bd_fd73_pcs_pma_0_gt_i_rxctrl3_out_UNCONNECTED[7:2],rxctrl3_out}),
        .rxdfelpmreset_in(1'b0),
        .rxlpmen_in(1'b1),
        .rxmcommaalignen_in(encommaalign_rec),
        .rxoutclk_out(rxoutclk_out),
        .rxpcommaalignen_in(1'b0),
        .rxpcsreset_in(1'b0),
        .rxpd_in({txpowerdown_reg__0,1'b0}),
        .rxpmareset_in(1'b0),
        .rxpmaresetdone_out(NLW_bd_fd73_pcs_pma_0_gt_i_rxpmaresetdone_out_UNCONNECTED[0]),
        .rxpolarity_in(1'b0),
        .rxprbscntreset_in(1'b0),
        .rxprbserr_out(NLW_bd_fd73_pcs_pma_0_gt_i_rxprbserr_out_UNCONNECTED[0]),
        .rxprbssel_in({1'b0,1'b0,1'b0,1'b0}),
        .rxrate_in({1'b0,1'b0,1'b0}),
        .rxresetdone_out(bd_fd73_pcs_pma_0_gt_i_n_113),
        .rxusrclk2_in(1'b0),
        .rxusrclk_in(rxuserclk2),
        .tx8b10ben_in(1'b1),
        .txbufstatus_out({bd_fd73_pcs_pma_0_gt_i_n_114,NLW_bd_fd73_pcs_pma_0_gt_i_txbufstatus_out_UNCONNECTED[0]}),
        .txctrl0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txchardispval_int}),
        .txctrl1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txchardispmode_int}),
        .txctrl2_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txcharisk_int}),
        .txdiffctrl_in({1'b1,1'b1,1'b0,1'b0,1'b0}),
        .txelecidle_in(txpowerdown),
        .txinhibit_in(1'b0),
        .txoutclk_out(txoutclk_out),
        .txpcsreset_in(1'b0),
        .txpd_in({1'b0,1'b0}),
        .txpmareset_in(1'b0),
        .txpmaresetdone_out(NLW_bd_fd73_pcs_pma_0_gt_i_txpmaresetdone_out_UNCONNECTED[0]),
        .txpolarity_in(1'b0),
        .txpostcursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprbsforceerr_in(1'b0),
        .txprbssel_in({1'b0,1'b0,1'b0,1'b0}),
        .txprecursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprgdivresetdone_out(NLW_bd_fd73_pcs_pma_0_gt_i_txprgdivresetdone_out_UNCONNECTED[0]),
        .txresetdone_out(NLW_bd_fd73_pcs_pma_0_gt_i_txresetdone_out_UNCONNECTED[0]),
        .txusrclk2_in(1'b0),
        .txusrclk_in(\txcharisk_int_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT1 #(
    .INIT(2'h1)) 
    bd_fd73_pcs_pma_0_gt_i_i_1
       (.I0(rxresetdone_out_d1),
        .O(gtwiz_buffbypass_rx_reset_in));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h8)) 
    bd_fd73_pcs_pma_0_gt_i_i_2
       (.I0(mgt_tx_reset),
        .I1(gtwiz_reset_tx_done_out_int),
        .O(gtwiz_reset_tx_datapath_in));
  LUT2 #(
    .INIT(4'h8)) 
    bd_fd73_pcs_pma_0_gt_i_i_3
       (.I0(reset_in),
        .I1(gtwiz_reset_rx_done_out_int),
        .O(gtwiz_reset_rx_datapath_in));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'h80)) 
    data_sync1_i_1
       (.I0(gtwiz_reset_tx_done_out_int),
        .I1(gtwiz_reset_rx_done_out_int),
        .I2(gtwiz_buffbypass_rx_done_out),
        .O(data_in));
  (* srl_name = "U0/\\pcs_pma_block_i/transceiver_inst/gtwiz_buffbypass_rx_start_user_in_d5_reg_srl5 " *) 
  SRL16E gtwiz_buffbypass_rx_start_user_in_d5_reg_srl5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rxuserclk2),
        .D(gtwiz_buffbypass_rx_start_user_in_d5_reg_srl5_i_1_n_0),
        .Q(gtwiz_buffbypass_rx_start_user_in_d5_reg_srl5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h2)) 
    gtwiz_buffbypass_rx_start_user_in_d5_reg_srl5_i_1
       (.I0(bd_fd73_pcs_pma_0_gt_i_n_113),
        .I1(rxresetdone_out_d1),
        .O(gtwiz_buffbypass_rx_start_user_in_d5_reg_srl5_i_1_n_0));
  FDRE gtwiz_buffbypass_rx_start_user_in_d6_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(gtwiz_buffbypass_rx_start_user_in_d5_reg_srl5_n_0),
        .Q(gtwiz_buffbypass_rx_start_user_in),
        .R(1'b0));
  bd_fd73_pcs_pma_0_reset_sync reclock_encommaalign
       (.enablealign(enablealign),
        .reset_out(encommaalign_rec),
        .rxuserclk2(rxuserclk2));
  bd_fd73_pcs_pma_0_reset_sync_0 reclock_rxreset
       (.SR(wr_data1),
        .initialize_ram_complete(initialize_ram_complete),
        .initialize_ram_complete_pulse(initialize_ram_complete_pulse),
        .reset_in(reset_in),
        .reset_out(rxreset_rec),
        .reset_sync6_0(reclock_rxreset_n_2),
        .rxuserclk2(rxuserclk2));
  bd_fd73_pcs_pma_0_rx_elastic_buffer rx_elastic_buffer_inst
       (.CLK(CLK),
        .D({rxctrl2_out[0],rxctrl0_out[0],rxctrl1_out[0],rxctrl3_out[0],rxdata_rec[7:0],rxctrl2_out[1],rxctrl0_out[1],rxctrl1_out[1],rxctrl3_out[1],rxdata_rec[15:8]}),
        .Q(Q),
        .SR({rxreset_rec,reclock_rxreset_n_2}),
        .initialize_ram_complete(initialize_ram_complete),
        .initialize_ram_complete_pulse(initialize_ram_complete_pulse),
        .reset_in(reset_in),
        .rxbufstatus(rxbufstatus),
        .rxchariscomma(rxchariscomma),
        .rxcharisk(rxcharisk),
        .rxclkcorcnt(rxclkcorcnt),
        .rxdisperr(rxdisperr),
        .rxnotintable(rxnotintable),
        .rxuserclk2(rxuserclk2),
        .\wr_data_reg_reg[0]_0 (wr_data1));
  FDRE rxresetdone_out_d1_reg
       (.C(rxuserclk2),
        .CE(1'b1),
        .D(bd_fd73_pcs_pma_0_gt_i_n_113),
        .Q(rxresetdone_out_d1),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    toggle_i_1
       (.I0(toggle),
        .O(toggle_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    toggle_reg
       (.C(CLK),
        .CE(1'b1),
        .D(toggle_i_1_n_0),
        .Q(toggle),
        .R(1'b0));
  FDRE txbuferr_reg
       (.C(CLK),
        .CE(1'b1),
        .D(txbufstatus_reg),
        .Q(txbuferr),
        .R(1'b0));
  FDRE \txbufstatus_reg_reg[1] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(bd_fd73_pcs_pma_0_gt_i_n_114),
        .Q(txbufstatus_reg),
        .R(1'b0));
  FDRE \txchardispmode_double_reg[0] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txchardispmode_reg),
        .Q(txchardispmode_double[0]),
        .R(mgt_tx_reset));
  FDRE \txchardispmode_double_reg[1] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txchardispmode_reg_reg_0),
        .Q(txchardispmode_double[1]),
        .R(mgt_tx_reset));
  FDRE \txchardispmode_int_reg[0] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txchardispmode_double[0]),
        .Q(txchardispmode_int[0]),
        .R(1'b0));
  FDRE \txchardispmode_int_reg[1] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txchardispmode_double[1]),
        .Q(txchardispmode_int[1]),
        .R(1'b0));
  FDRE txchardispmode_reg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(txchardispmode_reg_reg_0),
        .Q(txchardispmode_reg),
        .R(mgt_tx_reset));
  FDRE \txchardispval_double_reg[0] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txchardispval_reg),
        .Q(txchardispval_double[0]),
        .R(mgt_tx_reset));
  FDRE \txchardispval_double_reg[1] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(D),
        .Q(txchardispval_double[1]),
        .R(mgt_tx_reset));
  FDRE \txchardispval_int_reg[0] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txchardispval_double[0]),
        .Q(txchardispval_int[0]),
        .R(1'b0));
  FDRE \txchardispval_int_reg[1] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txchardispval_double[1]),
        .Q(txchardispval_int[1]),
        .R(1'b0));
  FDRE txchardispval_reg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(D),
        .Q(txchardispval_reg),
        .R(mgt_tx_reset));
  FDRE \txcharisk_double_reg[0] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txcharisk_reg),
        .Q(txcharisk_double[0]),
        .R(mgt_tx_reset));
  FDRE \txcharisk_double_reg[1] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txcharisk_reg_reg_0),
        .Q(txcharisk_double[1]),
        .R(mgt_tx_reset));
  FDRE \txcharisk_int_reg[0] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txcharisk_double[0]),
        .Q(txcharisk_int[0]),
        .R(1'b0));
  FDRE \txcharisk_int_reg[1] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txcharisk_double[1]),
        .Q(txcharisk_int[1]),
        .R(1'b0));
  FDRE txcharisk_reg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(txcharisk_reg_reg_0),
        .Q(txcharisk_reg),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[0] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[0]),
        .Q(txdata_double[0]),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[10] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [2]),
        .Q(txdata_double[10]),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[11] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [3]),
        .Q(txdata_double[11]),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[12] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [4]),
        .Q(txdata_double[12]),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[13] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [5]),
        .Q(txdata_double[13]),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[14] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [6]),
        .Q(txdata_double[14]),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[15] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [7]),
        .Q(txdata_double[15]),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[1] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[1]),
        .Q(txdata_double[1]),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[2] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[2]),
        .Q(txdata_double[2]),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[3] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[3]),
        .Q(txdata_double[3]),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[4] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[4]),
        .Q(txdata_double[4]),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[5] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[5]),
        .Q(txdata_double[5]),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[6] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[6]),
        .Q(txdata_double[6]),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[7] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(txdata_reg[7]),
        .Q(txdata_double[7]),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[8] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [0]),
        .Q(txdata_double[8]),
        .R(mgt_tx_reset));
  FDRE \txdata_double_reg[9] 
       (.C(CLK),
        .CE(toggle_i_1_n_0),
        .D(\txdata_reg_reg[7]_0 [1]),
        .Q(txdata_double[9]),
        .R(mgt_tx_reset));
  FDRE \txdata_int_reg[0] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[0]),
        .Q(txdata_int[0]),
        .R(1'b0));
  FDRE \txdata_int_reg[10] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[10]),
        .Q(txdata_int[10]),
        .R(1'b0));
  FDRE \txdata_int_reg[11] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[11]),
        .Q(txdata_int[11]),
        .R(1'b0));
  FDRE \txdata_int_reg[12] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[12]),
        .Q(txdata_int[12]),
        .R(1'b0));
  FDRE \txdata_int_reg[13] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[13]),
        .Q(txdata_int[13]),
        .R(1'b0));
  FDRE \txdata_int_reg[14] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[14]),
        .Q(txdata_int[14]),
        .R(1'b0));
  FDRE \txdata_int_reg[15] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[15]),
        .Q(txdata_int[15]),
        .R(1'b0));
  FDRE \txdata_int_reg[1] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[1]),
        .Q(txdata_int[1]),
        .R(1'b0));
  FDRE \txdata_int_reg[2] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[2]),
        .Q(txdata_int[2]),
        .R(1'b0));
  FDRE \txdata_int_reg[3] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[3]),
        .Q(txdata_int[3]),
        .R(1'b0));
  FDRE \txdata_int_reg[4] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[4]),
        .Q(txdata_int[4]),
        .R(1'b0));
  FDRE \txdata_int_reg[5] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[5]),
        .Q(txdata_int[5]),
        .R(1'b0));
  FDRE \txdata_int_reg[6] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[6]),
        .Q(txdata_int[6]),
        .R(1'b0));
  FDRE \txdata_int_reg[7] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[7]),
        .Q(txdata_int[7]),
        .R(1'b0));
  FDRE \txdata_int_reg[8] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[8]),
        .Q(txdata_int[8]),
        .R(1'b0));
  FDRE \txdata_int_reg[9] 
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txdata_double[9]),
        .Q(txdata_int[9]),
        .R(1'b0));
  FDRE \txdata_reg_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [0]),
        .Q(txdata_reg[0]),
        .R(mgt_tx_reset));
  FDRE \txdata_reg_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [1]),
        .Q(txdata_reg[1]),
        .R(mgt_tx_reset));
  FDRE \txdata_reg_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [2]),
        .Q(txdata_reg[2]),
        .R(mgt_tx_reset));
  FDRE \txdata_reg_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [3]),
        .Q(txdata_reg[3]),
        .R(mgt_tx_reset));
  FDRE \txdata_reg_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [4]),
        .Q(txdata_reg[4]),
        .R(mgt_tx_reset));
  FDRE \txdata_reg_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [5]),
        .Q(txdata_reg[5]),
        .R(mgt_tx_reset));
  FDRE \txdata_reg_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [6]),
        .Q(txdata_reg[6]),
        .R(mgt_tx_reset));
  FDRE \txdata_reg_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\txdata_reg_reg[7]_0 [7]),
        .Q(txdata_reg[7]),
        .R(mgt_tx_reset));
  FDRE #(
    .INIT(1'b0)) 
    txpowerdown_double_reg
       (.C(CLK),
        .CE(1'b1),
        .D(txpowerdown_reg__0),
        .Q(txpowerdown_double),
        .R(mgt_tx_reset));
  FDRE #(
    .INIT(1'b0)) 
    txpowerdown_reg
       (.C(\txcharisk_int_reg[1]_0 ),
        .CE(1'b1),
        .D(txpowerdown_double),
        .Q(txpowerdown),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    txpowerdown_reg_reg
       (.C(CLK),
        .CE(1'b1),
        .D(powerdown),
        .Q(txpowerdown_reg__0),
        .R(mgt_tx_reset));
endmodule

module bd_fd73_pcs_pma_0_tx_rate_adapt
   (gmii_tx_en,
    gmii_tx_er,
    Q,
    reset_out,
    E,
    gmii_tx_en_out_reg_0,
    CLK,
    gmii_tx_er_out_reg_0,
    gmii_txd);
  output gmii_tx_en;
  output gmii_tx_er;
  output [7:0]Q;
  input reset_out;
  input [0:0]E;
  input gmii_tx_en_out_reg_0;
  input CLK;
  input gmii_tx_er_out_reg_0;
  input [7:0]gmii_txd;

  wire CLK;
  wire [0:0]E;
  wire [7:0]Q;
  wire gmii_tx_en;
  wire gmii_tx_en_out_reg_0;
  wire gmii_tx_er;
  wire gmii_tx_er_out_reg_0;
  wire [7:0]gmii_txd;
  wire reset_out;

  FDRE #(
    .INIT(1'b0)) 
    gmii_tx_en_out_reg
       (.C(CLK),
        .CE(E),
        .D(gmii_tx_en_out_reg_0),
        .Q(gmii_tx_en),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    gmii_tx_er_out_reg
       (.C(CLK),
        .CE(E),
        .D(gmii_tx_er_out_reg_0),
        .Q(gmii_tx_er),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[0] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[0]),
        .Q(Q[0]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[1] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[1]),
        .Q(Q[1]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[2] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[2]),
        .Q(Q[2]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[3] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[3]),
        .Q(Q[3]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[4] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[4]),
        .Q(Q[4]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[5] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[5]),
        .Q(Q[5]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[6] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[6]),
        .Q(Q[6]),
        .R(reset_out));
  FDRE #(
    .INIT(1'b0)) 
    \gmii_txd_out_reg[7] 
       (.C(CLK),
        .CE(E),
        .D(gmii_txd[7]),
        .Q(Q[7]),
        .R(reset_out));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2023.2"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
TCSZ2Ye5IRfHavlF8Mno1PI9xixWuSiNh3ssU1FQtkjW1fmNtc2c3x12slL242UQayI0rzZTqe6S
edtecLHTOnzxXpCZjjU8NFmgLPerTSDZ1W5YhyIi9j0Ap4YBpvaA1ojM0+r0Cx+dMOXohQGeyljq
+fnTaFTUe2678DxpqHk=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
NIzZVKMB1/8UX2qb4BB+VXCafEKXsrn7axB1cJDPqDCzSyt/2KG1NEEZTDHZVzIr8Bf9501PyXmL
VowTAAXX/RopKyKOM1xJN/qLtqXxegH2a4dIkUxDIIclIcbv/smna9VCwI7m6JhrnKsNciTTilgR
27S/h6JPpZsZAEmsNxxTC70WQhQSM8TlHJjZg3KDc5KTnvC/mVTk6I05U6x0Bdd1YR9GBvhwRqhP
B1ukL/1JVOwR9Ce9p+EHFE/xyApypCjQPGwq+8IFQgS8wltVZHX6eSMw17Q0wGCY+LHduRTA+abV
LvAR0NPf7PKQUSCECe2mBbLPO7wD4BO5RAkJeA==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
udw4XxxzcaDNM1qWnRgZ2JEM1MMqnKwKVqha/krU9EyUAsyATjQEMBqjlOHw5QXMU2jjizlL20Nl
h2pF7iKo1S+7TS54Y/UIJANp+Dl46V/qfy6/yBnE4YclHON1k0jRao4C6T951tgXuCAIQEmXbr87
aJfL2dNqORH+TDKUBdc=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
JFe89rPDaiIUicPDNoXCg8pJUoYRyVDoW/5yE4T0Cp9xDHtuIyKQVbC7jVb92OsgJ5GHDm7DH2D2
rYZKrdCIqPt2jo7DG6bcJuDFcisZb11HLlYWNsK2Vqs9DdsTPViykeE05CD5AgfDxb983x8F1meK
w8zjeGoD44djsaRA+lvP1zLhl24q5LWFJdPSyIT7uWZwhxHqlyJu85ToXLuwZQZO76Mp+1mitxDy
vleizC5rnk/4hqxfEFS21Qi1TwCz5hdU+H3nA3dTe1KRY+obbFP7sRWKfmr9Rcf9enRvbaEbLoJA
9ADkl72jc1Aqlnd+YCGq4EmbElbWLxblpamncA==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
IV5qOrW4jXfiGt6hz/YcNm+/H3ij0v503CF3Kvut91tUWldzNzyLt4pIZEWEzSmn6RcpcLNN88po
1kt45UdSBz+mL5HDQaw4J+VGD/cCBmW1jnOclCf82kwju1MIDfa2EKicjqaykCUROxV7cwg07FFp
clLfIwd4kxgSWnGzeZi1IGezx7OpBsAkBTz9ha4WttEm0+D29DF9O4GaQl6q8IBeA0QIrO10EESt
slfRi2evxdOeTZBVFoXU91OszneH/prZqyCsHeyvTa8PABTZ+Y4CH6ICZCXRn7QTNJgoYSGABuPs
87saNJgzomjyaO6IzGl1fBgMIsIurKw90DE8Jw==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2022_10", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Eek/EeBa5kEiakvxzHC3fZ0NXCsvWnLN8FYKLyImepfBUv2jdVDY2j6Qs928DJaMO8pBuO9SGcu3
47rhcN1DAjZza5Ac83W24fngY1+YWblivVc8AoggXS1t2Y7Dy1vf9+ZxUdOvq63sje+fDJxapZwK
3HQGdtBX86RTaUS5K+HyI1FTmcIhUYmJWmxQjIxLla7FF1QZ4XpTCfqAG5i7ZKlYSoDFb8sjCRG4
XWFuk1dbL2UfZPxXZ7XHIm+03Ck/JsHtsjLCc8oTB/9MLom2HX9SjX8H6tFbEXR1NatCFWQ04JKL
kHSYD/xDlwjhN9CRvowRhNJaYSmKQT646hlNoA==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
gaID+cgqOdyoJPDKM9JAyimEjoxNakxuNjYf52N14HEyn4NQksF7thq/bXWc82vmfdc8aodx1+ky
i8uuKszW1WwV+apGSqk7YXBCxx3ACfMsPzNzeDQ2HVzGfznpQD80Eu7I7iwtz3k5Mr31iaeM1kQa
oddk6CkVESI8CD21PQHMVeu0LKLZJp8k8NHf3i0UOXsP5o768iecieYQh2VYXZ6HORDDyd+IpDB1
CAFBZctXco8C1w74wCB0LXUSYInc5ythxBURkPPTJ1GBuXpoQGZD2sNiI2Htl0y1toEdfgExWZ+0
+4Docnd9TgOGhAhZzUcj3c+6cQNbgCB847/G6w==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
tEBTlBoXowC0cOrrCu9pEZ6t9FjMS6GWThbzsXMvR2xb9HBcccdvXT7EfASM09KkNzvlYoyNBWct
0TRl1BNzzlomu3G857U6kezS+CCRF/K2qOhhxHFxEfuM0qblRVdNHoCGGMM4PkE/rt9M7IqYoXQg
WOHI1ydpZZn08aVL9QYJgz6ZuVHNLwSpL6rjFFDXV1cB82gVFBkRP/0NxpGW2WH6YA/MJ0czV0ji
o0umOWluEwUObdytKX1lfuNYimI0ziWrovqq2osL8J7NBKDUl2R6gJ51DObsTBgC8uyUHVibyNHy
nhzTpwcBeeXdtAueCg1BlHDIwglcMUdy0sBZEyHM/CLzpxgr1A+uUcmzlWx1drrc8lRNwGMFDDJQ
9OzoHBABtNt8N3bbO8A+rE9HtsjMVr1TxHhUTxBhWcypwra+xzsGykln/IP3JBwwQR0+d+V8/Vec
5Bh03crJTvJZUbYidozNoaPOfnHi0NxFDNdL7L1i75T+H6bqeE1ADR/4

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
GM0AtcDH85MjCjnA/pijf0ZCJap8X+OYUX7W1StOwznqG2XPd9DhtvTyqD0c8/7BTdeCzGUK5iqe
QiGwEcy1dCrSVZW0KtjFXllkYV2ai3/Qn7Bgg1YuzxifEFKe6ClTsByfgjqRdyZeNSAldwvx9ZtT
0ZhijV96K37zXwfXFeKDmxOZOV553ovWfXGekaS1EPmSluoDYBMQKc2XV+ZUXR7n5NI/6E3QdK7K
utsZyrFYyJdYW8Po28hQf1nWeQP6+PxQB6wi/P6sUzudntNcQ7uLRr4PTz6twPPqYwUF+7YW8baL
p/2EFPf8y6fBb+DOBCnzmGZvmq+M2qQot14r+g==

`pragma protect key_keyowner="Synplicity", key_keyname="SYNP15_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Ot2lizvbpt8emXxoZl10oi4H/aTQTzrHDg0mf7DDs3BS7iyFsRmaQCG/BRF/mwjlw+EbST4/x/DJ
d6Hf6LIa6mllnMD6G+uVHQ1z31eASHPw3m+WnPMr/zCNuebPcDitgiXWmq3SAS9byYvxiwcDvjn6
CMh89pvlx8xLiFUoo5j/lAPe4cPBJwSMleQLLB989s6rByi0lVW0QiLTzakaB8DHBMvhIYEfi74m
Lxby6+nYRGrAUKPOemP0Ag/LW83Eup/Wa0jVOtxzlj3foiYhg2mWCt2zyFhgQsDA+oEsDa/KZc0F
OUzOI8vFDrwPmYRwd2ejFI9Nz3/1mb05VQmDRA==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-PREC-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
OamBwohUIPOIa5bsJvu3upqnGl4f3jNYS35bg4S059C9qVDgQJcw/it81deNA5zFvzX3Cq9CiO9K
zl02VsdpFgNPjSwEO8F47LJZ4fHx99EmESBogsNwUNitzkuYTLCb7F7ZF2WSJExQ0KsYt+TRp2UH
yQEvpM1lHQYUXxzjw08qUI5ssSnOsQFydvP8BwA/6aGrVJ+LuEgPVdMqLBn0EeAmRsynxJ7OhPGV
DlvHQwtVuBrkvjQHED/Ye43ZIeWPm/xOcjNfZjYeOvdEJqTbaviR0Fo1LFx8EX80uvdFeK55ywDN
wzoZ4cVH87f6VwR1xHdo0JpVxrajZpSZ0jPudw==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 292768)
`pragma protect data_block
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
SMJIe+97NOoxzHg9DxWu7A==
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
